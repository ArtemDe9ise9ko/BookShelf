{"ast":null,"code":"/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @param {?} n\n * @param {?} x\n * @return {?}\n */\nfunction mod(n, x) {\n  return (n % x + x) % x;\n}\n/**\n * @param {?} num\n * @return {?}\n */\n\n\nfunction absFloor(num) {\n  return num < 0 ? Math.ceil(num) || 0 : Math.floor(num);\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @param {?} str\n * @return {?}\n */\n\n\nfunction isString(str) {\n  return typeof str === 'string';\n}\n/**\n * @param {?} value\n * @return {?}\n */\n\n\nfunction isDate(value) {\n  return value instanceof Date || Object.prototype.toString.call(value) === '[object Date]';\n}\n/**\n * @param {?} value\n * @return {?}\n */\n\n\nfunction isBoolean(value) {\n  return value === true || value === false;\n}\n/**\n * @param {?} date\n * @return {?}\n */\n\n\nfunction isDateValid(date) {\n  return date && date.getTime && !isNaN(date.getTime());\n}\n/**\n * @param {?} fn\n * @return {?}\n */\n\n\nfunction isFunction(fn) {\n  return fn instanceof Function || Object.prototype.toString.call(fn) === '[object Function]';\n}\n/**\n * @param {?=} value\n * @return {?}\n */\n\n\nfunction isNumber(value) {\n  return typeof value === 'number' || Object.prototype.toString.call(value) === '[object Number]';\n}\n/**\n * @template T\n * @param {?=} input\n * @return {?}\n */\n\n\nfunction isArray(input) {\n  return input instanceof Array || Object.prototype.toString.call(input) === '[object Array]';\n}\n/**\n * @template T\n * @param {?} a\n * @param {?} b\n * @return {?}\n */\n\n\nfunction hasOwnProp(a\n/*object*/\n, b) {\n  return Object.prototype.hasOwnProperty.call(a, b);\n}\n/**\n * @template T\n * @param {?} input\n * @return {?}\n */\n\n\nfunction isObject(input\n/*object*/\n) {\n  // IE8 will treat undefined and null as object if it wasn't for\n  // input != null\n  return input != null && Object.prototype.toString.call(input) === '[object Object]';\n}\n/**\n * @param {?} obj\n * @return {?}\n */\n\n\nfunction isObjectEmpty(obj) {\n  if (Object.getOwnPropertyNames) {\n    return Object.getOwnPropertyNames(obj).length === 0;\n  }\n  /** @type {?} */\n\n\n  let k;\n\n  for (k in obj) {\n    if (obj.hasOwnProperty(k)) {\n      return false;\n    }\n  }\n\n  return true;\n}\n/**\n * @param {?} input\n * @return {?}\n */\n\n\nfunction isUndefined(input) {\n  return input === void 0;\n}\n/**\n * @template T\n * @param {?} argumentForCoercion\n * @return {?}\n */\n\n\nfunction toInt(argumentForCoercion) {\n  /** @type {?} */\n  const coercedNumber = +argumentForCoercion;\n  /** @type {?} */\n\n  let value = 0;\n\n  if (coercedNumber !== 0 && isFinite(coercedNumber)) {\n    value = absFloor(coercedNumber);\n  }\n\n  return value;\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/** @type {?} */\n\n\nconst aliases = {};\n/** @type {?} */\n\nconst _mapUnits = {\n  date: 'day',\n  hour: 'hours',\n  minute: 'minutes',\n  second: 'seconds',\n  millisecond: 'milliseconds'\n};\n/**\n * @param {?} unit\n * @param {?} shorthand\n * @return {?}\n */\n\nfunction addUnitAlias(unit, shorthand) {\n  /** @type {?} */\n  const lowerCase = unit.toLowerCase();\n  /** @type {?} */\n\n  let _unit = unit;\n\n  if (lowerCase in _mapUnits) {\n    _unit = _mapUnits[lowerCase];\n  }\n\n  aliases[lowerCase] = aliases[`${lowerCase}s`] = aliases[shorthand] = _unit;\n}\n/**\n * @param {?} units\n * @return {?}\n */\n\n\nfunction normalizeUnits(units) {\n  return isString(units) ? aliases[units] || aliases[units.toLowerCase()] : undefined;\n}\n/**\n * @param {?} inputObject\n * @return {?}\n */\n\n\nfunction normalizeObjectUnits(inputObject) {\n  /** @type {?} */\n  const normalizedInput = {};\n  /** @type {?} */\n\n  let normalizedProp;\n  /** @type {?} */\n\n  let prop;\n\n  for (prop in inputObject) {\n    if (hasOwnProp(inputObject, prop)) {\n      normalizedProp = normalizeUnits(prop);\n\n      if (normalizedProp) {\n        normalizedInput[normalizedProp] = inputObject[prop];\n      }\n    }\n  }\n\n  return (\n    /** @type {?} */\n    normalizedInput\n  );\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// place in new Date([array])\n\n/** @type {?} */\n\n\nconst YEAR = 0;\n/** @type {?} */\n\nconst MONTH = 1;\n/** @type {?} */\n\nconst DATE = 2;\n/** @type {?} */\n\nconst HOUR = 3;\n/** @type {?} */\n\nconst MINUTE = 4;\n/** @type {?} */\n\nconst SECOND = 5;\n/** @type {?} */\n\nconst MILLISECOND = 6;\n/** @type {?} */\n\nconst WEEK = 7;\n/** @type {?} */\n\nconst WEEKDAY = 8;\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @param {?} num\n * @param {?} targetLength\n * @param {?=} forceSign\n * @return {?}\n */\n\nfunction zeroFill(num, targetLength, forceSign) {\n  /** @type {?} */\n  const absNumber = `${Math.abs(num)}`;\n  /** @type {?} */\n\n  const zerosToFill = targetLength - absNumber.length;\n  /** @type {?} */\n\n  const sign = num >= 0;\n  /** @type {?} */\n\n  const _sign = sign ? forceSign ? '+' : '' : '-'; // todo: this is crazy slow\n\n  /** @type {?} */\n\n\n  const _zeros = Math.pow(10, Math.max(0, zerosToFill)).toString().substr(1);\n\n  return _sign + _zeros + absNumber;\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/** @type {?} */\n\n\nlet formatFunctions = {};\n/** @type {?} */\n\nlet formatTokenFunctions = {}; // tslint:disable-next-line\n\n/** @type {?} */\n\nconst formattingTokens = /(\\[[^\\[]*\\])|(\\\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|YYYYYY|YYYYY|YYYY|YY|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g; // token:    'M'\n// padded:   ['MM', 2]\n// ordinal:  'Mo'\n// callback: function () { this.month() + 1 }\n\n/**\n * @param {?} token\n * @param {?} padded\n * @param {?} ordinal\n * @param {?} callback\n * @return {?}\n */\n\nfunction addFormatToken(token, padded, ordinal, callback) {\n  if (token) {\n    formatTokenFunctions[token] = callback;\n  }\n\n  if (padded) {\n    formatTokenFunctions[padded[0]] =\n    /**\n    * @return {?}\n    */\n    function () {\n      return zeroFill(callback.apply(null, arguments), padded[1], padded[2]);\n    };\n  }\n\n  if (ordinal) {\n    formatTokenFunctions[ordinal] =\n    /**\n    * @param {?} date\n    * @param {?} opts\n    * @return {?}\n    */\n    function (date, opts) {\n      return opts.locale.ordinal(callback.apply(null, arguments), token);\n    };\n  }\n}\n/**\n * @param {?} format\n * @return {?}\n */\n\n\nfunction makeFormatFunction(format) {\n  /** @type {?} */\n  const array = format.match(formattingTokens);\n  /** @type {?} */\n\n  const length = array.length;\n  /** @type {?} */\n\n  const formatArr = new Array(length);\n\n  for (let i = 0; i < length; i++) {\n    formatArr[i] = formatTokenFunctions[array[i]] ? formatTokenFunctions[array[i]] : removeFormattingTokens(array[i]);\n  }\n\n  return (\n    /**\n    * @param {?} date\n    * @param {?} locale\n    * @param {?} isUTC\n    * @param {?=} offset\n    * @return {?}\n    */\n    function (date, locale, isUTC, offset = 0) {\n      /** @type {?} */\n      let output = '';\n\n      for (let j = 0; j < length; j++) {\n        output += isFunction(formatArr[j]) ?\n        /** @type {?} */\n        formatArr[j].call(null, date, {\n          format,\n          locale,\n          isUTC,\n          offset\n        }) : formatArr[j];\n      }\n\n      return output;\n    }\n  );\n}\n/**\n * @param {?} input\n * @return {?}\n */\n\n\nfunction removeFormattingTokens(input) {\n  if (input.match(/\\[[\\s\\S]/)) {\n    return input.replace(/^\\[|\\]$/g, '');\n  }\n\n  return input.replace(/\\\\/g, '');\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @param {?=} y\n * @param {?=} m\n * @param {?=} d\n * @return {?}\n */\n\n\nfunction createUTCDate(y, m, d) {\n  /** @type {?} */\n  const date = new Date(Date.UTC.apply(null, arguments)); // the Date.UTC function remaps years 0-99 to 1900-1999\n\n  if (y < 100 && y >= 0 && isFinite(date.getUTCFullYear())) {\n    date.setUTCFullYear(y);\n  }\n\n  return date;\n}\n/**\n * @param {?=} y\n * @param {?=} m\n * @param {?=} d\n * @param {?=} h\n * @param {?=} M\n * @param {?=} s\n * @param {?=} ms\n * @return {?}\n */\n\n\nfunction createDate(y, m = 0, d = 1, h = 0, M = 0, s = 0, ms = 0) {\n  /** @type {?} */\n  const date = new Date(y, m, d, h, M, s, ms); // the date constructor remaps years 0-99 to 1900-1999\n\n  if (y < 100 && y >= 0 && isFinite(date.getFullYear())) {\n    date.setFullYear(y);\n  }\n\n  return date;\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @param {?} date\n * @param {?=} isUTC\n * @return {?}\n */\n\n\nfunction getHours(date, isUTC = false) {\n  return isUTC ? date.getUTCHours() : date.getHours();\n}\n/**\n * @param {?} date\n * @param {?=} isUTC\n * @return {?}\n */\n\n\nfunction getMinutes(date, isUTC = false) {\n  return isUTC ? date.getUTCMinutes() : date.getMinutes();\n}\n/**\n * @param {?} date\n * @param {?=} isUTC\n * @return {?}\n */\n\n\nfunction getSeconds(date, isUTC = false) {\n  return isUTC ? date.getUTCSeconds() : date.getSeconds();\n}\n/**\n * @param {?} date\n * @param {?=} isUTC\n * @return {?}\n */\n\n\nfunction getMilliseconds(date, isUTC = false) {\n  return isUTC ? date.getUTCMilliseconds() : date.getMilliseconds();\n}\n/**\n * @param {?} date\n * @return {?}\n */\n\n\nfunction getTime(date) {\n  return date.getTime();\n}\n/**\n * @param {?} date\n * @param {?=} isUTC\n * @return {?}\n */\n\n\nfunction getDay(date, isUTC = false) {\n  return isUTC ? date.getUTCDay() : date.getDay();\n}\n/**\n * @param {?} date\n * @param {?=} isUTC\n * @return {?}\n */\n\n\nfunction getDate(date, isUTC = false) {\n  return isUTC ? date.getUTCDate() : date.getDate();\n}\n/**\n * @param {?} date\n * @param {?=} isUTC\n * @return {?}\n */\n\n\nfunction getMonth(date, isUTC = false) {\n  return isUTC ? date.getUTCMonth() : date.getMonth();\n}\n/**\n * @param {?} date\n * @param {?=} isUTC\n * @return {?}\n */\n\n\nfunction getFullYear(date, isUTC = false) {\n  return isUTC ? date.getUTCFullYear() : date.getFullYear();\n}\n/**\n * @param {?} date\n * @return {?}\n */\n\n\nfunction getUnixTime(date) {\n  return Math.floor(date.valueOf() / 1000);\n}\n/**\n * @param {?} date\n * @return {?}\n */\n\n\nfunction unix(date) {\n  return Math.floor(date.valueOf() / 1000);\n}\n/**\n * @param {?} date\n * @return {?}\n */\n\n\nfunction getFirstDayOfMonth(date) {\n  return createDate(date.getFullYear(), date.getMonth(), 1, date.getHours(), date.getMinutes(), date.getSeconds());\n}\n/**\n * @param {?} date\n * @return {?}\n */\n\n\nfunction daysInMonth(date) {\n  return _daysInMonth(date.getFullYear(), date.getMonth());\n}\n/**\n * @param {?} year\n * @param {?} month\n * @return {?}\n */\n\n\nfunction _daysInMonth(year, month) {\n  return new Date(Date.UTC(year, month + 1, 0)).getUTCDate();\n}\n/**\n * @param {?} date\n * @param {?} firstDayOfWeek\n * @return {?}\n */\n\n\nfunction isFirstDayOfWeek(date, firstDayOfWeek) {\n  return date.getDay() === firstDayOfWeek;\n}\n/**\n * @param {?} date1\n * @param {?} date2\n * @return {?}\n */\n\n\nfunction isSameMonth(date1, date2) {\n  if (!date1 || !date2) {\n    return false;\n  }\n\n  return isSameYear(date1, date2) && getMonth(date1) === getMonth(date2);\n}\n/**\n * @param {?} date1\n * @param {?} date2\n * @return {?}\n */\n\n\nfunction isSameYear(date1, date2) {\n  if (!date1 || !date2) {\n    return false;\n  }\n\n  return getFullYear(date1) === getFullYear(date2);\n}\n/**\n * @param {?} date1\n * @param {?} date2\n * @return {?}\n */\n\n\nfunction isSameDay(date1, date2) {\n  if (!date1 || !date2) {\n    return false;\n  }\n\n  return isSameYear(date1, date2) && isSameMonth(date1, date2) && getDate(date1) === getDate(date2);\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/** @type {?} */\n\n\nconst match1 = /\\d/; //       0 - 9\n\n/** @type {?} */\n\nconst match2 = /\\d\\d/; //      00 - 99\n\n/** @type {?} */\n\nconst match3 = /\\d{3}/; //     000 - 999\n\n/** @type {?} */\n\nconst match4 = /\\d{4}/; //    0000 - 9999\n\n/** @type {?} */\n\nconst match6 = /[+-]?\\d{6}/; // -999999 - 999999\n\n/** @type {?} */\n\nconst match1to2 = /\\d\\d?/; //       0 - 99\n\n/** @type {?} */\n\nconst match3to4 = /\\d\\d\\d\\d?/; //     999 - 9999\n\n/** @type {?} */\n\nconst match5to6 = /\\d\\d\\d\\d\\d\\d?/; //   99999 - 999999\n\n/** @type {?} */\n\nconst match1to3 = /\\d{1,3}/; //       0 - 999\n\n/** @type {?} */\n\nconst match1to4 = /\\d{1,4}/; //       0 - 9999\n\n/** @type {?} */\n\nconst match1to6 = /[+-]?\\d{1,6}/; // -999999 - 999999\n\n/** @type {?} */\n\nconst matchUnsigned = /\\d+/; //       0 - inf\n\n/** @type {?} */\n\nconst matchSigned = /[+-]?\\d+/; //    -inf - inf\n\n/** @type {?} */\n\nconst matchOffset = /Z|[+-]\\d\\d:?\\d\\d/gi; // +00:00 -00:00 +0000 -0000 or Z\n\n/** @type {?} */\n\nconst matchShortOffset = /Z|[+-]\\d\\d(?::?\\d\\d)?/gi; // +00 -00 +00:00 -00:00 +0000 -0000 or Z\n\n/** @type {?} */\n\nconst matchTimestamp = /[+-]?\\d+(\\.\\d{1,3})?/; // 123456789 123456789.123\n// any word (or two) characters or numbers including two/three word month in arabic.\n// includes scottish gaelic two word and hyphenated months\n// tslint:disable-next-line\n\n/** @type {?} */\n\nconst matchWord = /[0-9]{0,256}['a-z\\u00A0-\\u05FF\\u0700-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]{1,256}|[\\u0600-\\u06FF\\/]{1,256}(\\s*?[\\u0600-\\u06FF]{1,256}){1,2}/i;\n/** @type {?} */\n\nconst regexes = {};\n/**\n * @param {?} token\n * @param {?} regex\n * @param {?=} strictRegex\n * @return {?}\n */\n\nfunction addRegexToken(token, regex, strictRegex) {\n  if (isFunction(regex)) {\n    regexes[token] = regex;\n    return;\n  }\n\n  regexes[token] =\n  /**\n  * @param {?} isStrict\n  * @param {?} locale\n  * @return {?}\n  */\n  function (isStrict, locale) {\n    return isStrict && strictRegex ? strictRegex : regex;\n  };\n}\n/**\n * @param {?} token\n * @param {?} locale\n * @return {?}\n */\n\n\nfunction getParseRegexForToken(token, locale) {\n  /** @type {?} */\n  const _strict = false;\n\n  if (!hasOwnProp(regexes, token)) {\n    return new RegExp(unescapeFormat(token));\n  }\n\n  return regexes[token](_strict, locale);\n} // Code from http://stackoverflow.com/questions/3561493/is-there-a-regexp-escape-function-in-javascript\n\n/**\n * @param {?} str\n * @return {?}\n */\n\n\nfunction unescapeFormat(str) {\n  // tslint:disable-next-line\n  return regexEscape(str.replace('\\\\', '').replace(/\\\\(\\[)|\\\\(\\])|\\[([^\\]\\[]*)\\]|\\\\(.)/g,\n  /**\n  * @param {?} matched\n  * @param {?} p1\n  * @param {?} p2\n  * @param {?} p3\n  * @param {?} p4\n  * @return {?}\n  */\n  (matched, p1, p2, p3, p4) => p1 || p2 || p3 || p4));\n}\n/**\n * @param {?} str\n * @return {?}\n */\n\n\nfunction regexEscape(str) {\n  return str.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/** @type {?} */\n\n\nconst tokens = {};\n/**\n * @param {?} token\n * @param {?} callback\n * @return {?}\n */\n\nfunction addParseToken(token, callback) {\n  /** @type {?} */\n  const _token = isString(token) ? [token] : token;\n  /** @type {?} */\n\n\n  let func = callback;\n\n  if (isNumber(callback)) {\n    func =\n    /**\n    * @param {?} input\n    * @param {?} array\n    * @param {?} config\n    * @return {?}\n    */\n    function (input, array, config) {\n      array[callback] = toInt(input);\n      return config;\n    };\n  }\n\n  if (isArray(_token) && isFunction(func)) {\n    /** @type {?} */\n    let i;\n\n    for (i = 0; i < _token.length; i++) {\n      tokens[_token[i]] = func;\n    }\n  }\n}\n/**\n * @param {?} token\n * @param {?} callback\n * @return {?}\n */\n\n\nfunction addWeekParseToken(token, callback) {\n  addParseToken(token,\n  /**\n  * @param {?} input\n  * @param {?} array\n  * @param {?} config\n  * @param {?} _token\n  * @return {?}\n  */\n  function (input, array, config, _token) {\n    config._w = config._w || {};\n    return callback(input, config._w, config, _token);\n  });\n}\n/**\n * @param {?} token\n * @param {?} input\n * @param {?} config\n * @return {?}\n */\n\n\nfunction addTimeToArrayFromToken(token, input, config) {\n  if (input != null && hasOwnProp(tokens, token)) {\n    tokens[token](input, config._a, config, token);\n  }\n\n  return config;\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/** @type {?} */\n\n\nconst priorities = {};\n/**\n * @param {?} unit\n * @param {?} priority\n * @return {?}\n */\n\nfunction addUnitPriority(unit, priority) {\n  priorities[unit] = priority;\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @return {?}\n */\n\n\nfunction initDayOfMonth() {\n  // FORMATTING\n  addFormatToken('D', ['DD', 2, false], 'Do',\n  /**\n  * @param {?} date\n  * @param {?} opts\n  * @return {?}\n  */\n  function (date, opts) {\n    return getDate(date, opts.isUTC).toString(10);\n  }); // ALIASES\n\n  addUnitAlias('date', 'D'); // PRIOROITY\n\n  addUnitPriority('date', 9); // PARSING\n\n  addRegexToken('D', match1to2);\n  addRegexToken('DD', match1to2, match2);\n  addRegexToken('Do',\n  /**\n  * @param {?} isStrict\n  * @param {?} locale\n  * @return {?}\n  */\n  function (isStrict, locale) {\n    return locale._dayOfMonthOrdinalParse || locale._ordinalParse;\n  });\n  addParseToken(['D', 'DD'], DATE);\n  addParseToken('Do',\n  /**\n  * @param {?} input\n  * @param {?} array\n  * @param {?} config\n  * @return {?}\n  */\n  function (input, array, config) {\n    array[DATE] = toInt(input.match(match1to2)[0]);\n    return config;\n  });\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @return {?}\n */\n\n\nfunction defaultParsingFlags() {\n  // We need to deep clone this object.\n  return {\n    empty: false,\n    unusedTokens: [],\n    unusedInput: [],\n    overflow: -2,\n    charsLeftOver: 0,\n    nullInput: false,\n    invalidMonth: null,\n    invalidFormat: false,\n    userInvalidated: false,\n    iso: false,\n    parsedDateParts: [],\n    meridiem: null,\n    rfc2822: false,\n    weekdayMismatch: false\n  };\n}\n/**\n * @param {?} config\n * @return {?}\n */\n\n\nfunction getParsingFlags(config) {\n  if (config._pf == null) {\n    config._pf = defaultParsingFlags();\n  }\n\n  return config._pf;\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// FORMATTING\n\n/**\n * @param {?} date\n * @param {?} opts\n * @return {?}\n */\n\n\nfunction getYear(date, opts) {\n  if (opts.locale.getFullYear) {\n    return opts.locale.getFullYear(date, opts.isUTC).toString();\n  }\n\n  return getFullYear(date, opts.isUTC).toString();\n}\n/**\n * @return {?}\n */\n\n\nfunction initYear() {\n  addFormatToken('Y', null, null,\n  /**\n  * @param {?} date\n  * @param {?} opts\n  * @return {?}\n  */\n  function (date, opts) {\n    /** @type {?} */\n    const y = getFullYear(date, opts.isUTC);\n    return y <= 9999 ? y.toString(10) : `+${y}`;\n  });\n  addFormatToken(null, ['YY', 2, false], null,\n  /**\n  * @param {?} date\n  * @param {?} opts\n  * @return {?}\n  */\n  function (date, opts) {\n    return (getFullYear(date, opts.isUTC) % 100).toString(10);\n  });\n  addFormatToken(null, ['YYYY', 4, false], null, getYear);\n  addFormatToken(null, ['YYYYY', 5, false], null, getYear);\n  addFormatToken(null, ['YYYYYY', 6, true], null, getYear); // ALIASES\n\n  addUnitAlias('year', 'y'); // PRIORITIES\n\n  addUnitPriority('year', 1); // PARSING\n\n  addRegexToken('Y', matchSigned);\n  addRegexToken('YY', match1to2, match2);\n  addRegexToken('YYYY', match1to4, match4);\n  addRegexToken('YYYYY', match1to6, match6);\n  addRegexToken('YYYYYY', match1to6, match6);\n  addParseToken(['YYYYY', 'YYYYYY'], YEAR);\n  addParseToken('YYYY',\n  /**\n  * @param {?} input\n  * @param {?} array\n  * @param {?} config\n  * @return {?}\n  */\n  function (input, array, config) {\n    array[YEAR] = input.length === 2 ? parseTwoDigitYear(input) : toInt(input);\n    return config;\n  });\n  addParseToken('YY',\n  /**\n  * @param {?} input\n  * @param {?} array\n  * @param {?} config\n  * @return {?}\n  */\n  function (input, array, config) {\n    array[YEAR] = parseTwoDigitYear(input);\n    return config;\n  });\n  addParseToken('Y',\n  /**\n  * @param {?} input\n  * @param {?} array\n  * @param {?} config\n  * @return {?}\n  */\n  function (input, array, config) {\n    array[YEAR] = parseInt(input, 10);\n    return config;\n  });\n}\n/**\n * @param {?} input\n * @return {?}\n */\n\n\nfunction parseTwoDigitYear(input) {\n  return toInt(input) + (toInt(input) > 68 ? 1900 : 2000);\n}\n/**\n * @param {?} year\n * @return {?}\n */\n\n\nfunction daysInYear(year) {\n  return isLeapYear(year) ? 366 : 365;\n}\n/**\n * @param {?} year\n * @return {?}\n */\n\n\nfunction isLeapYear(year) {\n  return year % 4 === 0 && year % 100 !== 0 || year % 400 === 0;\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// todo: this is duplicate, source in date-getters.ts\n\n/**\n * @param {?} year\n * @param {?} month\n * @return {?}\n */\n\n\nfunction daysInMonth$1(year, month) {\n  if (isNaN(year) || isNaN(month)) {\n    return NaN;\n  }\n  /** @type {?} */\n\n\n  const modMonth = mod(month, 12);\n  /** @type {?} */\n\n  const _year = year + (month - modMonth) / 12;\n\n  return modMonth === 1 ? isLeapYear(_year) ? 29 : 28 : 31 - modMonth % 7 % 2;\n}\n/**\n * @return {?}\n */\n\n\nfunction initMonth() {\n  // FORMATTING\n  addFormatToken('M', ['MM', 2, false], 'Mo',\n  /**\n  * @param {?} date\n  * @param {?} opts\n  * @return {?}\n  */\n  function (date, opts) {\n    return (getMonth(date, opts.isUTC) + 1).toString(10);\n  });\n  addFormatToken('MMM', null, null,\n  /**\n  * @param {?} date\n  * @param {?} opts\n  * @return {?}\n  */\n  function (date, opts) {\n    return opts.locale.monthsShort(date, opts.format, opts.isUTC);\n  });\n  addFormatToken('MMMM', null, null,\n  /**\n  * @param {?} date\n  * @param {?} opts\n  * @return {?}\n  */\n  function (date, opts) {\n    return opts.locale.months(date, opts.format, opts.isUTC);\n  }); // ALIASES\n\n  addUnitAlias('month', 'M'); // PRIORITY\n\n  addUnitPriority('month', 8); // PARSING\n\n  addRegexToken('M', match1to2);\n  addRegexToken('MM', match1to2, match2);\n  addRegexToken('MMM',\n  /**\n  * @param {?} isStrict\n  * @param {?} locale\n  * @return {?}\n  */\n  function (isStrict, locale) {\n    return locale.monthsShortRegex(isStrict);\n  });\n  addRegexToken('MMMM',\n  /**\n  * @param {?} isStrict\n  * @param {?} locale\n  * @return {?}\n  */\n  function (isStrict, locale) {\n    return locale.monthsRegex(isStrict);\n  });\n  addParseToken(['M', 'MM'],\n  /**\n  * @param {?} input\n  * @param {?} array\n  * @param {?} config\n  * @return {?}\n  */\n  function (input, array, config) {\n    array[MONTH] = toInt(input) - 1;\n    return config;\n  });\n  addParseToken(['MMM', 'MMMM'],\n  /**\n  * @param {?} input\n  * @param {?} array\n  * @param {?} config\n  * @param {?} token\n  * @return {?}\n  */\n  function (input, array, config, token) {\n    /** @type {?} */\n    const month = config._locale.monthsParse(input, token, config._strict); // if we didn't find a month name, mark the date as invalid.\n\n\n    if (month != null) {\n      array[MONTH] = month;\n    } else {\n      getParsingFlags(config).invalidMonth = !!input;\n    }\n\n    return config;\n  });\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/** @type {?} */\n\n\nconst defaultTimeUnit = {\n  year: 0,\n  month: 0,\n  day: 0,\n  hour: 0,\n  minute: 0,\n  seconds: 0\n};\n/**\n * @param {?} date\n * @param {?} unit\n * @return {?}\n */\n\nfunction shiftDate(date, unit) {\n  /** @type {?} */\n  const _unit = Object.assign({}, defaultTimeUnit, unit);\n  /** @type {?} */\n\n\n  const year = date.getFullYear() + (_unit.year || 0);\n  /** @type {?} */\n\n  const month = date.getMonth() + (_unit.month || 0);\n  /** @type {?} */\n\n  let day = date.getDate() + (_unit.day || 0);\n\n  if (_unit.month && !_unit.day) {\n    day = Math.min(day, daysInMonth$1(year, month));\n  }\n\n  return createDate(year, month, day, date.getHours() + (_unit.hour || 0), date.getMinutes() + (_unit.minute || 0), date.getSeconds() + (_unit.seconds || 0));\n}\n/**\n * @param {?} date\n * @param {?} unit\n * @return {?}\n */\n\n\nfunction setFullDate(date, unit) {\n  return createDate(getNum(date.getFullYear(), unit.year), getNum(date.getMonth(), unit.month), 1, // day, to avoid issue with wrong months selection at the end of current month (#5371)\n  getNum(date.getHours(), unit.hour), getNum(date.getMinutes(), unit.minute), getNum(date.getSeconds(), unit.seconds), getNum(date.getMilliseconds(), unit.milliseconds));\n}\n/**\n * @param {?} def\n * @param {?=} num\n * @return {?}\n */\n\n\nfunction getNum(def, num) {\n  return isNumber(num) ? num : def;\n}\n/**\n * @param {?} date\n * @param {?} value\n * @param {?=} isUTC\n * @return {?}\n */\n\n\nfunction setFullYear(date, value, isUTC) {\n  /** @type {?} */\n  const _month = getMonth(date, isUTC);\n  /** @type {?} */\n\n\n  const _date = getDate(date, isUTC);\n  /** @type {?} */\n\n\n  const _year = getFullYear(date, isUTC);\n\n  if (isLeapYear(_year) && _month === 1 && _date === 29) {\n    /** @type {?} */\n    const _daysInMonth = daysInMonth$1(value, _month);\n\n    isUTC ? date.setUTCFullYear(value, _month, _daysInMonth) : date.setFullYear(value, _month, _daysInMonth);\n  }\n\n  isUTC ? date.setUTCFullYear(value) : date.setFullYear(value);\n  return date;\n}\n/**\n * @param {?} date\n * @param {?} value\n * @param {?=} isUTC\n * @return {?}\n */\n\n\nfunction setMonth(date, value, isUTC) {\n  /** @type {?} */\n  const dayOfMonth = Math.min(getDate(date), daysInMonth$1(getFullYear(date), value));\n  isUTC ? date.setUTCMonth(value, dayOfMonth) : date.setMonth(value, dayOfMonth);\n  return date;\n}\n/**\n * @param {?} date\n * @param {?} value\n * @param {?=} isUTC\n * @return {?}\n */\n\n\nfunction setDay(date, value, isUTC) {\n  isUTC ? date.setUTCDate(value) : date.setDate(value);\n  return date;\n}\n/**\n * @param {?} date\n * @param {?} value\n * @param {?=} isUTC\n * @return {?}\n */\n\n\nfunction setHours(date, value, isUTC) {\n  isUTC ? date.setUTCHours(value) : date.setHours(value);\n  return date;\n}\n/**\n * @param {?} date\n * @param {?} value\n * @param {?=} isUTC\n * @return {?}\n */\n\n\nfunction setMinutes(date, value, isUTC) {\n  isUTC ? date.setUTCMinutes(value) : date.setMinutes(value);\n  return date;\n}\n/**\n * @param {?} date\n * @param {?} value\n * @param {?=} isUTC\n * @return {?}\n */\n\n\nfunction setSeconds(date, value, isUTC) {\n  isUTC ? date.setUTCSeconds(value) : date.setSeconds(value);\n  return date;\n}\n/**\n * @param {?} date\n * @param {?} value\n * @param {?=} isUTC\n * @return {?}\n */\n\n\nfunction setMilliseconds(date, value, isUTC) {\n  isUTC ? date.setUTCMilliseconds(value) : date.setMilliseconds(value);\n  return date;\n}\n/**\n * @param {?} date\n * @param {?} value\n * @param {?=} isUTC\n * @return {?}\n */\n\n\nfunction setDate(date, value, isUTC) {\n  isUTC ? date.setUTCDate(value) : date.setDate(value);\n  return date;\n}\n/**\n * @param {?} date\n * @param {?} value\n * @return {?}\n */\n\n\nfunction setTime(date, value) {\n  date.setTime(value);\n  return date;\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// fastest way to clone date\n// https://jsperf.com/clone-date-object2\n\n/**\n * @param {?} date\n * @return {?}\n */\n\n\nfunction cloneDate(date) {\n  return new Date(date.getTime());\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @param {?} date\n * @param {?} unit\n * @param {?=} isUTC\n * @return {?}\n */\n\n\nfunction startOf(date, unit, isUTC) {\n  /** @type {?} */\n  const _date = cloneDate(date); // the following switch intentionally omits break keywords\n  // to utilize falling through the cases.\n\n\n  switch (unit) {\n    case 'year':\n      setMonth(_date, 0, isUTC);\n\n    /* falls through */\n\n    case 'quarter':\n    case 'month':\n      setDate(_date, 1, isUTC);\n\n    /* falls through */\n\n    case 'week':\n    case 'isoWeek':\n    case 'day':\n    case 'date':\n      setHours(_date, 0, isUTC);\n\n    /* falls through */\n\n    case 'hours':\n      setMinutes(_date, 0, isUTC);\n\n    /* falls through */\n\n    case 'minutes':\n      setSeconds(_date, 0, isUTC);\n\n    /* falls through */\n\n    case 'seconds':\n      setMilliseconds(_date, 0, isUTC);\n  } // weeks are a special case\n\n\n  if (unit === 'week') {\n    setLocaleDayOfWeek(_date, 0, {\n      isUTC\n    });\n  }\n\n  if (unit === 'isoWeek') {\n    setISODayOfWeek(_date, 1);\n  } // quarters are also special\n\n\n  if (unit === 'quarter') {\n    setMonth(_date, Math.floor(getMonth(_date, isUTC) / 3) * 3, isUTC);\n  }\n\n  return _date;\n}\n/**\n * @param {?} date\n * @param {?} unit\n * @param {?=} isUTC\n * @return {?}\n */\n\n\nfunction endOf(date, unit, isUTC) {\n  /** @type {?} */\n  let _unit = unit; // 'date' is an alias for 'day', so it should be considered as such.\n\n  if (_unit === 'date') {\n    _unit = 'day';\n  }\n  /** @type {?} */\n\n\n  const start = startOf(date, _unit, isUTC);\n  /** @type {?} */\n\n  const _step = add(start, 1, _unit === 'isoWeek' ? 'week' : _unit, isUTC);\n  /** @type {?} */\n\n\n  const res = subtract(_step, 1, 'milliseconds', isUTC);\n  return res;\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @return {?}\n */\n\n\nfunction initDayOfYear() {\n  // FORMATTING\n  addFormatToken('DDD', ['DDDD', 3, false], 'DDDo',\n  /**\n  * @param {?} date\n  * @return {?}\n  */\n  function (date) {\n    return getDayOfYear(date).toString(10);\n  }); // ALIASES\n\n  addUnitAlias('dayOfYear', 'DDD'); // PRIORITY\n\n  addUnitPriority('dayOfYear', 4);\n  addRegexToken('DDD', match1to3);\n  addRegexToken('DDDD', match3);\n  addParseToken(['DDD', 'DDDD'],\n  /**\n  * @param {?} input\n  * @param {?} array\n  * @param {?} config\n  * @return {?}\n  */\n  function (input, array, config) {\n    config._dayOfYear = toInt(input);\n    return config;\n  });\n}\n/**\n * @param {?} date\n * @param {?=} isUTC\n * @return {?}\n */\n\n\nfunction getDayOfYear(date, isUTC) {\n  /** @type {?} */\n  const date1 = +startOf(date, 'day', isUTC);\n  /** @type {?} */\n\n  const date2 = +startOf(date, 'year', isUTC);\n  /** @type {?} */\n\n  const someDate = date1 - date2;\n  /** @type {?} */\n\n  const oneDay = 1000 * 60 * 60 * 24;\n  return Math.round(someDate / oneDay) + 1;\n}\n/**\n * @param {?} date\n * @param {?} input\n * @return {?}\n */\n\n\nfunction setDayOfYear(date, input) {\n  /** @type {?} */\n  const dayOfYear = getDayOfYear(date);\n  return add(date, input - dayOfYear, 'day');\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @param {?} year\n * @param {?} dow\n * @param {?} doy\n * @return {?}\n */\n\n\nfunction firstWeekOffset(year, dow, doy) {\n  // first-week day -- which january is always in the first week (4 for iso, 1 for other)\n\n  /** @type {?} */\n  const fwd = dow - doy + 7; // first-week day local weekday -- which local weekday is fwd\n\n  /** @type {?} */\n\n  const fwdlw = (createUTCDate(year, 0, fwd).getUTCDay() - dow + 7) % 7;\n  return -fwdlw + fwd - 1;\n} // https://en.wikipedia.org/wiki/ISO_week_date#Calculating_a_date_given_the_year.2C_week_number_and_weekday\n\n/**\n * @param {?} year\n * @param {?} week\n * @param {?} weekday\n * @param {?} dow\n * @param {?} doy\n * @return {?}\n */\n\n\nfunction dayOfYearFromWeeks(year, week, weekday, dow, doy) {\n  /** @type {?} */\n  const localWeekday = (7 + weekday - dow) % 7;\n  /** @type {?} */\n\n  const weekOffset = firstWeekOffset(year, dow, doy);\n  /** @type {?} */\n\n  const dayOfYear = 1 + 7 * (week - 1) + localWeekday + weekOffset;\n  /** @type {?} */\n\n  let resYear;\n  /** @type {?} */\n\n  let resDayOfYear;\n\n  if (dayOfYear <= 0) {\n    resYear = year - 1;\n    resDayOfYear = daysInYear(resYear) + dayOfYear;\n  } else if (dayOfYear > daysInYear(year)) {\n    resYear = year + 1;\n    resDayOfYear = dayOfYear - daysInYear(year);\n  } else {\n    resYear = year;\n    resDayOfYear = dayOfYear;\n  }\n\n  return {\n    year: resYear,\n    dayOfYear: resDayOfYear\n  };\n}\n/**\n * @param {?} date\n * @param {?} dow\n * @param {?} doy\n * @param {?=} isUTC\n * @return {?}\n */\n\n\nfunction weekOfYear(date, dow, doy, isUTC) {\n  /** @type {?} */\n  const weekOffset = firstWeekOffset(getFullYear(date, isUTC), dow, doy);\n  /** @type {?} */\n\n  const week = Math.floor((getDayOfYear(date, isUTC) - weekOffset - 1) / 7) + 1;\n  /** @type {?} */\n\n  let resWeek;\n  /** @type {?} */\n\n  let resYear;\n\n  if (week < 1) {\n    resYear = getFullYear(date, isUTC) - 1;\n    resWeek = week + weeksInYear(resYear, dow, doy);\n  } else if (week > weeksInYear(getFullYear(date, isUTC), dow, doy)) {\n    resWeek = week - weeksInYear(getFullYear(date, isUTC), dow, doy);\n    resYear = getFullYear(date, isUTC) + 1;\n  } else {\n    resYear = getFullYear(date, isUTC);\n    resWeek = week;\n  }\n\n  return {\n    week: resWeek,\n    year: resYear\n  };\n}\n/**\n * @param {?} year\n * @param {?} dow\n * @param {?} doy\n * @return {?}\n */\n\n\nfunction weeksInYear(year, dow, doy) {\n  /** @type {?} */\n  const weekOffset = firstWeekOffset(year, dow, doy);\n  /** @type {?} */\n\n  const weekOffsetNext = firstWeekOffset(year + 1, dow, doy);\n  return (daysInYear(year) - weekOffset + weekOffsetNext) / 7;\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @record\n */\n\n\nfunction LocaleOptionsFormat() {}\n\nif (false) {\n  /** @type {?} */\n  LocaleOptionsFormat.prototype.format;\n  /** @type {?} */\n\n  LocaleOptionsFormat.prototype.standalone;\n  /** @type {?|undefined} */\n\n  LocaleOptionsFormat.prototype.isFormat;\n}\n/** @type {?} */\n\n\nconst MONTHS_IN_FORMAT = /D[oD]?(\\[[^\\[\\]]*\\]|\\s)+MMMM?/;\n/** @type {?} */\n\nconst defaultLocaleMonths = 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_');\n/** @type {?} */\n\nconst defaultLocaleMonthsShort = 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_');\n/** @type {?} */\n\nconst defaultLocaleWeekdays = 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_');\n/** @type {?} */\n\nconst defaultLocaleWeekdaysShort = 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_');\n/** @type {?} */\n\nconst defaultLocaleWeekdaysMin = 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_');\n/** @type {?} */\n\nconst defaultLongDateFormat = {\n  LTS: 'h:mm:ss A',\n  LT: 'h:mm A',\n  L: 'MM/DD/YYYY',\n  LL: 'MMMM D, YYYY',\n  LLL: 'MMMM D, YYYY h:mm A',\n  LLLL: 'dddd, MMMM D, YYYY h:mm A'\n};\n/** @type {?} */\n\nconst defaultOrdinal = '%d';\n/** @type {?} */\n\nconst defaultDayOfMonthOrdinalParse = /\\d{1,2}/;\n/** @type {?} */\n\nconst defaultMonthsShortRegex = matchWord;\n/** @type {?} */\n\nconst defaultMonthsRegex = matchWord;\n/**\n * @record\n */\n\nfunction LocaleData() {}\n\nif (false) {\n  /** @type {?|undefined} */\n  LocaleData.prototype.abbr;\n  /** @type {?|undefined} */\n\n  LocaleData.prototype.parentLocale;\n  /** @type {?|undefined} */\n\n  LocaleData.prototype.months;\n  /** @type {?|undefined} */\n\n  LocaleData.prototype.monthsShort;\n  /** @type {?|undefined} */\n\n  LocaleData.prototype.monthsParseExact;\n  /** @type {?|undefined} */\n\n  LocaleData.prototype.weekdays;\n  /** @type {?|undefined} */\n\n  LocaleData.prototype.weekdaysShort;\n  /** @type {?|undefined} */\n\n  LocaleData.prototype.weekdaysMin;\n  /** @type {?|undefined} */\n\n  LocaleData.prototype.weekdaysParseExact;\n  /** @type {?|undefined} */\n\n  LocaleData.prototype.longDateFormat;\n  /** @type {?|undefined} */\n\n  LocaleData.prototype.calendar;\n  /** @type {?|undefined} */\n\n  LocaleData.prototype.relativeTime;\n  /** @type {?|undefined} */\n\n  LocaleData.prototype.dayOfMonthOrdinalParse;\n  /** @type {?|undefined} */\n\n  LocaleData.prototype.ordinal;\n  /** @type {?|undefined} */\n\n  LocaleData.prototype.week;\n  /** @type {?|undefined} */\n\n  LocaleData.prototype.invalidDate;\n  /** @type {?|undefined} */\n\n  LocaleData.prototype.monthsRegex;\n  /** @type {?|undefined} */\n\n  LocaleData.prototype.monthsParse;\n  /** @type {?|undefined} */\n\n  LocaleData.prototype.monthsShortRegex;\n  /** @type {?|undefined} */\n\n  LocaleData.prototype.monthsStrictRegex;\n  /** @type {?|undefined} */\n\n  LocaleData.prototype.monthsShortStrictRegex;\n  /** @type {?|undefined} */\n\n  LocaleData.prototype.longMonthsParse;\n  /** @type {?|undefined} */\n\n  LocaleData.prototype.shortMonthsParse;\n  /** @type {?|undefined} */\n\n  LocaleData.prototype.meridiemParse;\n  /**\n   * @param {?} hour\n   * @param {?} meridiem\n   * @return {?}\n   */\n\n  LocaleData.prototype.meridiemHour = function (hour, meridiem) {};\n  /**\n   * @param {?} str\n   * @param {?=} format\n   * @return {?}\n   */\n\n\n  LocaleData.prototype.preparse = function (str, format) {};\n  /**\n   * @param {?} str\n   * @return {?}\n   */\n\n\n  LocaleData.prototype.postformat = function (str) {};\n  /**\n   * @param {?} hour\n   * @param {?=} minute\n   * @param {?=} isLower\n   * @return {?}\n   */\n\n\n  LocaleData.prototype.meridiem = function (hour, minute, isLower) {};\n  /**\n   * @param {?} input\n   * @return {?}\n   */\n\n\n  LocaleData.prototype.isPM = function (input) {};\n  /**\n   * @param {?} date\n   * @param {?} isUTC\n   * @return {?}\n   */\n\n\n  LocaleData.prototype.getFullYear = function (date, isUTC) {};\n}\n\nclass Locale {\n  /**\n   * @param {?} config\n   */\n  constructor(config) {\n    if (!!config) {\n      this.set(config);\n    }\n  }\n  /**\n   * @param {?} config\n   * @return {?}\n   */\n\n\n  set(config) {\n    /** @type {?} */\n    let confKey;\n\n    for (confKey in config) {\n      if (!config.hasOwnProperty(confKey)) {\n        continue;\n      }\n      /** @type {?} */\n\n\n      const prop = config[\n      /** @type {?} */\n      confKey];\n      /** @type {?} */\n\n      const key =\n      /** @type {?} */\n      isFunction(prop) ? confKey : `_${confKey}`;\n      this[key] =\n      /** @type {?} */\n      prop;\n    }\n\n    this._config = config;\n  }\n  /**\n   * @param {?} key\n   * @param {?} date\n   * @param {?} now\n   * @return {?}\n   */\n\n\n  calendar(key, date, now) {\n    /** @type {?} */\n    const output = this._calendar[key] || this._calendar.sameElse;\n    return isFunction(output) ? output.call(null, date, now) : output;\n  }\n  /**\n   * @param {?} key\n   * @return {?}\n   */\n\n\n  longDateFormat(key) {\n    /** @type {?} */\n    const format = this._longDateFormat[key];\n    /** @type {?} */\n\n    const formatUpper = this._longDateFormat[key.toUpperCase()];\n\n    if (format || !formatUpper) {\n      return format;\n    }\n\n    this._longDateFormat[key] = formatUpper.replace(/MMMM|MM|DD|dddd/g,\n    /**\n    * @param {?} val\n    * @return {?}\n    */\n    function (val) {\n      return val.slice(1);\n    });\n    return this._longDateFormat[key];\n  }\n  /**\n   * @return {?}\n   */\n\n\n  get invalidDate() {\n    return this._invalidDate;\n  }\n  /**\n   * @param {?} val\n   * @return {?}\n   */\n\n\n  set invalidDate(val) {\n    this._invalidDate = val;\n  }\n  /**\n   * @param {?} num\n   * @param {?=} token\n   * @return {?}\n   */\n\n\n  ordinal(num, token) {\n    return this._ordinal.replace('%d', num.toString(10));\n  }\n  /**\n   * @param {?} str\n   * @param {?=} format\n   * @return {?}\n   */\n\n\n  preparse(str, format) {\n    return str;\n  }\n  /**\n   * @param {?} date\n   * @param {?=} isUTC\n   * @return {?}\n   */\n\n\n  getFullYear(date, isUTC = false) {\n    return getFullYear(date, isUTC);\n  }\n  /**\n   * @param {?} str\n   * @return {?}\n   */\n\n\n  postformat(str) {\n    return str;\n  }\n  /**\n   * @param {?} num\n   * @param {?} withoutSuffix\n   * @param {?} str\n   * @param {?} isFuture\n   * @return {?}\n   */\n\n\n  relativeTime(num, withoutSuffix, str, isFuture) {\n    /** @type {?} */\n    const output = this._relativeTime[str];\n    return isFunction(output) ? output(num, withoutSuffix, str, isFuture) : output.replace(/%d/i, num.toString(10));\n  }\n  /**\n   * @param {?} diff\n   * @param {?} output\n   * @return {?}\n   */\n\n\n  pastFuture(diff, output) {\n    /** @type {?} */\n    const format = this._relativeTime[diff > 0 ? 'future' : 'past'];\n    return isFunction(format) ? format(output) : format.replace(/%s/i, output);\n  }\n  /**\n   * @param {?=} date\n   * @param {?=} format\n   * @param {?=} isUTC\n   * @return {?}\n   */\n\n\n  months(date, format, isUTC = false) {\n    if (!date) {\n      return isArray(this._months) ? this._months : this._months.standalone;\n    }\n\n    if (isArray(this._months)) {\n      return this._months[getMonth(date, isUTC)];\n    }\n    /** @type {?} */\n\n\n    const key = (this._months.isFormat || MONTHS_IN_FORMAT).test(format) ? 'format' : 'standalone';\n    return this._months[key][getMonth(date, isUTC)];\n  }\n  /**\n   * @param {?=} date\n   * @param {?=} format\n   * @param {?=} isUTC\n   * @return {?}\n   */\n\n\n  monthsShort(date, format, isUTC = false) {\n    if (!date) {\n      return isArray(this._monthsShort) ? this._monthsShort : this._monthsShort.standalone;\n    }\n\n    if (isArray(this._monthsShort)) {\n      return this._monthsShort[getMonth(date, isUTC)];\n    }\n    /** @type {?} */\n\n\n    const key = MONTHS_IN_FORMAT.test(format) ? 'format' : 'standalone';\n    return this._monthsShort[key][getMonth(date, isUTC)];\n  }\n  /**\n   * @param {?} monthName\n   * @param {?=} format\n   * @param {?=} strict\n   * @return {?}\n   */\n\n\n  monthsParse(monthName, format, strict) {\n    /** @type {?} */\n    let date;\n    /** @type {?} */\n\n    let regex;\n\n    if (this._monthsParseExact) {\n      return this.handleMonthStrictParse(monthName, format, strict);\n    }\n\n    if (!this._monthsParse) {\n      this._monthsParse = [];\n      this._longMonthsParse = [];\n      this._shortMonthsParse = [];\n    } // TODO: add sorting\n    // Sorting makes sure if one month (or abbr) is a prefix of another\n    // see sorting in computeMonthsParse\n\n    /** @type {?} */\n\n\n    let i;\n\n    for (i = 0; i < 12; i++) {\n      // make the regex if we don't have it already\n      date = new Date(Date.UTC(2000, i));\n\n      if (strict && !this._longMonthsParse[i]) {\n        /** @type {?} */\n        const _months = this.months(date, '', true).replace('.', '');\n        /** @type {?} */\n\n\n        const _shortMonths = this.monthsShort(date, '', true).replace('.', '');\n\n        this._longMonthsParse[i] = new RegExp(`^${_months}$`, 'i');\n        this._shortMonthsParse[i] = new RegExp(`^${_shortMonths}$`, 'i');\n      }\n\n      if (!strict && !this._monthsParse[i]) {\n        regex = `^${this.months(date, '', true)}|^${this.monthsShort(date, '', true)}`;\n        this._monthsParse[i] = new RegExp(regex.replace('.', ''), 'i');\n      } // test the regex\n\n\n      if (strict && format === 'MMMM' &&\n      /** @type {?} */\n      this._longMonthsParse[i].test(monthName)) {\n        return i;\n      }\n\n      if (strict && format === 'MMM' &&\n      /** @type {?} */\n      this._shortMonthsParse[i].test(monthName)) {\n        return i;\n      }\n\n      if (!strict && this._monthsParse[i].test(monthName)) {\n        return i;\n      }\n    }\n  }\n  /**\n   * @param {?} isStrict\n   * @return {?}\n   */\n\n\n  monthsRegex(isStrict) {\n    if (this._monthsParseExact) {\n      if (!hasOwnProp(this, '_monthsRegex')) {\n        this.computeMonthsParse();\n      }\n\n      if (isStrict) {\n        return this._monthsStrictRegex;\n      }\n\n      return this._monthsRegex;\n    }\n\n    if (!hasOwnProp(this, '_monthsRegex')) {\n      this._monthsRegex = defaultMonthsRegex;\n    }\n\n    return this._monthsStrictRegex && isStrict ? this._monthsStrictRegex : this._monthsRegex;\n  }\n  /**\n   * @param {?} isStrict\n   * @return {?}\n   */\n\n\n  monthsShortRegex(isStrict) {\n    if (this._monthsParseExact) {\n      if (!hasOwnProp(this, '_monthsRegex')) {\n        this.computeMonthsParse();\n      }\n\n      if (isStrict) {\n        return this._monthsShortStrictRegex;\n      }\n\n      return this._monthsShortRegex;\n    }\n\n    if (!hasOwnProp(this, '_monthsShortRegex')) {\n      this._monthsShortRegex = defaultMonthsShortRegex;\n    }\n\n    return this._monthsShortStrictRegex && isStrict ? this._monthsShortStrictRegex : this._monthsShortRegex;\n  }\n  /**\n   * Week\n   * @param {?} date\n   * @param {?=} isUTC\n   * @return {?}\n   */\n\n\n  week(date, isUTC) {\n    return weekOfYear(date, this._week.dow, this._week.doy, isUTC).week;\n  }\n  /**\n   * @return {?}\n   */\n\n\n  firstDayOfWeek() {\n    return this._week.dow;\n  }\n  /**\n   * @return {?}\n   */\n\n\n  firstDayOfYear() {\n    return this._week.doy;\n  }\n  /**\n   * @param {?=} date\n   * @param {?=} format\n   * @param {?=} isUTC\n   * @return {?}\n   */\n\n\n  weekdays(date, format, isUTC) {\n    if (!date) {\n      return isArray(this._weekdays) ? this._weekdays : this._weekdays.standalone;\n    }\n\n    if (isArray(this._weekdays)) {\n      return this._weekdays[getDay(date, isUTC)];\n    }\n    /** @type {?} */\n\n\n    const _key = this._weekdays.isFormat.test(format) ? 'format' : 'standalone';\n\n    return this._weekdays[_key][getDay(date, isUTC)];\n  }\n  /**\n   * @param {?=} date\n   * @param {?=} format\n   * @param {?=} isUTC\n   * @return {?}\n   */\n\n\n  weekdaysMin(date, format, isUTC) {\n    return date ? this._weekdaysMin[getDay(date, isUTC)] : this._weekdaysMin;\n  }\n  /**\n   * @param {?=} date\n   * @param {?=} format\n   * @param {?=} isUTC\n   * @return {?}\n   */\n\n\n  weekdaysShort(date, format, isUTC) {\n    return date ? this._weekdaysShort[getDay(date, isUTC)] : this._weekdaysShort;\n  } // proto.weekdaysParse  =        localeWeekdaysParse;\n\n  /**\n   * @param {?=} weekdayName\n   * @param {?=} format\n   * @param {?=} strict\n   * @return {?}\n   */\n\n\n  weekdaysParse(weekdayName, format, strict) {\n    /** @type {?} */\n    let i;\n    /** @type {?} */\n\n    let regex;\n\n    if (this._weekdaysParseExact) {\n      return this.handleWeekStrictParse(weekdayName, format, strict);\n    }\n\n    if (!this._weekdaysParse) {\n      this._weekdaysParse = [];\n      this._minWeekdaysParse = [];\n      this._shortWeekdaysParse = [];\n      this._fullWeekdaysParse = [];\n    }\n\n    for (i = 0; i < 7; i++) {\n      // make the regex if we don't have it already\n      // fix: here is the issue\n\n      /** @type {?} */\n      const date = setDayOfWeek(new Date(Date.UTC(2000, 1)), i, null, true);\n\n      if (strict && !this._fullWeekdaysParse[i]) {\n        this._fullWeekdaysParse[i] = new RegExp(`^${this.weekdays(date, '', true).replace('.', '\\.?')}$`, 'i');\n        this._shortWeekdaysParse[i] = new RegExp(`^${this.weekdaysShort(date, '', true).replace('.', '\\.?')}$`, 'i');\n        this._minWeekdaysParse[i] = new RegExp(`^${this.weekdaysMin(date, '', true).replace('.', '\\.?')}$`, 'i');\n      }\n\n      if (!this._weekdaysParse[i]) {\n        regex = `^${this.weekdays(date, '', true)}|^${this.weekdaysShort(date, '', true)}|^${this.weekdaysMin(date, '', true)}`;\n        this._weekdaysParse[i] = new RegExp(regex.replace('.', ''), 'i');\n      }\n\n      if (!isArray(this._fullWeekdaysParse) || !isArray(this._shortWeekdaysParse) || !isArray(this._minWeekdaysParse) || !isArray(this._weekdaysParse)) {\n        return;\n      } // test the regex\n\n\n      if (strict && format === 'dddd' && this._fullWeekdaysParse[i].test(weekdayName)) {\n        return i;\n      } else if (strict && format === 'ddd' && this._shortWeekdaysParse[i].test(weekdayName)) {\n        return i;\n      } else if (strict && format === 'dd' && this._minWeekdaysParse[i].test(weekdayName)) {\n        return i;\n      } else if (!strict && this._weekdaysParse[i].test(weekdayName)) {\n        return i;\n      }\n    }\n  } // proto.weekdaysRegex       =        weekdaysRegex;\n\n  /**\n   * @param {?} isStrict\n   * @return {?}\n   */\n\n\n  weekdaysRegex(isStrict) {\n    if (this._weekdaysParseExact) {\n      if (!hasOwnProp(this, '_weekdaysRegex')) {\n        this.computeWeekdaysParse();\n      }\n\n      if (isStrict) {\n        return this._weekdaysStrictRegex;\n      } else {\n        return this._weekdaysRegex;\n      }\n    } else {\n      if (!hasOwnProp(this, '_weekdaysRegex')) {\n        this._weekdaysRegex = matchWord;\n      }\n\n      return this._weekdaysStrictRegex && isStrict ? this._weekdaysStrictRegex : this._weekdaysRegex;\n    }\n  } // proto.weekdaysShortRegex  =        weekdaysShortRegex;\n  // proto.weekdaysMinRegex    =        weekdaysMinRegex;\n\n  /**\n   * @param {?=} isStrict\n   * @return {?}\n   */\n\n\n  weekdaysShortRegex(isStrict) {\n    if (this._weekdaysParseExact) {\n      if (!hasOwnProp(this, '_weekdaysRegex')) {\n        this.computeWeekdaysParse();\n      }\n\n      if (isStrict) {\n        return this._weekdaysShortStrictRegex;\n      } else {\n        return this._weekdaysShortRegex;\n      }\n    } else {\n      if (!hasOwnProp(this, '_weekdaysShortRegex')) {\n        this._weekdaysShortRegex = matchWord;\n      }\n\n      return this._weekdaysShortStrictRegex && isStrict ? this._weekdaysShortStrictRegex : this._weekdaysShortRegex;\n    }\n  }\n  /**\n   * @param {?=} isStrict\n   * @return {?}\n   */\n\n\n  weekdaysMinRegex(isStrict) {\n    if (this._weekdaysParseExact) {\n      if (!hasOwnProp(this, '_weekdaysRegex')) {\n        this.computeWeekdaysParse();\n      }\n\n      if (isStrict) {\n        return this._weekdaysMinStrictRegex;\n      } else {\n        return this._weekdaysMinRegex;\n      }\n    } else {\n      if (!hasOwnProp(this, '_weekdaysMinRegex')) {\n        this._weekdaysMinRegex = matchWord;\n      }\n\n      return this._weekdaysMinStrictRegex && isStrict ? this._weekdaysMinStrictRegex : this._weekdaysMinRegex;\n    }\n  }\n  /**\n   * @param {?} input\n   * @return {?}\n   */\n\n\n  isPM(input) {\n    // IE8 Quirks Mode & IE7 Standards Mode do not allow accessing strings like arrays\n    // Using charAt should be more compatible.\n    return input.toLowerCase().charAt(0) === 'p';\n  }\n  /**\n   * @param {?} hours\n   * @param {?} minutes\n   * @param {?} isLower\n   * @return {?}\n   */\n\n\n  meridiem(hours, minutes, isLower) {\n    if (hours > 11) {\n      return isLower ? 'pm' : 'PM';\n    }\n\n    return isLower ? 'am' : 'AM';\n  }\n  /**\n   * @param {?} key\n   * @return {?}\n   */\n\n\n  formatLongDate(key) {\n    this._longDateFormat = this._longDateFormat ? this._longDateFormat : defaultLongDateFormat;\n    /** @type {?} */\n\n    const format = this._longDateFormat[key];\n    /** @type {?} */\n\n    const formatUpper = this._longDateFormat[key.toUpperCase()];\n\n    if (format || !formatUpper) {\n      return format;\n    }\n\n    this._longDateFormat[key] = formatUpper.replace(/MMMM|MM|DD|dddd/g,\n    /**\n    * @param {?} val\n    * @return {?}\n    */\n    val => {\n      return val.slice(1);\n    });\n    return this._longDateFormat[key];\n  }\n  /**\n   * @private\n   * @param {?} monthName\n   * @param {?} format\n   * @param {?=} strict\n   * @return {?}\n   */\n\n\n  handleMonthStrictParse(monthName, format, strict) {\n    /** @type {?} */\n    const llc = monthName.toLocaleLowerCase();\n    /** @type {?} */\n\n    let i;\n    /** @type {?} */\n\n    let ii;\n    /** @type {?} */\n\n    let mom;\n\n    if (!this._monthsParse) {\n      // this is not used\n      this._monthsParse = [];\n      this._longMonthsParse = [];\n      this._shortMonthsParse = [];\n\n      for (i = 0; i < 12; ++i) {\n        mom = new Date(2000, i);\n        this._shortMonthsParse[i] = this.monthsShort(mom, '').toLocaleLowerCase();\n        this._longMonthsParse[i] = this.months(mom, '').toLocaleLowerCase();\n      }\n    }\n\n    if (strict) {\n      if (format === 'MMM') {\n        ii =\n        /** @type {?} */\n        this._shortMonthsParse.indexOf(llc);\n        return ii !== -1 ? ii : null;\n      }\n\n      ii =\n      /** @type {?} */\n      this._longMonthsParse.indexOf(llc);\n      return ii !== -1 ? ii : null;\n    }\n\n    if (format === 'MMM') {\n      ii =\n      /** @type {?} */\n      this._shortMonthsParse.indexOf(llc);\n\n      if (ii !== -1) {\n        return ii;\n      }\n\n      ii =\n      /** @type {?} */\n      this._longMonthsParse.indexOf(llc);\n      return ii !== -1 ? ii : null;\n    }\n\n    ii =\n    /** @type {?} */\n    this._longMonthsParse.indexOf(llc);\n\n    if (ii !== -1) {\n      return ii;\n    }\n\n    ii =\n    /** @type {?} */\n    this._shortMonthsParse.indexOf(llc);\n    return ii !== -1 ? ii : null;\n  }\n  /**\n   * @private\n   * @param {?} weekdayName\n   * @param {?} format\n   * @param {?} strict\n   * @return {?}\n   */\n\n\n  handleWeekStrictParse(weekdayName, format, strict) {\n    /** @type {?} */\n    let ii;\n    /** @type {?} */\n\n    const llc = weekdayName.toLocaleLowerCase();\n\n    if (!this._weekdaysParse) {\n      this._weekdaysParse = [];\n      this._shortWeekdaysParse = [];\n      this._minWeekdaysParse = [];\n      /** @type {?} */\n\n      let i;\n\n      for (i = 0; i < 7; ++i) {\n        /** @type {?} */\n        const date = setDayOfWeek(new Date(Date.UTC(2000, 1)), i, null, true);\n        this._minWeekdaysParse[i] = this.weekdaysMin(date).toLocaleLowerCase();\n        this._shortWeekdaysParse[i] = this.weekdaysShort(date).toLocaleLowerCase();\n        this._weekdaysParse[i] = this.weekdays(date, '').toLocaleLowerCase();\n      }\n    }\n\n    if (!isArray(this._weekdaysParse) || !isArray(this._shortWeekdaysParse) || !isArray(this._minWeekdaysParse)) {\n      return;\n    }\n\n    if (strict) {\n      if (format === 'dddd') {\n        ii = this._weekdaysParse.indexOf(llc);\n        return ii !== -1 ? ii : null;\n      } else if (format === 'ddd') {\n        ii = this._shortWeekdaysParse.indexOf(llc);\n        return ii !== -1 ? ii : null;\n      } else {\n        ii = this._minWeekdaysParse.indexOf(llc);\n        return ii !== -1 ? ii : null;\n      }\n    } else {\n      if (format === 'dddd') {\n        ii = this._weekdaysParse.indexOf(llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = this._shortWeekdaysParse.indexOf(llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = this._minWeekdaysParse.indexOf(llc);\n        return ii !== -1 ? ii : null;\n      } else if (format === 'ddd') {\n        ii = this._shortWeekdaysParse.indexOf(llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = this._weekdaysParse.indexOf(llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = this._minWeekdaysParse.indexOf(llc);\n        return ii !== -1 ? ii : null;\n      } else {\n        ii = this._minWeekdaysParse.indexOf(llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = this._weekdaysParse.indexOf(llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = this._shortWeekdaysParse.indexOf(llc);\n        return ii !== -1 ? ii : null;\n      }\n    }\n  }\n  /**\n   * @private\n   * @return {?}\n   */\n\n\n  computeMonthsParse() {\n    /** @type {?} */\n    const shortPieces = [];\n    /** @type {?} */\n\n    const longPieces = [];\n    /** @type {?} */\n\n    const mixedPieces = [];\n    /** @type {?} */\n\n    let date;\n    /** @type {?} */\n\n    let i;\n\n    for (i = 0; i < 12; i++) {\n      // make the regex if we don't have it already\n      date = new Date(2000, i);\n      shortPieces.push(this.monthsShort(date, ''));\n      longPieces.push(this.months(date, ''));\n      mixedPieces.push(this.months(date, ''));\n      mixedPieces.push(this.monthsShort(date, ''));\n    } // Sorting makes sure if one month (or abbr) is a prefix of another it\n    // will match the longer piece.\n\n\n    shortPieces.sort(cmpLenRev);\n    longPieces.sort(cmpLenRev);\n    mixedPieces.sort(cmpLenRev);\n\n    for (i = 0; i < 12; i++) {\n      shortPieces[i] = regexEscape(shortPieces[i]);\n      longPieces[i] = regexEscape(longPieces[i]);\n    }\n\n    for (i = 0; i < 24; i++) {\n      mixedPieces[i] = regexEscape(mixedPieces[i]);\n    }\n\n    this._monthsRegex = new RegExp(`^(${mixedPieces.join('|')})`, 'i');\n    this._monthsShortRegex = this._monthsRegex;\n    this._monthsStrictRegex = new RegExp(`^(${longPieces.join('|')})`, 'i');\n    this._monthsShortStrictRegex = new RegExp(`^(${shortPieces.join('|')})`, 'i');\n  }\n  /**\n   * @private\n   * @return {?}\n   */\n\n\n  computeWeekdaysParse() {\n    /** @type {?} */\n    const minPieces = [];\n    /** @type {?} */\n\n    const shortPieces = [];\n    /** @type {?} */\n\n    const longPieces = [];\n    /** @type {?} */\n\n    const mixedPieces = [];\n    /** @type {?} */\n\n    let i;\n\n    for (i = 0; i < 7; i++) {\n      // make the regex if we don't have it already\n      // let mom = createUTC([2000, 1]).day(i);\n\n      /** @type {?} */\n      const date = setDayOfWeek(new Date(Date.UTC(2000, 1)), i, null, true);\n      /** @type {?} */\n\n      const minp = this.weekdaysMin(date);\n      /** @type {?} */\n\n      const shortp = this.weekdaysShort(date);\n      /** @type {?} */\n\n      const longp = this.weekdays(date);\n      minPieces.push(minp);\n      shortPieces.push(shortp);\n      longPieces.push(longp);\n      mixedPieces.push(minp);\n      mixedPieces.push(shortp);\n      mixedPieces.push(longp);\n    } // Sorting makes sure if one weekday (or abbr) is a prefix of another it\n    // will match the longer piece.\n\n\n    minPieces.sort(cmpLenRev);\n    shortPieces.sort(cmpLenRev);\n    longPieces.sort(cmpLenRev);\n    mixedPieces.sort(cmpLenRev);\n\n    for (i = 0; i < 7; i++) {\n      shortPieces[i] = regexEscape(shortPieces[i]);\n      longPieces[i] = regexEscape(longPieces[i]);\n      mixedPieces[i] = regexEscape(mixedPieces[i]);\n    }\n\n    this._weekdaysRegex = new RegExp(`^(${mixedPieces.join('|')})`, 'i');\n    this._weekdaysShortRegex = this._weekdaysRegex;\n    this._weekdaysMinRegex = this._weekdaysRegex;\n    this._weekdaysStrictRegex = new RegExp(`^(${longPieces.join('|')})`, 'i');\n    this._weekdaysShortStrictRegex = new RegExp(`^(${shortPieces.join('|')})`, 'i');\n    this._weekdaysMinStrictRegex = new RegExp(`^(${minPieces.join('|')})`, 'i');\n  }\n\n}\n\nif (false) {\n  /** @type {?} */\n  Locale.prototype.parentLocale;\n  /** @type {?} */\n\n  Locale.prototype._abbr;\n  /** @type {?} */\n\n  Locale.prototype._config;\n  /** @type {?} */\n\n  Locale.prototype.meridiemHour;\n  /** @type {?} */\n\n  Locale.prototype._invalidDate;\n  /** @type {?} */\n\n  Locale.prototype._week;\n  /** @type {?} */\n\n  Locale.prototype._dayOfMonthOrdinalParse;\n  /** @type {?} */\n\n  Locale.prototype._ordinalParse;\n  /** @type {?} */\n\n  Locale.prototype._meridiemParse;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  Locale.prototype._calendar;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  Locale.prototype._relativeTime;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  Locale.prototype._months;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  Locale.prototype._monthsShort;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  Locale.prototype._monthsRegex;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  Locale.prototype._monthsShortRegex;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  Locale.prototype._monthsStrictRegex;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  Locale.prototype._monthsShortStrictRegex;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  Locale.prototype._monthsParse;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  Locale.prototype._longMonthsParse;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  Locale.prototype._shortMonthsParse;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  Locale.prototype._monthsParseExact;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  Locale.prototype._weekdaysParseExact;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  Locale.prototype._weekdaysRegex;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  Locale.prototype._weekdaysShortRegex;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  Locale.prototype._weekdaysMinRegex;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  Locale.prototype._weekdaysStrictRegex;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  Locale.prototype._weekdaysShortStrictRegex;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  Locale.prototype._weekdaysMinStrictRegex;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  Locale.prototype._weekdays;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  Locale.prototype._weekdaysShort;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  Locale.prototype._weekdaysMin;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  Locale.prototype._weekdaysParse;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  Locale.prototype._minWeekdaysParse;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  Locale.prototype._shortWeekdaysParse;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  Locale.prototype._fullWeekdaysParse;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  Locale.prototype._longDateFormat;\n  /**\n   * @type {?}\n   * @private\n   */\n\n  Locale.prototype._ordinal;\n}\n/**\n * @param {?} a\n * @param {?} b\n * @return {?}\n */\n\n\nfunction cmpLenRev(a, b) {\n  return b.length - a.length;\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/** @type {?} */\n\n\nconst defaultCalendar = {\n  sameDay: '[Today at] LT',\n  nextDay: '[Tomorrow at] LT',\n  nextWeek: 'dddd [at] LT',\n  lastDay: '[Yesterday at] LT',\n  lastWeek: '[Last] dddd [at] LT',\n  sameElse: 'L'\n};\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/** @type {?} */\n\nconst defaultInvalidDate = 'Invalid date';\n/** @type {?} */\n\nconst defaultLocaleWeek = {\n  dow: 0,\n  // Sunday is the first day of the week.\n  doy: 6 // The week that contains Jan 1st is the first week of the year.\n\n};\n/** @type {?} */\n\nconst defaultLocaleMeridiemParse = /[ap]\\.?m?\\.?/i;\n/** @type {?} */\n\nconst defaultRelativeTime = {\n  future: 'in %s',\n  past: '%s ago',\n  s: 'a few seconds',\n  ss: '%d seconds',\n  m: 'a minute',\n  mm: '%d minutes',\n  h: 'an hour',\n  hh: '%d hours',\n  d: 'a day',\n  dd: '%d days',\n  M: 'a month',\n  MM: '%d months',\n  y: 'a year',\n  yy: '%d years'\n};\n/** @type {?} */\n\nconst baseConfig = {\n  calendar: defaultCalendar,\n  longDateFormat: defaultLongDateFormat,\n  invalidDate: defaultInvalidDate,\n  ordinal: defaultOrdinal,\n  dayOfMonthOrdinalParse: defaultDayOfMonthOrdinalParse,\n  relativeTime: defaultRelativeTime,\n  months: defaultLocaleMonths,\n  monthsShort: defaultLocaleMonthsShort,\n  week: defaultLocaleWeek,\n  weekdays: defaultLocaleWeekdays,\n  weekdaysMin: defaultLocaleWeekdaysMin,\n  weekdaysShort: defaultLocaleWeekdaysShort,\n  meridiemParse: defaultLocaleMeridiemParse\n};\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @template T\n * @param {?} array1\n * @param {?} array2\n * @param {?} dontConvert\n * @return {?}\n */\n\nfunction compareArrays(array1, array2, dontConvert) {\n  /** @type {?} */\n  const len = Math.min(array1.length, array2.length);\n  /** @type {?} */\n\n  const lengthDiff = Math.abs(array1.length - array2.length);\n  /** @type {?} */\n\n  let diffs = 0;\n  /** @type {?} */\n\n  let i;\n\n  for (i = 0; i < len; i++) {\n    if (dontConvert && array1[i] !== array2[i] || !dontConvert && toInt(array1[i]) !== toInt(array2[i])) {\n      diffs++;\n    }\n  }\n\n  return diffs + lengthDiff;\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// FORMATTING\n\n/**\n * @return {?}\n */\n\n\nfunction initWeek() {\n  addFormatToken('w', ['ww', 2, false], 'wo',\n  /**\n  * @param {?} date\n  * @param {?} opts\n  * @return {?}\n  */\n  function (date, opts) {\n    return getWeek(date, opts.locale).toString(10);\n  });\n  addFormatToken('W', ['WW', 2, false], 'Wo',\n  /**\n  * @param {?} date\n  * @return {?}\n  */\n  function (date) {\n    return getISOWeek(date).toString(10);\n  }); // ALIASES\n\n  addUnitAlias('week', 'w');\n  addUnitAlias('isoWeek', 'W'); // PRIORITIES\n\n  addUnitPriority('week', 5);\n  addUnitPriority('isoWeek', 5); // PARSING\n\n  addRegexToken('w', match1to2);\n  addRegexToken('ww', match1to2, match2);\n  addRegexToken('W', match1to2);\n  addRegexToken('WW', match1to2, match2);\n  addWeekParseToken(['w', 'ww', 'W', 'WW'],\n  /**\n  * @param {?} input\n  * @param {?} week\n  * @param {?} config\n  * @param {?} token\n  * @return {?}\n  */\n  function (input, week, config, token) {\n    week[token.substr(0, 1)] = toInt(input);\n    return config;\n  }); // export function getSetWeek (input) {\n  //   var week = this.localeData().week(this);\n  //   return input == null ? week : this.add((input - week) * 7, 'd');\n  // }\n}\n/**\n * @param {?} date\n * @param {?} input\n * @param {?=} locale\n * @return {?}\n */\n\n\nfunction setWeek(date, input, locale = getLocale()) {\n  /** @type {?} */\n  const week = getWeek(date, locale);\n  return add(date, (input - week) * 7, 'day');\n}\n/**\n * @param {?} date\n * @param {?=} locale\n * @param {?=} isUTC\n * @return {?}\n */\n\n\nfunction getWeek(date, locale = getLocale(), isUTC) {\n  return locale.week(date, isUTC);\n} // export function getSetISOWeek (input) {\n//   var week = weekOfYear(this, 1, 4).week;\n//   return input == null ? week : this.add((input - week) * 7, 'd');\n// }\n\n/**\n * @param {?} date\n * @param {?} input\n * @return {?}\n */\n\n\nfunction setISOWeek(date, input) {\n  /** @type {?} */\n  const week = getISOWeek(date);\n  return add(date, (input - week) * 7, 'day');\n}\n/**\n * @param {?} date\n * @param {?=} isUTC\n * @return {?}\n */\n\n\nfunction getISOWeek(date, isUTC) {\n  return weekOfYear(date, 1, 4, isUTC).week;\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// FORMATTING\n\n/**\n * @return {?}\n */\n\n\nfunction initWeekYear() {\n  addFormatToken(null, ['gg', 2, false], null,\n  /**\n  * @param {?} date\n  * @param {?} opts\n  * @return {?}\n  */\n  function (date, opts) {\n    // return this.weekYear() % 100;\n    return (getWeekYear(date, opts.locale) % 100).toString();\n  });\n  addFormatToken(null, ['GG', 2, false], null,\n  /**\n  * @param {?} date\n  * @return {?}\n  */\n  function (date) {\n    // return this.isoWeekYear() % 100;\n    return (getISOWeekYear(date) % 100).toString();\n  });\n  addWeekYearFormatToken('gggg', _getWeekYearFormatCb);\n  addWeekYearFormatToken('ggggg', _getWeekYearFormatCb);\n  addWeekYearFormatToken('GGGG', _getISOWeekYearFormatCb);\n  addWeekYearFormatToken('GGGGG', _getISOWeekYearFormatCb); // ALIASES\n\n  addUnitAlias('weekYear', 'gg');\n  addUnitAlias('isoWeekYear', 'GG'); // PRIORITY\n\n  addUnitPriority('weekYear', 1);\n  addUnitPriority('isoWeekYear', 1); // PARSING\n\n  addRegexToken('G', matchSigned);\n  addRegexToken('g', matchSigned);\n  addRegexToken('GG', match1to2, match2);\n  addRegexToken('gg', match1to2, match2);\n  addRegexToken('GGGG', match1to4, match4);\n  addRegexToken('gggg', match1to4, match4);\n  addRegexToken('GGGGG', match1to6, match6);\n  addRegexToken('ggggg', match1to6, match6);\n  addWeekParseToken(['gggg', 'ggggg', 'GGGG', 'GGGGG'],\n  /**\n  * @param {?} input\n  * @param {?} week\n  * @param {?} config\n  * @param {?} token\n  * @return {?}\n  */\n  function (input, week, config, token) {\n    week[token.substr(0, 2)] = toInt(input);\n    return config;\n  });\n  addWeekParseToken(['gg', 'GG'],\n  /**\n  * @param {?} input\n  * @param {?} week\n  * @param {?} config\n  * @param {?} token\n  * @return {?}\n  */\n  function (input, week, config, token) {\n    week[token] = parseTwoDigitYear(input);\n    return config;\n  });\n}\n/**\n * @param {?} token\n * @param {?} getter\n * @return {?}\n */\n\n\nfunction addWeekYearFormatToken(token, getter) {\n  addFormatToken(null, [token, token.length, false], null, getter);\n}\n/**\n * @param {?} date\n * @param {?} opts\n * @return {?}\n */\n\n\nfunction _getWeekYearFormatCb(date, opts) {\n  return getWeekYear(date, opts.locale).toString();\n}\n/**\n * @param {?} date\n * @return {?}\n */\n\n\nfunction _getISOWeekYearFormatCb(date) {\n  return getISOWeekYear(date).toString();\n} // MOMENTS\n\n/**\n * @param {?} date\n * @param {?} input\n * @param {?=} locale\n * @param {?=} isUTC\n * @return {?}\n */\n\n\nfunction getSetWeekYear(date, input, locale = getLocale(), isUTC) {\n  return getSetWeekYearHelper(date, input, // this.week(),\n  getWeek(date, locale, isUTC), // this.weekday(),\n  getLocaleDayOfWeek(date, locale, isUTC), locale.firstDayOfWeek(), locale.firstDayOfYear(), isUTC);\n}\n/**\n * @param {?} date\n * @param {?=} locale\n * @param {?=} isUTC\n * @return {?}\n */\n\n\nfunction getWeekYear(date, locale = getLocale(), isUTC) {\n  return weekOfYear(date, locale.firstDayOfWeek(), locale.firstDayOfYear(), isUTC).year;\n}\n/**\n * @param {?} date\n * @param {?} input\n * @param {?=} isUTC\n * @return {?}\n */\n\n\nfunction getSetISOWeekYear(date, input, isUTC) {\n  return getSetWeekYearHelper(date, input, getISOWeek(date, isUTC), getISODayOfWeek(date, isUTC), 1, 4);\n}\n/**\n * @param {?} date\n * @param {?=} isUTC\n * @return {?}\n */\n\n\nfunction getISOWeekYear(date, isUTC) {\n  return weekOfYear(date, 1, 4, isUTC).year;\n}\n/**\n * @param {?} date\n * @param {?=} isUTC\n * @return {?}\n */\n\n\nfunction getISOWeeksInYear(date, isUTC) {\n  return weeksInYear(getFullYear(date, isUTC), 1, 4);\n}\n/**\n * @param {?} date\n * @param {?=} isUTC\n * @param {?=} locale\n * @return {?}\n */\n\n\nfunction getWeeksInYear(date, isUTC, locale = getLocale()) {\n  return weeksInYear(getFullYear(date, isUTC), locale.firstDayOfWeek(), locale.firstDayOfYear());\n}\n/**\n * @param {?} date\n * @param {?} input\n * @param {?} week\n * @param {?} weekday\n * @param {?} dow\n * @param {?} doy\n * @param {?=} isUTC\n * @return {?}\n */\n\n\nfunction getSetWeekYearHelper(date, input, week, weekday, dow, doy, isUTC) {\n  if (!input) {\n    return getWeekYear(date, void 0, isUTC);\n  }\n  /** @type {?} */\n\n\n  const weeksTarget = weeksInYear(input, dow, doy);\n  /** @type {?} */\n\n  const _week = week > weeksTarget ? weeksTarget : week;\n\n  return setWeekAll(date, input, _week, weekday, dow, doy);\n}\n/**\n * @param {?} date\n * @param {?} weekYear\n * @param {?} week\n * @param {?} weekday\n * @param {?} dow\n * @param {?} doy\n * @return {?}\n */\n\n\nfunction setWeekAll(date, weekYear, week, weekday, dow, doy) {\n  /** @type {?} */\n  const dayOfYearData = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy);\n  /** @type {?} */\n\n  const _date = createUTCDate(dayOfYearData.year, 0, dayOfYearData.dayOfYear);\n\n  setFullYear(date, getFullYear(_date, true), true);\n  setMonth(date, getMonth(_date, true), true);\n  setDate(date, getDate(_date, true), true);\n  return date;\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// todo: add support for timezones\n\n/**\n * @return {?}\n */\n\n\nfunction initTimezone() {\n  // FORMATTING\n  addFormatToken('z', null, null,\n  /**\n  * @param {?} date\n  * @param {?} opts\n  * @return {?}\n  */\n  function (date, opts) {\n    return opts.isUTC ? 'UTC' : '';\n  });\n  addFormatToken('zz', null, null,\n  /**\n  * @param {?} date\n  * @param {?} opts\n  * @return {?}\n  */\n  function (date, opts) {\n    return opts.isUTC ? 'Coordinated Universal Time' : '';\n  });\n} // MOMENTS\n\n/**\n * @param {?} isUTC\n * @return {?}\n */\n\n\nfunction getZoneAbbr(isUTC) {\n  return isUTC ? 'UTC' : '';\n}\n/**\n * @param {?} isUTC\n * @return {?}\n */\n\n\nfunction getZoneName(isUTC) {\n  return isUTC ? 'Coordinated Universal Time' : '';\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @return {?}\n */\n\n\nfunction initTimestamp() {\n  // FORMATTING\n  addFormatToken('X', null, null,\n  /**\n  * @param {?} date\n  * @return {?}\n  */\n  function (date) {\n    return unix(date).toString(10);\n  });\n  addFormatToken('x', null, null,\n  /**\n  * @param {?} date\n  * @return {?}\n  */\n  function (date) {\n    return date.valueOf().toString(10);\n  }); // PARSING\n\n  addRegexToken('x', matchSigned);\n  addRegexToken('X', matchTimestamp);\n  addParseToken('X',\n  /**\n  * @param {?} input\n  * @param {?} array\n  * @param {?} config\n  * @return {?}\n  */\n  function (input, array, config) {\n    config._d = new Date(parseFloat(input) * 1000);\n    return config;\n  });\n  addParseToken('x',\n  /**\n  * @param {?} input\n  * @param {?} array\n  * @param {?} config\n  * @return {?}\n  */\n  function (input, array, config) {\n    config._d = new Date(toInt(input));\n    return config;\n  });\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @return {?}\n */\n\n\nfunction initSecond() {\n  // FORMATTING\n  addFormatToken('s', ['ss', 2, false], null,\n  /**\n  * @param {?} date\n  * @param {?} opts\n  * @return {?}\n  */\n  function (date, opts) {\n    return getSeconds(date, opts.isUTC).toString(10);\n  }); // ALIASES\n\n  addUnitAlias('second', 's'); // PRIORITY\n\n  addUnitPriority('second', 15); // PARSING\n\n  addRegexToken('s', match1to2);\n  addRegexToken('ss', match1to2, match2);\n  addParseToken(['s', 'ss'], SECOND);\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @return {?}\n */\n\n\nfunction initQuarter() {\n  // FORMATTING\n  addFormatToken('Q', null, 'Qo',\n  /**\n  * @param {?} date\n  * @param {?} opts\n  * @return {?}\n  */\n  function (date, opts) {\n    return getQuarter(date, opts.isUTC).toString(10);\n  }); // ALIASES\n\n  addUnitAlias('quarter', 'Q'); // PRIORITY\n\n  addUnitPriority('quarter', 7); // PARSING\n\n  addRegexToken('Q', match1);\n  addParseToken('Q',\n  /**\n  * @param {?} input\n  * @param {?} array\n  * @param {?} config\n  * @return {?}\n  */\n  function (input, array, config) {\n    array[MONTH] = (toInt(input) - 1) * 3;\n    return config;\n  });\n} // MOMENTS\n\n/**\n * @param {?} date\n * @param {?=} isUTC\n * @return {?}\n */\n\n\nfunction getQuarter(date, isUTC = false) {\n  return Math.ceil((getMonth(date, isUTC) + 1) / 3);\n}\n/**\n * @param {?} date\n * @param {?} quarter\n * @param {?=} isUTC\n * @return {?}\n */\n\n\nfunction setQuarter(date, quarter, isUTC) {\n  return setMonth(date, (quarter - 1) * 3 + getMonth(date, isUTC) % 3, isUTC);\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @param {?} token\n * @param {?} separator\n * @return {?}\n */\n\n\nfunction addOffsetFormatToken(token, separator) {\n  addFormatToken(token, null, null,\n  /**\n  * @param {?} date\n  * @param {?} config\n  * @return {?}\n  */\n  function (date, config) {\n    /** @type {?} */\n    let offset = getUTCOffset(date, {\n      _isUTC: config.isUTC,\n      _offset: config.offset\n    });\n    /** @type {?} */\n\n    let sign = '+';\n\n    if (offset < 0) {\n      offset = -offset;\n      sign = '-';\n    }\n\n    return sign + zeroFill(~~(offset / 60), 2) + separator + zeroFill(~~offset % 60, 2);\n  });\n}\n/**\n * @return {?}\n */\n\n\nfunction initOffset() {\n  addOffsetFormatToken('Z', ':');\n  addOffsetFormatToken('ZZ', ''); // PARSING\n\n  addRegexToken('Z', matchShortOffset);\n  addRegexToken('ZZ', matchShortOffset);\n  addParseToken(['Z', 'ZZ'],\n  /**\n  * @param {?} input\n  * @param {?} array\n  * @param {?} config\n  * @return {?}\n  */\n  function (input, array, config) {\n    config._useUTC = true;\n    config._tzm = offsetFromString(matchShortOffset, input);\n    return config;\n  });\n} // HELPERS\n// timezone chunker\n// '+10:00' > ['10',  '00']\n// '-1530'  > ['-15', '30']\n\n/** @type {?} */\n\n\nconst chunkOffset = /([\\+\\-]|\\d\\d)/gi;\n/**\n * @param {?} matcher\n * @param {?} str\n * @return {?}\n */\n\nfunction offsetFromString(matcher, str) {\n  /** @type {?} */\n  const matches = (str || '').match(matcher);\n\n  if (matches === null) {\n    return null;\n  }\n  /** @type {?} */\n\n\n  const chunk = matches[matches.length - 1];\n  /** @type {?} */\n\n  const parts = chunk.match(chunkOffset) || ['-', '0', '0'];\n  /** @type {?} */\n\n  const minutes = parseInt(parts[1], 10) * 60 + toInt(parts[2]);\n  /** @type {?} */\n\n  const _min = parts[0] === '+' ? minutes : -minutes;\n\n  return minutes === 0 ? 0 : _min;\n} // Return a moment from input, that is local/utc/zone equivalent to model.\n\n/**\n * @param {?} input\n * @param {?} date\n * @param {?=} config\n * @return {?}\n */\n\n\nfunction cloneWithOffset(input, date, config = {}) {\n  if (!config._isUTC) {\n    return input;\n  }\n  /** @type {?} */\n\n\n  const res = cloneDate(date); // todo: input._d - res._d + ((res._offset || 0) - (input._offset || 0))*60000\n\n  /** @type {?} */\n\n  const offsetDiff = (config._offset || 0) * 60000;\n  /** @type {?} */\n\n  const diff = input.valueOf() - res.valueOf() + offsetDiff; // Use low-level api, because this fn is low-level api.\n\n  res.setTime(res.valueOf() + diff); // todo: add timezone handling\n  // hooks.updateOffset(res, false);\n\n  return res;\n}\n/**\n * @param {?} date\n * @return {?}\n */\n\n\nfunction getDateOffset(date) {\n  // On Firefox.24 Date#getTimezoneOffset returns a floating point.\n  // https://github.com/moment/moment/pull/1871\n  return -Math.round(date.getTimezoneOffset() / 15) * 15;\n} // HOOKS\n// This function will be called whenever a moment is mutated.\n// It is intended to keep the offset in sync with the timezone.\n// todo: it's from moment timezones\n// hooks.updateOffset = function () {\n// };\n// MOMENTS\n// keepLocalTime = true means only change the timezone, without\n// affecting the local hour. So 5:31:26 +0300 --[utcOffset(2, true)]-->\n// 5:31:26 +0200 It is possible that 5:31:26 doesn't exist with offset\n// +0200, so we adjust the time as needed, to be valid.\n//\n// Keeping the time actually adds/subtracts (one hour)\n// from the actual represented time. That is why we call updateOffset\n// a second time. In case it wants us to change the offset again\n// _changeInProgress == true case, then we have to adjust, because\n// there is no such time in the given timezone.\n\n/**\n * @param {?} date\n * @param {?=} config\n * @return {?}\n */\n\n\nfunction getUTCOffset(date, config = {}) {\n  /** @type {?} */\n  const _offset = config._offset || 0;\n\n  return config._isUTC ? _offset : getDateOffset(date);\n}\n/**\n * @param {?} date\n * @param {?} input\n * @param {?=} keepLocalTime\n * @param {?=} keepMinutes\n * @param {?=} config\n * @return {?}\n */\n\n\nfunction setUTCOffset(date, input, keepLocalTime, keepMinutes, config = {}) {\n  /** @type {?} */\n  const offset = config._offset || 0;\n  /** @type {?} */\n\n  let localAdjust;\n  /** @type {?} */\n\n  let _input = input;\n  /** @type {?} */\n\n  let _date = date;\n\n  if (isString(_input)) {\n    _input = offsetFromString(matchShortOffset, _input);\n\n    if (_input === null) {\n      return _date;\n    }\n  } else if (isNumber(_input) && Math.abs(_input) < 16 && !keepMinutes) {\n    _input = _input * 60;\n  }\n\n  if (!config._isUTC && keepLocalTime) {\n    localAdjust = getDateOffset(_date);\n  }\n\n  config._offset = _input;\n  config._isUTC = true;\n\n  if (localAdjust != null) {\n    _date = add(_date, localAdjust, 'minutes');\n  }\n\n  if (offset !== _input) {\n    if (!keepLocalTime || config._changeInProgress) {\n      _date = add(_date, _input - offset, 'minutes', config._isUTC); // addSubtract(this, createDuration(_input - offset, 'm'), 1, false);\n    } else if (!config._changeInProgress) {\n      config._changeInProgress = true; // todo: add timezone handling\n      // hooks.updateOffset(this, true);\n\n      config._changeInProgress = null;\n    }\n  }\n\n  return _date;\n}\n/*\nexport function getSetZone(input, keepLocalTime) {\n  if (input != null) {\n    if (typeof input !== 'string') {\n      input = -input;\n    }\n\n    this.utcOffset(input, keepLocalTime);\n\n    return this;\n  } else {\n    return -this.utcOffset();\n  }\n}\n*/\n\n/**\n * @param {?} date\n * @param {?=} keepLocalTime\n * @return {?}\n */\n\n\nfunction setOffsetToUTC(date, keepLocalTime) {\n  return setUTCOffset(date, 0, keepLocalTime);\n}\n/**\n * @param {?} date\n * @return {?}\n */\n\n\nfunction isDaylightSavingTime(date) {\n  return getUTCOffset(date) > getUTCOffset(setMonth(cloneDate(date), 0)) || getUTCOffset(date) > getUTCOffset(setMonth(cloneDate(date), 5));\n}\n/*export function setOffsetToLocal(date: Date, isUTC?: boolean, keepLocalTime?: boolean) {\n  if (this._isUTC) {\n    this.utcOffset(0, keepLocalTime);\n    this._isUTC = false;\n\n    if (keepLocalTime) {\n      this.subtract(getDateOffset(this), 'm');\n    }\n  }\n  return this;\n}*/\n\n/**\n * @param {?} date\n * @param {?} input\n * @param {?=} config\n * @return {?}\n */\n\n\nfunction setOffsetToParsedOffset(date, input, config = {}) {\n  if (config._tzm != null) {\n    return setUTCOffset(date, config._tzm, false, true, config);\n  }\n\n  if (isString(input)) {\n    /** @type {?} */\n    const tZone = offsetFromString(matchOffset, input);\n\n    if (tZone != null) {\n      return setUTCOffset(date, tZone, false, false, config);\n    }\n\n    return setUTCOffset(date, 0, true, false, config);\n  }\n\n  return date;\n}\n/**\n * @param {?} date\n * @param {?=} input\n * @return {?}\n */\n\n\nfunction hasAlignedHourOffset(date, input) {\n  /** @type {?} */\n  const _input = input ? getUTCOffset(input, {\n    _isUTC: false\n  }) : 0;\n\n  return (getUTCOffset(date) - _input) % 60 === 0;\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @return {?}\n */\n\n\nfunction initMinute() {\n  // FORMATTING\n  addFormatToken('m', ['mm', 2, false], null,\n  /**\n  * @param {?} date\n  * @param {?} opts\n  * @return {?}\n  */\n  function (date, opts) {\n    return getMinutes(date, opts.isUTC).toString(10);\n  }); // ALIASES\n\n  addUnitAlias('minute', 'm'); // PRIORITY\n\n  addUnitPriority('minute', 14); // PARSING\n\n  addRegexToken('m', match1to2);\n  addRegexToken('mm', match1to2, match2);\n  addParseToken(['m', 'mm'], MINUTE);\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @return {?}\n */\n\n\nfunction initMillisecond() {\n  addFormatToken('S', null, null,\n  /**\n  * @param {?} date\n  * @param {?} opts\n  * @return {?}\n  */\n  function (date, opts) {\n    return (~~(getMilliseconds(date, opts.isUTC) / 100)).toString(10);\n  });\n  addFormatToken(null, ['SS', 2, false], null,\n  /**\n  * @param {?} date\n  * @param {?} opts\n  * @return {?}\n  */\n  function (date, opts) {\n    return (~~(getMilliseconds(date, opts.isUTC) / 10)).toString(10);\n  });\n  addFormatToken(null, ['SSS', 3, false], null,\n  /**\n  * @param {?} date\n  * @param {?} opts\n  * @return {?}\n  */\n  function (date, opts) {\n    return getMilliseconds(date, opts.isUTC).toString(10);\n  });\n  addFormatToken(null, ['SSSS', 4, false], null,\n  /**\n  * @param {?} date\n  * @param {?} opts\n  * @return {?}\n  */\n  function (date, opts) {\n    return (getMilliseconds(date, opts.isUTC) * 10).toString(10);\n  });\n  addFormatToken(null, ['SSSSS', 5, false], null,\n  /**\n  * @param {?} date\n  * @param {?} opts\n  * @return {?}\n  */\n  function (date, opts) {\n    return (getMilliseconds(date, opts.isUTC) * 100).toString(10);\n  });\n  addFormatToken(null, ['SSSSSS', 6, false], null,\n  /**\n  * @param {?} date\n  * @param {?} opts\n  * @return {?}\n  */\n  function (date, opts) {\n    return (getMilliseconds(date, opts.isUTC) * 1000).toString(10);\n  });\n  addFormatToken(null, ['SSSSSSS', 7, false], null,\n  /**\n  * @param {?} date\n  * @param {?} opts\n  * @return {?}\n  */\n  function (date, opts) {\n    return (getMilliseconds(date, opts.isUTC) * 10000).toString(10);\n  });\n  addFormatToken(null, ['SSSSSSSS', 8, false], null,\n  /**\n  * @param {?} date\n  * @param {?} opts\n  * @return {?}\n  */\n  function (date, opts) {\n    return (getMilliseconds(date, opts.isUTC) * 100000).toString(10);\n  });\n  addFormatToken(null, ['SSSSSSSSS', 9, false], null,\n  /**\n  * @param {?} date\n  * @param {?} opts\n  * @return {?}\n  */\n  function (date, opts) {\n    return (getMilliseconds(date, opts.isUTC) * 1000000).toString(10);\n  }); // ALIASES\n\n  addUnitAlias('millisecond', 'ms'); // PRIORITY\n\n  addUnitPriority('millisecond', 16); // PARSING\n\n  addRegexToken('S', match1to3, match1);\n  addRegexToken('SS', match1to3, match2);\n  addRegexToken('SSS', match1to3, match3);\n  /** @type {?} */\n\n  let token;\n\n  for (token = 'SSSS'; token.length <= 9; token += 'S') {\n    addRegexToken(token, matchUnsigned);\n  }\n  /**\n   * @param {?} input\n   * @param {?} array\n   * @param {?} config\n   * @return {?}\n   */\n\n\n  function parseMs(input, array, config) {\n    array[MILLISECOND] = toInt(parseFloat(`0.${input}`) * 1000);\n    return config;\n  }\n\n  for (token = 'S'; token.length <= 9; token += 'S') {\n    addParseToken(token, parseMs);\n  } // MOMENTS\n\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @return {?}\n */\n\n\nfunction initHour() {\n  // FORMATTING\n  // FORMATTING\n\n  /**\n   * @param {?} date\n   * @param {?} isUTC\n   * @return {?}\n   */\n  function hFormat(date, isUTC) {\n    return getHours(date, isUTC) % 12 || 12;\n  }\n  /**\n   * @param {?} date\n   * @param {?} isUTC\n   * @return {?}\n   */\n\n\n  function kFormat(date, isUTC) {\n    return getHours(date, isUTC) || 24;\n  }\n\n  addFormatToken('H', ['HH', 2, false], null,\n  /**\n  * @param {?} date\n  * @param {?} opts\n  * @return {?}\n  */\n  function (date, opts) {\n    return getHours(date, opts.isUTC).toString(10);\n  });\n  addFormatToken('h', ['hh', 2, false], null,\n  /**\n  * @param {?} date\n  * @param {?} opts\n  * @return {?}\n  */\n  function (date, opts) {\n    return hFormat(date, opts.isUTC).toString(10);\n  });\n  addFormatToken('k', ['kk', 2, false], null,\n  /**\n  * @param {?} date\n  * @param {?} opts\n  * @return {?}\n  */\n  function (date, opts) {\n    return kFormat(date, opts.isUTC).toString(10);\n  });\n  addFormatToken('hmm', null, null,\n  /**\n  * @param {?} date\n  * @param {?} opts\n  * @return {?}\n  */\n  function (date, opts) {\n    /** @type {?} */\n    const _h = hFormat(date, opts.isUTC);\n    /** @type {?} */\n\n\n    const _mm = zeroFill(getMinutes(date, opts.isUTC), 2);\n\n    return `${_h}${_mm}`;\n  });\n  addFormatToken('hmmss', null, null,\n  /**\n  * @param {?} date\n  * @param {?} opts\n  * @return {?}\n  */\n  function (date, opts) {\n    /** @type {?} */\n    const _h = hFormat(date, opts.isUTC);\n    /** @type {?} */\n\n\n    const _mm = zeroFill(getMinutes(date, opts.isUTC), 2);\n    /** @type {?} */\n\n\n    const _ss = zeroFill(getSeconds(date, opts.isUTC), 2);\n\n    return `${_h}${_mm}${_ss}`;\n  });\n  addFormatToken('Hmm', null, null,\n  /**\n  * @param {?} date\n  * @param {?} opts\n  * @return {?}\n  */\n  function (date, opts) {\n    /** @type {?} */\n    const _H = getHours(date, opts.isUTC);\n    /** @type {?} */\n\n\n    const _mm = zeroFill(getMinutes(date, opts.isUTC), 2);\n\n    return `${_H}${_mm}`;\n  });\n  addFormatToken('Hmmss', null, null,\n  /**\n  * @param {?} date\n  * @param {?} opts\n  * @return {?}\n  */\n  function (date, opts) {\n    /** @type {?} */\n    const _H = getHours(date, opts.isUTC);\n    /** @type {?} */\n\n\n    const _mm = zeroFill(getMinutes(date, opts.isUTC), 2);\n    /** @type {?} */\n\n\n    const _ss = zeroFill(getSeconds(date, opts.isUTC), 2);\n\n    return `${_H}${_mm}${_ss}`;\n  });\n  /**\n   * @param {?} token\n   * @param {?} lowercase\n   * @return {?}\n   */\n\n  function meridiem(token, lowercase) {\n    addFormatToken(token, null, null,\n    /**\n    * @param {?} date\n    * @param {?} opts\n    * @return {?}\n    */\n    function (date, opts) {\n      return opts.locale.meridiem(getHours(date, opts.isUTC), getMinutes(date, opts.isUTC), lowercase);\n    });\n  }\n\n  meridiem('a', true);\n  meridiem('A', false); // ALIASES\n\n  addUnitAlias('hour', 'h'); // PRIORITY\n\n  addUnitPriority('hour', 13); // PARSING\n\n  /**\n   * @param {?} isStrict\n   * @param {?} locale\n   * @return {?}\n   */\n\n  function matchMeridiem(isStrict, locale) {\n    return locale._meridiemParse;\n  }\n\n  addRegexToken('a', matchMeridiem);\n  addRegexToken('A', matchMeridiem);\n  addRegexToken('H', match1to2);\n  addRegexToken('h', match1to2);\n  addRegexToken('k', match1to2);\n  addRegexToken('HH', match1to2, match2);\n  addRegexToken('hh', match1to2, match2);\n  addRegexToken('kk', match1to2, match2);\n  addRegexToken('hmm', match3to4);\n  addRegexToken('hmmss', match5to6);\n  addRegexToken('Hmm', match3to4);\n  addRegexToken('Hmmss', match5to6);\n  addParseToken(['H', 'HH'], HOUR);\n  addParseToken(['k', 'kk'],\n  /**\n  * @param {?} input\n  * @param {?} array\n  * @param {?} config\n  * @return {?}\n  */\n  function (input, array, config) {\n    /** @type {?} */\n    const kInput = toInt(input);\n    array[HOUR] = kInput === 24 ? 0 : kInput;\n    return config;\n  });\n  addParseToken(['a', 'A'],\n  /**\n  * @param {?} input\n  * @param {?} array\n  * @param {?} config\n  * @return {?}\n  */\n  function (input, array, config) {\n    config._isPm = config._locale.isPM(input);\n    config._meridiem = input;\n    return config;\n  });\n  addParseToken(['h', 'hh'],\n  /**\n  * @param {?} input\n  * @param {?} array\n  * @param {?} config\n  * @return {?}\n  */\n  function (input, array, config) {\n    array[HOUR] = toInt(input);\n    getParsingFlags(config).bigHour = true;\n    return config;\n  });\n  addParseToken('hmm',\n  /**\n  * @param {?} input\n  * @param {?} array\n  * @param {?} config\n  * @return {?}\n  */\n  function (input, array, config) {\n    /** @type {?} */\n    const pos = input.length - 2;\n    array[HOUR] = toInt(input.substr(0, pos));\n    array[MINUTE] = toInt(input.substr(pos));\n    getParsingFlags(config).bigHour = true;\n    return config;\n  });\n  addParseToken('hmmss',\n  /**\n  * @param {?} input\n  * @param {?} array\n  * @param {?} config\n  * @return {?}\n  */\n  function (input, array, config) {\n    /** @type {?} */\n    const pos1 = input.length - 4;\n    /** @type {?} */\n\n    const pos2 = input.length - 2;\n    array[HOUR] = toInt(input.substr(0, pos1));\n    array[MINUTE] = toInt(input.substr(pos1, 2));\n    array[SECOND] = toInt(input.substr(pos2));\n    getParsingFlags(config).bigHour = true;\n    return config;\n  });\n  addParseToken('Hmm',\n  /**\n  * @param {?} input\n  * @param {?} array\n  * @param {?} config\n  * @return {?}\n  */\n  function (input, array, config) {\n    /** @type {?} */\n    const pos = input.length - 2;\n    array[HOUR] = toInt(input.substr(0, pos));\n    array[MINUTE] = toInt(input.substr(pos));\n    return config;\n  });\n  addParseToken('Hmmss',\n  /**\n  * @param {?} input\n  * @param {?} array\n  * @param {?} config\n  * @return {?}\n  */\n  function (input, array, config) {\n    /** @type {?} */\n    const pos1 = input.length - 4;\n    /** @type {?} */\n\n    const pos2 = input.length - 2;\n    array[HOUR] = toInt(input.substr(0, pos1));\n    array[MINUTE] = toInt(input.substr(pos1, 2));\n    array[SECOND] = toInt(input.substr(pos2));\n    return config;\n  });\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/** @type {?} */\n\n\nconst locales = {};\n/** @type {?} */\n\nconst localeFamilies = {};\n/** @type {?} */\n\nlet globalLocale;\n/**\n * @param {?} key\n * @return {?}\n */\n\nfunction normalizeLocale(key) {\n  return key ? key.toLowerCase().replace('_', '-') : key;\n} // pick the locale from the array\n// try ['en-au', 'en-gb'] as 'en-au', 'en-gb', 'en', as in move through the list trying each\n// substring from most specific to least,\n// but move to the next array item if it's a more specific variant than the current root\n\n/**\n * @param {?} names\n * @return {?}\n */\n\n\nfunction chooseLocale(names) {\n  /** @type {?} */\n  let next;\n  /** @type {?} */\n\n  let locale;\n  /** @type {?} */\n\n  let i = 0;\n\n  while (i < names.length) {\n    /** @type {?} */\n    const split = normalizeLocale(names[i]).split('-');\n    /** @type {?} */\n\n    let j = split.length;\n    next = normalizeLocale(names[i + 1]);\n    next = next ? next.split('-') : null;\n\n    while (j > 0) {\n      locale = loadLocale(split.slice(0, j).join('-'));\n\n      if (locale) {\n        return locale;\n      }\n\n      if (next && next.length >= j && compareArrays(split, next, true) >= j - 1) {\n        // the next array item is better than a shallower substring of this one\n        break;\n      }\n\n      j--;\n    }\n\n    i++;\n  }\n\n  return null;\n}\n/**\n * @param {?} parentConfig\n * @param {?} childConfig\n * @return {?}\n */\n\n\nfunction mergeConfigs(parentConfig, childConfig) {\n  /** @type {?} */\n  const res = Object.assign({}, parentConfig);\n\n  for (const childProp in childConfig) {\n    if (!hasOwnProp(childConfig, childProp)) {\n      continue;\n    }\n\n    if (isObject(parentConfig[childProp]) && isObject(childConfig[childProp])) {\n      res[\n      /** @type {?} */\n      childProp] = {};\n      Object.assign(res[childProp], parentConfig[childProp]);\n      Object.assign(res[childProp], childConfig[childProp]);\n    } else if (childConfig[childProp] != null) {\n      res[\n      /** @type {?} */\n      childProp] = childConfig[childProp];\n    } else {\n      delete res[\n      /** @type {?} */\n      childProp];\n    }\n  }\n\n  for (const parentProp in parentConfig) {\n    if (hasOwnProp(parentConfig, parentProp) && !hasOwnProp(childConfig, parentProp) && isObject(parentConfig[\n    /** @type {?} */\n    parentProp])) {\n      // make sure changes to properties don't modify parent config\n      res[\n      /** @type {?} */\n      parentProp] = Object.assign({}, res[\n      /** @type {?} */\n      parentProp]);\n    }\n  }\n\n  return res;\n}\n/**\n * @param {?} name\n * @return {?}\n */\n\n\nfunction loadLocale(name) {\n  // no way!\n\n  /* var oldLocale = null;\n   // TODO: Find a better way to register and load all the locales in Node\n   if (!locales[name] && (typeof module !== 'undefined') &&\n     module && module.exports) {\n     try {\n       oldLocale = globalLocale._abbr;\n       var aliasedRequire = require;\n       aliasedRequire('./locale/' + name);\n       getSetGlobalLocale(oldLocale);\n     } catch (e) {}\n   }*/\n  if (!locales[name]) {\n    // tslint:disable-next-line\n    console.error(`Khronos locale error: please load locale \"${name}\" before using it`); // throw new Error(`Khronos locale error: please load locale \"${name}\" before using it`);\n  }\n\n  return locales[name];\n} // This function will load locale and then set the global locale.  If\n// no arguments are passed in, it will simply return the current global\n// locale key.\n\n/**\n * @param {?=} key\n * @param {?=} values\n * @return {?}\n */\n\n\nfunction getSetGlobalLocale(key, values) {\n  /** @type {?} */\n  let data;\n\n  if (key) {\n    if (isUndefined(values)) {\n      data = getLocale(key);\n    } else if (isString(key)) {\n      data = defineLocale(key, values);\n    }\n\n    if (data) {\n      globalLocale = data;\n    }\n  }\n\n  return globalLocale && globalLocale._abbr;\n}\n/**\n * @param {?} name\n * @param {?=} config\n * @return {?}\n */\n\n\nfunction defineLocale(name, config) {\n  if (config === null) {\n    // useful for testing\n    delete locales[name];\n    globalLocale = getLocale('en');\n    return null;\n  }\n\n  if (!config) {\n    return;\n  }\n  /** @type {?} */\n\n\n  let parentConfig = baseConfig;\n  config.abbr = name;\n\n  if (config.parentLocale != null) {\n    if (locales[config.parentLocale] != null) {\n      parentConfig = locales[config.parentLocale]._config;\n    } else {\n      if (!localeFamilies[config.parentLocale]) {\n        localeFamilies[config.parentLocale] = [];\n      }\n\n      localeFamilies[config.parentLocale].push({\n        name,\n        config\n      });\n      return null;\n    }\n  }\n\n  locales[name] = new Locale(mergeConfigs(parentConfig, config));\n\n  if (localeFamilies[name]) {\n    localeFamilies[name].forEach(\n    /**\n    * @param {?} x\n    * @return {?}\n    */\n    function (x) {\n      defineLocale(x.name, x.config);\n    });\n  } // backwards compat for now: also set the locale\n  // make sure we set the locale AFTER all child locales have been\n  // created, so we won't end up with the child locale set.\n\n\n  getSetGlobalLocale(name);\n  return locales[name];\n}\n/**\n * @param {?} name\n * @param {?=} config\n * @return {?}\n */\n\n\nfunction updateLocale(name, config) {\n  /** @type {?} */\n  let _config = config;\n\n  if (_config != null) {\n    /** @type {?} */\n    let parentConfig = baseConfig; // MERGE\n\n    /** @type {?} */\n\n    const tmpLocale = loadLocale(name);\n\n    if (tmpLocale != null) {\n      parentConfig = tmpLocale._config;\n    }\n\n    _config = mergeConfigs(parentConfig, _config);\n    /** @type {?} */\n\n    const locale = new Locale(_config);\n    locale.parentLocale = locales[name];\n    locales[name] = locale; // backwards compat for now: also set the locale\n\n    getSetGlobalLocale(name);\n  } else {\n    // pass null for config to unupdate, useful for tests\n    if (locales[name] != null) {\n      if (locales[name].parentLocale != null) {\n        locales[name] = locales[name].parentLocale;\n      } else if (locales[name] != null) {\n        delete locales[name];\n      }\n    }\n  }\n\n  return locales[name];\n} // returns locale data\n\n/**\n * @param {?=} key\n * @return {?}\n */\n\n\nfunction getLocale(key) {\n  setDefaultLocale();\n\n  if (!key) {\n    return globalLocale;\n  } // let locale;\n\n  /** @type {?} */\n\n\n  const _key = isArray(key) ? key : [key];\n\n  return chooseLocale(_key);\n}\n/**\n * @return {?}\n */\n\n\nfunction listLocales() {\n  return Object.keys(locales);\n}\n/**\n * @return {?}\n */\n\n\nfunction setDefaultLocale() {\n  if (locales[`en`]) {\n    return undefined;\n  }\n\n  getSetGlobalLocale('en', {\n    dayOfMonthOrdinalParse: /\\d{1,2}(th|st|nd|rd)/,\n\n    /**\n     * @param {?} num\n     * @return {?}\n     */\n    ordinal(num) {\n      /** @type {?} */\n      const b = num % 10;\n      /** @type {?} */\n\n      const output = toInt(num % 100 / 10) === 1 ? 'th' : b === 1 ? 'st' : b === 2 ? 'nd' : b === 3 ? 'rd' : 'th';\n      return num + output;\n    }\n\n  });\n  initWeek();\n  initWeekYear();\n  initYear();\n  initTimezone();\n  initTimestamp();\n  initSecond();\n  initQuarter();\n  initOffset();\n  initMonth();\n  initMinute();\n  initMillisecond();\n  initHour();\n  initDayOfYear();\n  initDayOfWeek();\n  initDayOfMonth();\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/** @type {?} */\n\n\nconst ordering = ['year', 'quarter', 'month', 'week', 'day', 'hours', 'minutes', 'seconds', 'milliseconds'];\n/** @type {?} */\n\nconst orderingHash = ordering.reduce(\n/**\n* @param {?} mem\n* @param {?} order\n* @return {?}\n*/\n(mem, order) => {\n  mem[order] = true;\n  return mem;\n}, {});\n/**\n * @param {?} duration\n * @return {?}\n */\n\nfunction isDurationValid(duration) {\n  /** @type {?} */\n  const durationKeys = Object.keys(duration);\n\n  if (durationKeys.some(\n  /**\n  * @param {?} key\n  * @return {?}\n  */\n  key => {\n    return key in orderingHash && duration[key] === null || isNaN(duration[key]);\n  })) {\n    return false;\n  } // for (let key in duration) {\n  //   if (!(indexOf.call(ordering, key) !== -1 && (duration[key] == null || !isNaN(duration[key])))) {\n  //     return false;\n  //   }\n  // }\n\n  /** @type {?} */\n\n\n  let unitHasDecimal = false;\n\n  for (let i = 0; i < ordering.length; ++i) {\n    if (duration[ordering[i]]) {\n      // only allow non-integers for smallest unit\n      if (unitHasDecimal) {\n        return false;\n      }\n\n      if (duration[ordering[i]] !== toInt(duration[ordering[i]])) {\n        unitHasDecimal = true;\n      }\n    }\n  }\n\n  return true;\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @param {?} number\n * @return {?}\n */\n\n\nfunction absCeil(number) {\n  return number < 0 ? Math.floor(number) : Math.ceil(number);\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @param {?} dur\n * @return {?}\n */\n\n\nfunction bubble(dur) {\n  /** @type {?} */\n  let milliseconds = dur._milliseconds;\n  /** @type {?} */\n\n  let days = dur._days;\n  /** @type {?} */\n\n  let months = dur._months;\n  /** @type {?} */\n\n  const data = dur._data; // if we have a mix of positive and negative values, bubble down first\n  // check: https://github.com/moment/moment/issues/2166\n\n  if (!(milliseconds >= 0 && days >= 0 && months >= 0 || milliseconds <= 0 && days <= 0 && months <= 0)) {\n    milliseconds += absCeil(monthsToDays(months) + days) * 864e5;\n    days = 0;\n    months = 0;\n  } // The following code bubbles up values, see the tests for\n  // examples of what that means.\n\n\n  data.milliseconds = milliseconds % 1000;\n  /** @type {?} */\n\n  const seconds = absFloor(milliseconds / 1000);\n  data.seconds = seconds % 60;\n  /** @type {?} */\n\n  const minutes = absFloor(seconds / 60);\n  data.minutes = minutes % 60;\n  /** @type {?} */\n\n  const hours = absFloor(minutes / 60);\n  data.hours = hours % 24;\n  days += absFloor(hours / 24); // convert days to months\n\n  /** @type {?} */\n\n  const monthsFromDays = absFloor(daysToMonths(days));\n  months += monthsFromDays;\n  days -= absCeil(monthsToDays(monthsFromDays)); // 12 months -> 1 year\n\n  /** @type {?} */\n\n  const years = absFloor(months / 12);\n  months %= 12;\n  data.day = days;\n  data.month = months;\n  data.year = years;\n  return dur;\n}\n/**\n * @param {?} day\n * @return {?}\n */\n\n\nfunction daysToMonths(day) {\n  // 400 years have 146097 days (taking into account leap year rules)\n  // 400 years have 12 months === 4800\n  return day * 4800 / 146097;\n}\n/**\n * @param {?} month\n * @return {?}\n */\n\n\nfunction monthsToDays(month) {\n  // the reverse of daysToMonths\n  return month * 146097 / 4800;\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/** @type {?} */\n\n\nlet round = Math.round;\n/** @type {?} */\n\nconst thresholds = {\n  ss: 44,\n  // a few seconds to seconds\n  s: 45,\n  // seconds to minute\n  m: 45,\n  // minutes to hour\n  h: 22,\n  // hours to day\n  d: 26,\n  // days to month\n  M: 11 // months to year\n\n}; // helper function for moment.fn.from, moment.fn.fromNow, and moment.duration.fn.humanize\n\n/**\n * @param {?} str\n * @param {?} num\n * @param {?} withoutSuffix\n * @param {?} isFuture\n * @param {?} locale\n * @return {?}\n */\n\nfunction substituteTimeAgo(str, num, withoutSuffix, isFuture, locale) {\n  return locale.relativeTime(num || 1, !!withoutSuffix, str, isFuture);\n}\n/**\n * @param {?} posNegDuration\n * @param {?} withoutSuffix\n * @param {?} locale\n * @return {?}\n */\n\n\nfunction relativeTime(posNegDuration, withoutSuffix, locale) {\n  /** @type {?} */\n  const duration = createDuration(posNegDuration).abs();\n  /** @type {?} */\n\n  const seconds = round(duration.as('s'));\n  /** @type {?} */\n\n  const minutes = round(duration.as('m'));\n  /** @type {?} */\n\n  const hours = round(duration.as('h'));\n  /** @type {?} */\n\n  const days = round(duration.as('d'));\n  /** @type {?} */\n\n  const months = round(duration.as('M'));\n  /** @type {?} */\n\n  const years = round(duration.as('y'));\n  /** @type {?} */\n\n  const a = seconds <= thresholds.ss && ['s', seconds] || seconds < thresholds.s && ['ss', seconds] || minutes <= 1 && ['m'] || minutes < thresholds.m && ['mm', minutes] || hours <= 1 && ['h'] || hours < thresholds.h && ['hh', hours] || days <= 1 && ['d'] || days < thresholds.d && ['dd', days] || months <= 1 && ['M'] || months < thresholds.M && ['MM', months] || years <= 1 && ['y'] || ['yy', years];\n  /** @type {?} */\n\n  const b = [a[0], a[1], withoutSuffix, +posNegDuration > 0, locale]; // a[2] = withoutSuffix;\n  // a[3] = +posNegDuration > 0;\n  // a[4] = locale;\n\n  return substituteTimeAgo.apply(null, b);\n} // This function allows you to set the rounding function for relative time strings\n\n/**\n * @param {?} roundingFunction\n * @return {?}\n */\n\n\nfunction getSetRelativeTimeRounding(roundingFunction) {\n  if (roundingFunction === undefined) {\n    return round;\n  }\n\n  if (typeof roundingFunction === 'function') {\n    round = roundingFunction;\n    return true;\n  }\n\n  return false;\n} // This function allows you to set a threshold for relative time strings\n\n/**\n * @param {?} threshold\n * @param {?} limit\n * @return {?}\n */\n\n\nfunction getSetRelativeTimeThreshold(threshold, limit) {\n  if (thresholds[threshold] === undefined) {\n    return false;\n  }\n\n  if (limit === undefined) {\n    return thresholds[threshold];\n  }\n\n  thresholds[threshold] = limit;\n\n  if (threshold === 's') {\n    thresholds.ss = limit - 1;\n  }\n\n  return true;\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n\nclass Duration {\n  /**\n   * @param {?} duration\n   * @param {?=} config\n   */\n  constructor(duration, config = {}) {\n    this._data = {};\n    this._locale = getLocale();\n    this._locale = config && config._locale || getLocale(); // const normalizedInput = normalizeObjectUnits(duration);\n\n    /** @type {?} */\n\n    const normalizedInput = duration;\n    /** @type {?} */\n\n    const years = normalizedInput.year || 0;\n    /** @type {?} */\n\n    const quarters = normalizedInput.quarter || 0;\n    /** @type {?} */\n\n    const months = normalizedInput.month || 0;\n    /** @type {?} */\n\n    const weeks = normalizedInput.week || 0;\n    /** @type {?} */\n\n    const days = normalizedInput.day || 0;\n    /** @type {?} */\n\n    const hours = normalizedInput.hours || 0;\n    /** @type {?} */\n\n    const minutes = normalizedInput.minutes || 0;\n    /** @type {?} */\n\n    const seconds = normalizedInput.seconds || 0;\n    /** @type {?} */\n\n    const milliseconds = normalizedInput.milliseconds || 0;\n    this._isValid = isDurationValid(normalizedInput); // representation for dateAddRemove\n\n    this._milliseconds = +milliseconds + seconds * 1000 + minutes * 60 * 1000 + // 1000 * 60\n    hours * 1000 * 60 * 60; // using 1000 * 60 * 60\n    // instead of 36e5 to avoid floating point rounding errors https://github.com/moment/moment/issues/2978\n    // Because of dateAddRemove treats 24 hours as different from a\n    // day when working around DST, we need to store them separately\n\n    this._days = +days + weeks * 7; // It is impossible to translate months into days without knowing\n    // which months you are are talking about, so we have to store\n    // it separately.\n\n    this._months = +months + quarters * 3 + years * 12; // this._data = {};\n    // this._locale = getLocale();\n    // this._bubble();\n\n    return bubble(this);\n  }\n  /**\n   * @return {?}\n   */\n\n\n  isValid() {\n    return this._isValid;\n  }\n  /**\n   * @param {?=} withSuffix\n   * @return {?}\n   */\n\n\n  humanize(withSuffix) {\n    // throw new Error(`TODO: implement`);\n    if (!this.isValid()) {\n      return this.localeData().invalidDate;\n    }\n    /** @type {?} */\n\n\n    const locale = this.localeData();\n    /** @type {?} */\n\n    let output = relativeTime(this, !withSuffix, locale);\n\n    if (withSuffix) {\n      output = locale.pastFuture(+this, output);\n    }\n\n    return locale.postformat(output);\n  }\n  /**\n   * @return {?}\n   */\n\n\n  localeData() {\n    return this._locale;\n  }\n  /**\n   * @param {?=} localeKey\n   * @return {?}\n   */\n\n\n  locale(localeKey) {\n    if (!localeKey) {\n      return this._locale._abbr;\n    }\n\n    this._locale = getLocale(localeKey) || this._locale;\n    return this;\n  }\n  /**\n   * @return {?}\n   */\n\n\n  abs() {\n    /** @type {?} */\n    const mathAbs = Math.abs;\n    /** @type {?} */\n\n    const data = this._data;\n    this._milliseconds = mathAbs(this._milliseconds);\n    this._days = mathAbs(this._days);\n    this._months = mathAbs(this._months);\n    data.milliseconds = mathAbs(data.milliseconds);\n    data.seconds = mathAbs(data.seconds);\n    data.minutes = mathAbs(data.minutes);\n    data.hours = mathAbs(data.hours);\n    data.month = mathAbs(data.month);\n    data.year = mathAbs(data.year);\n    return this;\n  }\n  /**\n   * @param {?} _units\n   * @return {?}\n   */\n\n\n  as(_units) {\n    if (!this.isValid()) {\n      return NaN;\n    }\n    /** @type {?} */\n\n\n    let days;\n    /** @type {?} */\n\n    let months;\n    /** @type {?} */\n\n    const milliseconds = this._milliseconds;\n    /** @type {?} */\n\n    const units = normalizeUnits(_units);\n\n    if (units === 'month' || units === 'year') {\n      days = this._days + milliseconds / 864e5;\n      months = this._months + daysToMonths(days);\n      return units === 'month' ? months : months / 12;\n    } // handle milliseconds separately because of floating point math errors (issue #1867)\n\n\n    days = this._days + Math.round(monthsToDays(this._months));\n\n    switch (units) {\n      case 'week':\n        return days / 7 + milliseconds / 6048e5;\n\n      case 'day':\n        return days + milliseconds / 864e5;\n\n      case 'hours':\n        return days * 24 + milliseconds / 36e5;\n\n      case 'minutes':\n        return days * 1440 + milliseconds / 6e4;\n\n      case 'seconds':\n        return days * 86400 + milliseconds / 1000;\n      // Math.floor prevents floating point math errors here\n\n      case 'milliseconds':\n        return Math.floor(days * 864e5) + milliseconds;\n\n      default:\n        throw new Error(`Unknown unit ${units}`);\n    }\n  }\n  /**\n   * @return {?}\n   */\n\n\n  valueOf() {\n    if (!this.isValid()) {\n      return NaN;\n    }\n\n    return this._milliseconds + this._days * 864e5 + this._months % 12 * 2592e6 + toInt(this._months / 12) * 31536e6;\n  }\n\n}\n\nif (false) {\n  /** @type {?} */\n  Duration.prototype._milliseconds;\n  /** @type {?} */\n\n  Duration.prototype._days;\n  /** @type {?} */\n\n  Duration.prototype._months;\n  /** @type {?} */\n\n  Duration.prototype._data;\n  /** @type {?} */\n\n  Duration.prototype._locale;\n  /** @type {?} */\n\n  Duration.prototype._isValid;\n}\n/**\n * @param {?} obj\n * @return {?}\n */\n\n\nfunction isDuration(obj) {\n  return obj instanceof Duration;\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @param {?} config\n * @return {?}\n */\n\n\nfunction isValid(config) {\n  if (config._isValid == null) {\n    /** @type {?} */\n    const flags = getParsingFlags(config);\n    /** @type {?} */\n\n    const parsedParts = Array.prototype.some.call(flags.parsedDateParts,\n    /**\n    * @param {?} i\n    * @return {?}\n    */\n    function (i) {\n      return i != null;\n    });\n    /** @type {?} */\n\n    let isNowValid = !isNaN(config._d && config._d.getTime()) && flags.overflow < 0 && !flags.empty && !flags.invalidMonth && !flags.invalidWeekday && !flags.weekdayMismatch && !flags.nullInput && !flags.invalidFormat && !flags.userInvalidated && (!flags.meridiem || flags.meridiem && parsedParts);\n\n    if (config._strict) {\n      isNowValid = isNowValid && flags.charsLeftOver === 0 && flags.unusedTokens.length === 0 && flags.bigHour === undefined;\n    }\n\n    if (Object.isFrozen == null || !Object.isFrozen(config)) {\n      config._isValid = isNowValid;\n    } else {\n      return isNowValid;\n    }\n  }\n\n  return config._isValid;\n}\n/**\n * @param {?} config\n * @param {?=} flags\n * @return {?}\n */\n\n\nfunction createInvalid(config, flags) {\n  config._d = new Date(NaN);\n  Object.assign(getParsingFlags(config), flags || {\n    userInvalidated: true\n  });\n  return config;\n}\n/**\n * @param {?} config\n * @return {?}\n */\n\n\nfunction markInvalid(config) {\n  config._isValid = false;\n  return config;\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// iso 8601 regex\n// 0000-00-00 0000-W00 or 0000-W00-0 + T + 00 or 00:00 or 00:00:00 or 00:00:00.000 + +00:00 or +0000 or +00)\n// tslint:disable-next-line\n\n/** @type {?} */\n\n\nconst extendedIsoRegex = /^\\s*((?:[+-]\\d{6}|\\d{4})-(?:\\d\\d-\\d\\d|W\\d\\d-\\d|W\\d\\d|\\d\\d\\d|\\d\\d))(?:(T| )(\\d\\d(?::\\d\\d(?::\\d\\d(?:[.,]\\d+)?)?)?)([\\+\\-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/; // tslint:disable-next-line\n\n/** @type {?} */\n\nconst basicIsoRegex = /^\\s*((?:[+-]\\d{6}|\\d{4})(?:\\d\\d\\d\\d|W\\d\\d\\d|W\\d\\d|\\d\\d\\d|\\d\\d))(?:(T| )(\\d\\d(?:\\d\\d(?:\\d\\d(?:[.,]\\d+)?)?)?)([\\+\\-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/;\n/** @type {?} */\n\nconst tzRegex = /Z|[+-]\\d\\d(?::?\\d\\d)?/;\n/** @type {?} */\n\nconst isoDates = [['YYYYYY-MM-DD', /[+-]\\d{6}-\\d\\d-\\d\\d/, true], ['YYYY-MM-DD', /\\d{4}-\\d\\d-\\d\\d/, true], ['GGGG-[W]WW-E', /\\d{4}-W\\d\\d-\\d/, true], ['GGGG-[W]WW', /\\d{4}-W\\d\\d/, false], ['YYYY-DDD', /\\d{4}-\\d{3}/, true], ['YYYY-MM', /\\d{4}-\\d\\d/, false], ['YYYYYYMMDD', /[+-]\\d{10}/, true], ['YYYYMMDD', /\\d{8}/, true], // YYYYMM is NOT allowed by the standard\n['GGGG[W]WWE', /\\d{4}W\\d{3}/, true], ['GGGG[W]WW', /\\d{4}W\\d{2}/, false], ['YYYYDDD', /\\d{7}/, true]]; // iso time formats and regexes\n\n/** @type {?} */\n\nconst isoTimes = [['HH:mm:ss.SSSS', /\\d\\d:\\d\\d:\\d\\d\\.\\d+/], ['HH:mm:ss,SSSS', /\\d\\d:\\d\\d:\\d\\d,\\d+/], ['HH:mm:ss', /\\d\\d:\\d\\d:\\d\\d/], ['HH:mm', /\\d\\d:\\d\\d/], ['HHmmss.SSSS', /\\d\\d\\d\\d\\d\\d\\.\\d+/], ['HHmmss,SSSS', /\\d\\d\\d\\d\\d\\d,\\d+/], ['HHmmss', /\\d\\d\\d\\d\\d\\d/], ['HHmm', /\\d\\d\\d\\d/], ['HH', /\\d\\d/]];\n/** @type {?} */\n\nconst aspNetJsonRegex = /^\\/?Date\\((\\-?\\d+)/i;\n/** @type {?} */\n\nconst obsOffsets = {\n  UT: 0,\n  GMT: 0,\n  EDT: -4 * 60,\n  EST: -5 * 60,\n  CDT: -5 * 60,\n  CST: -6 * 60,\n  MDT: -6 * 60,\n  MST: -7 * 60,\n  PDT: -7 * 60,\n  PST: -8 * 60\n}; // RFC 2822 regex: For details see https://tools.ietf.org/html/rfc2822#section-3.3\n// tslint:disable-next-line\n\n/** @type {?} */\n\nconst rfc2822 = /^(?:(Mon|Tue|Wed|Thu|Fri|Sat|Sun),?\\s)?(\\d{1,2})\\s(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\\s(\\d{2,4})\\s(\\d\\d):(\\d\\d)(?::(\\d\\d))?\\s(?:(UT|GMT|[ECMP][SD]T)|([Zz])|([+-]\\d{4}))$/; // date from iso format\n\n/**\n * @param {?} config\n * @return {?}\n */\n\nfunction configFromISO(config) {\n  if (!isString(config._i)) {\n    return config;\n  }\n  /** @type {?} */\n\n\n  const input = config._i;\n  /** @type {?} */\n\n  const match = extendedIsoRegex.exec(input) || basicIsoRegex.exec(input);\n  /** @type {?} */\n\n  let allowTime;\n  /** @type {?} */\n\n  let dateFormat;\n  /** @type {?} */\n\n  let timeFormat;\n  /** @type {?} */\n\n  let tzFormat;\n\n  if (!match) {\n    config._isValid = false;\n    return config;\n  } // getParsingFlags(config).iso = true;\n\n  /** @type {?} */\n\n\n  let i;\n  /** @type {?} */\n\n  let l;\n\n  for (i = 0, l = isoDates.length; i < l; i++) {\n    if (isoDates[i][1].exec(match[1])) {\n      dateFormat = isoDates[i][0];\n      allowTime = isoDates[i][2] !== false;\n      break;\n    }\n  }\n\n  if (dateFormat == null) {\n    config._isValid = false;\n    return config;\n  }\n\n  if (match[3]) {\n    for (i = 0, l = isoTimes.length; i < l; i++) {\n      if (isoTimes[i][1].exec(match[3])) {\n        // match[2] should be 'T' or space\n        timeFormat = (match[2] || ' ') + isoTimes[i][0];\n        break;\n      }\n    }\n\n    if (timeFormat == null) {\n      config._isValid = false;\n      return config;\n    }\n  }\n\n  if (!allowTime && timeFormat != null) {\n    config._isValid = false;\n    return config;\n  }\n\n  if (match[4]) {\n    if (tzRegex.exec(match[4])) {\n      tzFormat = 'Z';\n    } else {\n      config._isValid = false;\n      return config;\n    }\n  }\n\n  config._f = dateFormat + (timeFormat || '') + (tzFormat || '');\n  return configFromStringAndFormat(config);\n} // tslint:disable-next-line\n\n/**\n * @param {?} yearStr\n * @param {?} monthStr\n * @param {?} dayStr\n * @param {?} hourStr\n * @param {?} minuteStr\n * @param {?} secondStr\n * @return {?}\n */\n\n\nfunction extractFromRFC2822Strings(yearStr, monthStr, dayStr, hourStr, minuteStr, secondStr) {\n  /** @type {?} */\n  const result = [untruncateYear(yearStr), defaultLocaleMonthsShort.indexOf(monthStr), parseInt(dayStr, 10), parseInt(hourStr, 10), parseInt(minuteStr, 10)];\n\n  if (secondStr) {\n    result.push(parseInt(secondStr, 10));\n  }\n\n  return result;\n}\n/**\n * @param {?} yearStr\n * @return {?}\n */\n\n\nfunction untruncateYear(yearStr) {\n  /** @type {?} */\n  const year = parseInt(yearStr, 10);\n  return year <= 49 ? year + 2000 : year;\n}\n/**\n * @param {?} str\n * @return {?}\n */\n\n\nfunction preprocessRFC2822(str) {\n  // Remove comments and folding whitespace and replace multiple-spaces with a single space\n  return str.replace(/\\([^)]*\\)|[\\n\\t]/g, ' ').replace(/(\\s\\s+)/g, ' ').trim();\n}\n/**\n * @param {?} weekdayStr\n * @param {?} parsedInput\n * @param {?} config\n * @return {?}\n */\n\n\nfunction checkWeekday(weekdayStr, parsedInput, config) {\n  if (weekdayStr) {\n    // TODO: Replace the vanilla JS Date object with an indepentent day-of-week check.\n\n    /** @type {?} */\n    const weekdayProvided = defaultLocaleWeekdaysShort.indexOf(weekdayStr);\n    /** @type {?} */\n\n    const weekdayActual = new Date(parsedInput[0], parsedInput[1], parsedInput[2]).getDay();\n\n    if (weekdayProvided !== weekdayActual) {\n      getParsingFlags(config).weekdayMismatch = true;\n      config._isValid = false;\n      return false;\n    }\n  }\n\n  return true;\n}\n/**\n * @param {?} obsOffset\n * @param {?} militaryOffset\n * @param {?} numOffset\n * @return {?}\n */\n\n\nfunction calculateOffset(obsOffset, militaryOffset, numOffset) {\n  if (obsOffset) {\n    return obsOffsets[obsOffset];\n  } else if (militaryOffset) {\n    // the only allowed military tz is Z\n    return 0;\n  } else {\n    /** @type {?} */\n    const hm = parseInt(numOffset, 10);\n    /** @type {?} */\n\n    const m = hm % 100;\n    /** @type {?} */\n\n    const h = (hm - m) / 100;\n    return h * 60 + m;\n  }\n} // date and time from ref 2822 format\n\n/**\n * @param {?} config\n * @return {?}\n */\n\n\nfunction configFromRFC2822(config) {\n  if (!isString(config._i)) {\n    return config;\n  }\n  /** @type {?} */\n\n\n  const match = rfc2822.exec(preprocessRFC2822(config._i));\n\n  if (!match) {\n    return markInvalid(config);\n  }\n  /** @type {?} */\n\n\n  const parsedArray = extractFromRFC2822Strings(match[4], match[3], match[2], match[5], match[6], match[7]);\n\n  if (!checkWeekday(match[1], parsedArray, config)) {\n    return config;\n  }\n\n  config._a = parsedArray;\n  config._tzm = calculateOffset(match[8], match[9], match[10]);\n  config._d = createUTCDate.apply(null, config._a);\n\n  config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);\n\n  getParsingFlags(config).rfc2822 = true;\n  return config;\n} // date from iso format or fallback\n\n/**\n * @param {?} config\n * @return {?}\n */\n\n\nfunction configFromString(config) {\n  if (!isString(config._i)) {\n    return config;\n  }\n  /** @type {?} */\n\n\n  const matched = aspNetJsonRegex.exec(config._i);\n\n  if (matched !== null) {\n    config._d = new Date(+matched[1]);\n    return config;\n  } // todo: update logic processing\n  // isISO -> configFromISO\n  // isRFC -> configFromRFC\n\n\n  configFromISO(config);\n\n  if (config._isValid === false) {\n    delete config._isValid;\n  } else {\n    return config;\n  }\n\n  configFromRFC2822(config);\n\n  if (config._isValid === false) {\n    delete config._isValid;\n  } else {\n    return config;\n  } // Final attempt, use Input Fallback\n  // hooks.createFromInputFallback(config);\n\n\n  return createInvalid(config);\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @param {?} date\n * @param {?} format\n * @param {?=} locale\n * @param {?=} isUTC\n * @param {?=} offset\n * @return {?}\n */\n\n\nfunction formatDate(date, format, locale, isUTC, offset = 0) {\n  /** @type {?} */\n  const _locale = getLocale(locale || 'en');\n\n  if (!_locale) {\n    throw new Error(`Locale \"${locale}\" is not defined, please add it with \"defineLocale(...)\"`);\n  }\n  /** @type {?} */\n\n\n  const _format = format || (isUTC ? 'YYYY-MM-DDTHH:mm:ss[Z]' : 'YYYY-MM-DDTHH:mm:ssZ');\n  /** @type {?} */\n\n\n  const output = formatMoment(date, _format, _locale, isUTC, offset);\n\n  if (!output) {\n    return output;\n  }\n\n  return _locale.postformat(output);\n} // format date using native date object\n\n/**\n * @param {?} date\n * @param {?} _format\n * @param {?} locale\n * @param {?=} isUTC\n * @param {?=} offset\n * @return {?}\n */\n\n\nfunction formatMoment(date, _format, locale, isUTC, offset = 0) {\n  if (!isDateValid(date)) {\n    return locale.invalidDate;\n  }\n  /** @type {?} */\n\n\n  const format = expandFormat(_format, locale);\n  formatFunctions[format] = formatFunctions[format] || makeFormatFunction(format);\n  return formatFunctions[format](date, locale, isUTC, offset);\n}\n/**\n * @param {?} _format\n * @param {?} locale\n * @return {?}\n */\n\n\nfunction expandFormat(_format, locale) {\n  /** @type {?} */\n  let format = _format;\n  /** @type {?} */\n\n  let i = 5;\n  /** @type {?} */\n\n  const localFormattingTokens = /(\\[[^\\[]*\\])|(\\\\)?(LTS|LT|LL?L?L?|l{1,4})/g;\n  /** @type {?} */\n\n  const replaceLongDateFormatTokens =\n  /**\n  * @param {?} input\n  * @return {?}\n  */\n  input => {\n    return locale.formatLongDate(input) || input;\n  };\n\n  localFormattingTokens.lastIndex = 0;\n\n  while (i >= 0 && localFormattingTokens.test(format)) {\n    format = format.replace(localFormattingTokens, replaceLongDateFormatTokens);\n    localFormattingTokens.lastIndex = 0;\n    i -= 1;\n  }\n\n  return format;\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// Pick the first defined of two or three arguments.\n\n/**\n * @template T\n * @param {?=} a\n * @param {?=} b\n * @param {?=} c\n * @return {?}\n */\n\n\nfunction defaults(a, b, c) {\n  if (a != null) {\n    return a;\n  }\n\n  if (b != null) {\n    return b;\n  }\n\n  return c;\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @param {?} config\n * @return {?}\n */\n\n\nfunction currentDateArray(config) {\n  /** @type {?} */\n  const nowValue = new Date();\n\n  if (config._useUTC) {\n    return [nowValue.getUTCFullYear(), nowValue.getUTCMonth(), nowValue.getUTCDate()];\n  }\n\n  return [nowValue.getFullYear(), nowValue.getMonth(), nowValue.getDate()];\n} // convert an array to a date.\n// the array should mirror the parameters below\n// note: all values past the year are optional and will default to the lowest possible value.\n// [year, month, day , hour, minute, second, millisecond]\n\n/**\n * @param {?} config\n * @return {?}\n */\n\n\nfunction configFromArray(config) {\n  /** @type {?} */\n  const input = [];\n  /** @type {?} */\n\n  let i;\n  /** @type {?} */\n\n  let date;\n  /** @type {?} */\n\n  let currentDate;\n  /** @type {?} */\n\n  let expectedWeekday;\n  /** @type {?} */\n\n  let yearToUse;\n\n  if (config._d) {\n    return config;\n  }\n\n  currentDate = currentDateArray(config); // compute day of the year from weeks and weekdays\n\n  if (config._w && config._a[DATE] == null && config._a[MONTH] == null) {\n    dayOfYearFromWeekInfo(config);\n  } // if the day of the year is set, figure out what it is\n\n\n  if (config._dayOfYear != null) {\n    yearToUse = defaults(config._a[YEAR], currentDate[YEAR]);\n\n    if (config._dayOfYear > daysInYear(yearToUse) || config._dayOfYear === 0) {\n      getParsingFlags(config)._overflowDayOfYear = true;\n    }\n\n    date = new Date(Date.UTC(yearToUse, 0, config._dayOfYear));\n    config._a[MONTH] = date.getUTCMonth();\n    config._a[DATE] = date.getUTCDate();\n  } // Default to current date.\n  // * if no year, month, day of month are given, default to today\n  // * if day of month is given, default month and year\n  // * if month is given, default only year\n  // * if year is given, don't default anything\n\n\n  for (i = 0; i < 3 && config._a[i] == null; ++i) {\n    config._a[i] = input[i] = currentDate[i];\n  } // Zero out whatever was not defaulted, including time\n\n\n  for (; i < 7; i++) {\n    config._a[i] = input[i] = config._a[i] == null ? i === 2 ? 1 : 0 : config._a[i];\n  } // Check for 24:00:00.000\n\n\n  if (config._a[HOUR] === 24 && config._a[MINUTE] === 0 && config._a[SECOND] === 0 && config._a[MILLISECOND] === 0) {\n    config._nextDay = true;\n    config._a[HOUR] = 0;\n  }\n\n  config._d = (config._useUTC ? createUTCDate : createDate).apply(null, input);\n  expectedWeekday = config._useUTC ? config._d.getUTCDay() : config._d.getDay(); // Apply timezone offset from input. The actual utcOffset can be changed\n  // with parseZone.\n\n  if (config._tzm != null) {\n    config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);\n  }\n\n  if (config._nextDay) {\n    config._a[HOUR] = 24;\n  } // check for mismatching day of week\n\n\n  if (config._w && typeof config._w.d !== 'undefined' && config._w.d !== expectedWeekday) {\n    getParsingFlags(config).weekdayMismatch = true;\n  }\n\n  return config;\n}\n/**\n * @param {?} config\n * @return {?}\n */\n\n\nfunction dayOfYearFromWeekInfo(config) {\n  /** @type {?} */\n  let w;\n  /** @type {?} */\n\n  let weekYear;\n  /** @type {?} */\n\n  let week;\n  /** @type {?} */\n\n  let weekday;\n  /** @type {?} */\n\n  let dow;\n  /** @type {?} */\n\n  let doy;\n  /** @type {?} */\n\n  let temp;\n  /** @type {?} */\n\n  let weekdayOverflow;\n  w = config._w;\n\n  if (w.GG != null || w.W != null || w.E != null) {\n    dow = 1;\n    doy = 4; // TODO: We need to take the current isoWeekYear, but that depends on\n    // how we interpret now (local, utc, fixed offset). So create\n    // a now version of current config (take local/utc/offset flags, and\n    // create now).\n\n    weekYear = defaults(w.GG, config._a[YEAR], weekOfYear(new Date(), 1, 4).year);\n    week = defaults(w.W, 1);\n    weekday = defaults(w.E, 1);\n\n    if (weekday < 1 || weekday > 7) {\n      weekdayOverflow = true;\n    }\n  } else {\n    dow = config._locale._week.dow;\n    doy = config._locale._week.doy;\n    /** @type {?} */\n\n    const curWeek = weekOfYear(new Date(), dow, doy);\n    weekYear = defaults(w.gg, config._a[YEAR], curWeek.year); // Default to current week.\n\n    week = defaults(w.w, curWeek.week);\n\n    if (w.d != null) {\n      // weekday -- low day numbers are considered next week\n      weekday = w.d;\n\n      if (weekday < 0 || weekday > 6) {\n        weekdayOverflow = true;\n      }\n    } else if (w.e != null) {\n      // local weekday -- counting starts from begining of week\n      weekday = w.e + dow;\n\n      if (w.e < 0 || w.e > 6) {\n        weekdayOverflow = true;\n      }\n    } else {\n      // default to begining of week\n      weekday = dow;\n    }\n  }\n\n  if (week < 1 || week > weeksInYear(weekYear, dow, doy)) {\n    getParsingFlags(config)._overflowWeeks = true;\n  } else if (weekdayOverflow != null) {\n    getParsingFlags(config)._overflowWeekday = true;\n  } else {\n    temp = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy);\n    config._a[YEAR] = temp.year;\n    config._dayOfYear = temp.dayOfYear;\n  }\n\n  return config;\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @param {?} config\n * @return {?}\n */\n\n\nfunction checkOverflow(config) {\n  /** @type {?} */\n  let overflow;\n  /** @type {?} */\n\n  const a = config._a;\n\n  if (a && getParsingFlags(config).overflow === -2) {\n    // todo: fix this sh*t\n    overflow = a[MONTH] < 0 || a[MONTH] > 11 ? MONTH : a[DATE] < 1 || a[DATE] > daysInMonth$1(a[YEAR], a[MONTH]) ? DATE : a[HOUR] < 0 || a[HOUR] > 24 || a[HOUR] === 24 && (a[MINUTE] !== 0 || a[SECOND] !== 0 || a[MILLISECOND] !== 0) ? HOUR : a[MINUTE] < 0 || a[MINUTE] > 59 ? MINUTE : a[SECOND] < 0 || a[SECOND] > 59 ? SECOND : a[MILLISECOND] < 0 || a[MILLISECOND] > 999 ? MILLISECOND : -1;\n\n    if (getParsingFlags(config)._overflowDayOfYear && (overflow < YEAR || overflow > DATE)) {\n      overflow = DATE;\n    }\n\n    if (getParsingFlags(config)._overflowWeeks && overflow === -1) {\n      overflow = WEEK;\n    }\n\n    if (getParsingFlags(config)._overflowWeekday && overflow === -1) {\n      overflow = WEEKDAY;\n    }\n\n    getParsingFlags(config).overflow = overflow;\n  }\n\n  return config;\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// constant that refers to the ISO standard\n// hooks.ISO_8601 = function () {};\n\n/** @type {?} */\n\n\nconst ISO_8601 = 'ISO_8601'; // constant that refers to the RFC 2822 form\n// hooks.RFC_2822 = function () {};\n\n/** @type {?} */\n\nconst RFC_2822 = 'RFC_2822'; // date from string and format string\n\n/**\n * @param {?} config\n * @return {?}\n */\n\nfunction configFromStringAndFormat(config) {\n  // TODO: Move this to another part of the creation flow to prevent circular deps\n  if (config._f === ISO_8601) {\n    return configFromISO(config);\n  }\n\n  if (config._f === RFC_2822) {\n    return configFromRFC2822(config);\n  }\n\n  config._a = [];\n  getParsingFlags(config).empty = true;\n\n  if (isArray(config._f) || !config._i && config._i !== 0) {\n    return config;\n  } // This array is used to make a Date, either with `new Date` or `Date.UTC`\n\n  /** @type {?} */\n\n\n  let input = config._i.toString();\n  /** @type {?} */\n\n\n  let totalParsedInputLength = 0;\n  /** @type {?} */\n\n  const inputLength = input.length;\n  /** @type {?} */\n\n  const tokens = expandFormat(config._f, config._locale).match(formattingTokens) || [];\n  /** @type {?} */\n\n  let i;\n  /** @type {?} */\n\n  let token;\n  /** @type {?} */\n\n  let parsedInput;\n  /** @type {?} */\n\n  let skipped;\n\n  for (i = 0; i < tokens.length; i++) {\n    token = tokens[i];\n    parsedInput = (input.match(getParseRegexForToken(token, config._locale)) || [])[0];\n\n    if (parsedInput) {\n      skipped = input.substr(0, input.indexOf(parsedInput));\n\n      if (skipped.length > 0) {\n        getParsingFlags(config).unusedInput.push(skipped);\n      }\n\n      input = input.slice(input.indexOf(parsedInput) + parsedInput.length);\n      totalParsedInputLength += parsedInput.length;\n    } // don't parse if it's not a known token\n\n\n    if (formatTokenFunctions[token]) {\n      if (parsedInput) {\n        getParsingFlags(config).empty = false;\n      } else {\n        getParsingFlags(config).unusedTokens.push(token);\n      }\n\n      addTimeToArrayFromToken(token, parsedInput, config);\n    } else if (config._strict && !parsedInput) {\n      getParsingFlags(config).unusedTokens.push(token);\n    }\n  } // add remaining unparsed input length to the string\n\n\n  getParsingFlags(config).charsLeftOver = inputLength - totalParsedInputLength;\n\n  if (input.length > 0) {\n    getParsingFlags(config).unusedInput.push(input);\n  } // clear _12h flag if hour is <= 12\n\n\n  if (config._a[HOUR] <= 12 && getParsingFlags(config).bigHour === true && config._a[HOUR] > 0) {\n    getParsingFlags(config).bigHour = void 0;\n  }\n\n  getParsingFlags(config).parsedDateParts = config._a.slice(0);\n  getParsingFlags(config).meridiem = config._meridiem; // handle meridiem\n\n  config._a[HOUR] = meridiemFixWrap(config._locale, config._a[HOUR], config._meridiem);\n  configFromArray(config);\n  return checkOverflow(config);\n}\n/**\n * @param {?} locale\n * @param {?} _hour\n * @param {?} meridiem\n * @return {?}\n */\n\n\nfunction meridiemFixWrap(locale, _hour, meridiem) {\n  /** @type {?} */\n  let hour = _hour;\n\n  if (meridiem == null) {\n    // nothing to do\n    return hour;\n  }\n\n  if (locale.meridiemHour != null) {\n    return locale.meridiemHour(hour, meridiem);\n  }\n\n  if (locale.isPM == null) {\n    // this is not supposed to happen\n    return hour;\n  } // Fallback\n\n  /** @type {?} */\n\n\n  const isPm = locale.isPM(meridiem);\n\n  if (isPm && hour < 12) {\n    hour += 12;\n  }\n\n  if (!isPm && hour === 12) {\n    hour = 0;\n  }\n\n  return hour;\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// date from string and array of format strings\n\n/**\n * @param {?} config\n * @return {?}\n */\n\n\nfunction configFromStringAndArray(config) {\n  /** @type {?} */\n  let tempConfig;\n  /** @type {?} */\n\n  let bestMoment;\n  /** @type {?} */\n\n  let scoreToBeat;\n  /** @type {?} */\n\n  let currentScore;\n\n  if (!config._f || config._f.length === 0) {\n    getParsingFlags(config).invalidFormat = true;\n    return createInvalid(config);\n  }\n  /** @type {?} */\n\n\n  let i;\n\n  for (i = 0; i < config._f.length; i++) {\n    currentScore = 0;\n    tempConfig = Object.assign({}, config);\n\n    if (config._useUTC != null) {\n      tempConfig._useUTC = config._useUTC;\n    }\n\n    tempConfig._f = config._f[i];\n    configFromStringAndFormat(tempConfig);\n\n    if (!isValid(tempConfig)) {\n      continue;\n    } // if there is any input that was not parsed add a penalty for that format\n\n\n    currentScore += getParsingFlags(tempConfig).charsLeftOver; // or tokens\n\n    currentScore += getParsingFlags(tempConfig).unusedTokens.length * 10;\n    getParsingFlags(tempConfig).score = currentScore;\n\n    if (scoreToBeat == null || currentScore < scoreToBeat) {\n      scoreToBeat = currentScore;\n      bestMoment = tempConfig;\n    }\n  }\n\n  return Object.assign(config, bestMoment || tempConfig);\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @param {?} config\n * @return {?}\n */\n\n\nfunction configFromObject(config) {\n  if (config._d) {\n    return config;\n  }\n  /** @type {?} */\n\n\n  const input = config._i;\n\n  if (isObject(input)) {\n    /** @type {?} */\n    const i = normalizeObjectUnits(\n    /** @type {?} */\n    input);\n    config._a = [i.year, i.month, i.day, i.hours, i.minutes, i.seconds, i.milliseconds] // todo: obsolete -> remove it\n    .map(\n    /**\n    * @param {?} obj\n    * @return {?}\n    */\n    obj => isString(obj) ? parseInt(obj, 10) : obj);\n  }\n\n  return configFromArray(config);\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @param {?} config\n * @return {?}\n */\n\n\nfunction createFromConfig(config) {\n  /** @type {?} */\n  const res = checkOverflow(prepareConfig(config)); // todo: remove, in moment.js it's never called cuz of moment constructor\n\n  res._d = new Date(res._d != null ? res._d.getTime() : NaN);\n\n  if (!isValid(Object.assign({}, res, {\n    _isValid: null\n  }))) {\n    res._d = new Date(NaN);\n  } // todo: update offset\n\n  /*if (res._nextDay) {\n    // Adding is smart enough around DST\n    res._d = add(res._d, 1, 'day');\n    res._nextDay = undefined;\n  }*/\n\n\n  return res;\n}\n/**\n * @param {?} config\n * @return {?}\n */\n\n\nfunction prepareConfig(config) {\n  /** @type {?} */\n  let input = config._i;\n  /** @type {?} */\n\n  const format = config._f;\n  config._locale = config._locale || getLocale(config._l);\n\n  if (input === null || format === undefined && input === '') {\n    return createInvalid(config, {\n      nullInput: true\n    });\n  }\n\n  if (isString(input)) {\n    config._i = input = config._locale.preparse(input, format);\n  }\n\n  if (isDate(input)) {\n    config._d = cloneDate(input);\n    return config;\n  } // todo: add check for recursion\n\n\n  if (isArray(format)) {\n    configFromStringAndArray(config);\n  } else if (format) {\n    configFromStringAndFormat(config);\n  } else {\n    configFromInput(config);\n  }\n\n  if (!isValid(config)) {\n    config._d = null;\n  }\n\n  return config;\n}\n/**\n * @param {?} config\n * @return {?}\n */\n\n\nfunction configFromInput(config) {\n  /** @type {?} */\n  const input = config._i;\n\n  if (isUndefined(input)) {\n    config._d = new Date();\n  } else if (isDate(input)) {\n    config._d = cloneDate(input);\n  } else if (isString(input)) {\n    configFromString(config);\n  } else if (isArray(input) && input.length) {\n    /** @type {?} */\n    const _arr = input.slice(0);\n\n    config._a = _arr.map(\n    /**\n    * @param {?} obj\n    * @return {?}\n    */\n    obj => isString(obj) ? parseInt(obj, 10) : obj);\n    configFromArray(config);\n  } else if (isObject(input)) {\n    configFromObject(config);\n  } else if (isNumber(input)) {\n    // from milliseconds\n    config._d = new Date(input);\n  } else {\n    //   hooks.createFromInputFallback(config);\n    return createInvalid(config);\n  }\n\n  return config;\n}\n/**\n * @param {?} input\n * @param {?=} format\n * @param {?=} localeKey\n * @param {?=} strict\n * @param {?=} isUTC\n * @return {?}\n */\n\n\nfunction createLocalOrUTC(input, format, localeKey, strict, isUTC) {\n  /** @type {?} */\n  const config = {};\n  /** @type {?} */\n\n  let _input = input; // params switch -> skip; test it well\n  // if (localeKey === true || localeKey === false) {\n  //     strict = localeKey;\n  //     localeKey = undefined;\n  // }\n  // todo: fail fast and return not valid date\n\n  if (isObject(_input) && isObjectEmpty(_input) || isArray(_input) && _input.length === 0) {\n    _input = undefined;\n  } // object construction must be done this way.\n  // https://github.com/moment/moment/issues/1423\n  // config._isAMomentObject = true;\n\n\n  config._useUTC = config._isUTC = isUTC;\n  config._l = localeKey;\n  config._i = _input;\n  config._f = format;\n  config._strict = strict;\n  return createFromConfig(config);\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @param {?} input\n * @param {?=} format\n * @param {?=} localeKey\n * @param {?=} strict\n * @param {?=} isUTC\n * @return {?}\n */\n\n\nfunction parseDate(input, format, localeKey, strict, isUTC) {\n  if (isDate(input)) {\n    return input;\n  }\n  /** @type {?} */\n\n\n  const config = createLocalOrUTC(input, format, localeKey, strict, isUTC);\n  return config._d;\n}\n/**\n * @param {?} date\n * @return {?}\n */\n\n\nfunction utcAsLocal(date) {\n  if (!(date instanceof Date)) {\n    return null;\n  }\n\n  return new Date(date.getUTCFullYear(), date.getUTCMonth(), date.getUTCDate(), date.getUTCHours(), date.getUTCMinutes(), date.getUTCSeconds(), date.getUTCMilliseconds());\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @param {?} num\n * @return {?}\n */\n\n\nfunction absRound(num) {\n  return num < 0 ? Math.round(num * -1) * -1 : Math.round(num);\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @param {?} date1\n * @param {?} date2\n * @param {?=} units\n * @return {?}\n */\n\n\nfunction isAfter(date1, date2, units = 'milliseconds') {\n  if (!date1 || !date2) {\n    return false;\n  }\n\n  if (units === 'milliseconds') {\n    return date1.valueOf() > date2.valueOf();\n  }\n\n  return date2.valueOf() < startOf(date1, units).valueOf();\n}\n/**\n * @param {?} date1\n * @param {?} date2\n * @param {?=} units\n * @return {?}\n */\n\n\nfunction isBefore(date1, date2, units = 'milliseconds') {\n  if (!date1 || !date2) {\n    return false;\n  }\n\n  if (units === 'milliseconds') {\n    return date1.valueOf() < date2.valueOf();\n  }\n\n  return endOf(date1, units).valueOf() < date2.valueOf();\n}\n/**\n * @param {?} date\n * @param {?} daysDisabled\n * @return {?}\n */\n\n\nfunction isDisabledDay(date, daysDisabled) {\n  if (daysDisabled === undefined || !daysDisabled || !daysDisabled.length) {\n    return false;\n  }\n\n  return daysDisabled.some(\n  /**\n  * @param {?} day\n  * @return {?}\n  */\n  day => day === date.getDay());\n}\n/**\n * @param {?} date\n * @param {?} from\n * @param {?} to\n * @param {?} units\n * @param {?=} inclusivity\n * @return {?}\n */\n\n\nfunction isBetween(date, from, to, units, inclusivity = '()') {\n  /** @type {?} */\n  const leftBound = inclusivity[0] === '(' ? isAfter(date, from, units) : !isBefore(date, from, units);\n  /** @type {?} */\n\n  const rightBound = inclusivity[1] === ')' ? isBefore(date, to, units) : !isAfter(date, to, units);\n  return leftBound && rightBound;\n}\n/**\n * @param {?} date1\n * @param {?} date2\n * @param {?=} units\n * @return {?}\n */\n\n\nfunction isSame(date1, date2, units = 'milliseconds') {\n  if (!date1 || !date2) {\n    return false;\n  }\n\n  if (units === 'milliseconds') {\n    return date1.valueOf() === date2.valueOf();\n  }\n  /** @type {?} */\n\n\n  const inputMs = date2.valueOf();\n  return startOf(date1, units).valueOf() <= inputMs && inputMs <= endOf(date1, units).valueOf();\n}\n/**\n * @param {?} date1\n * @param {?} date2\n * @return {?}\n */\n\n\nfunction isSameDay$1(date1, date2) {\n  return date1.getDay() == date2.getDay();\n}\n/**\n * @param {?} date1\n * @param {?} date2\n * @param {?=} units\n * @return {?}\n */\n\n\nfunction isSameOrAfter(date1, date2, units) {\n  return isSame(date1, date2, units) || isAfter(date1, date2, units);\n}\n/**\n * @param {?} date1\n * @param {?} date2\n * @param {?=} units\n * @return {?}\n */\n\n\nfunction isSameOrBefore(date1, date2, units) {\n  return isSame(date1, date2, units) || isBefore(date1, date2, units);\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/** @type {?} */\n\n\nconst aspNetRegex = /^(\\-|\\+)?(?:(\\d*)[. ])?(\\d+)\\:(\\d+)(?:\\:(\\d+)(\\.\\d*)?)?$/; // from http://docs.closure-library.googlecode.com/git/closure_goog_date_date.js.source.html\n// somewhat more in line with 4.4.3.2 2004 spec, but allows decimal anywhere\n// and further modified to allow for strings containing both week and day\n// tslint:disable-next-line\n\n/** @type {?} */\n\nconst isoRegex = /^(-|\\+)?P(?:([-+]?[0-9,.]*)Y)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)W)?(?:([-+]?[0-9,.]*)D)?(?:T(?:([-+]?[0-9,.]*)H)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)S)?)?$/;\n/**\n * @param {?=} input\n * @param {?=} key\n * @param {?=} config\n * @return {?}\n */\n\nfunction createDuration(input, key, config = {}) {\n  /** @type {?} */\n  const duration = convertDuration(input, key); // matching against regexp is expensive, do it on demand\n\n  return new Duration(duration, config);\n}\n/**\n * @param {?} input\n * @param {?} key\n * @return {?}\n */\n\n\nfunction convertDuration(input, key) {\n  // checks for null or undefined\n  if (input == null) {\n    return {};\n  }\n\n  if (isDuration(input)) {\n    return {\n      milliseconds: input._milliseconds,\n      day: input._days,\n      month: input._months\n    };\n  }\n\n  if (isNumber(input)) {\n    // duration = {};\n    return key ? {\n      [key]: input\n    } : {\n      milliseconds: input\n    };\n  }\n\n  if (isString(input)) {\n    /** @type {?} */\n    let match = aspNetRegex.exec(input);\n\n    if (match) {\n      /** @type {?} */\n      const sign = match[1] === '-' ? -1 : 1;\n      return {\n        year: 0,\n        day: toInt(match[DATE]) * sign,\n        hours: toInt(match[HOUR]) * sign,\n        minutes: toInt(match[MINUTE]) * sign,\n        seconds: toInt(match[SECOND]) * sign,\n        // the millisecond decimal point is included in the match\n        milliseconds: toInt(absRound(toInt(match[MILLISECOND]) * 1000)) * sign\n      };\n    }\n\n    match = isoRegex.exec(input);\n\n    if (match) {\n      /** @type {?} */\n      const sign = match[1] === '-' ? -1 : match[1] === '+' ? 1 : 1;\n      return {\n        year: parseIso(match[2], sign),\n        month: parseIso(match[3], sign),\n        week: parseIso(match[4], sign),\n        day: parseIso(match[5], sign),\n        hours: parseIso(match[6], sign),\n        minutes: parseIso(match[7], sign),\n        seconds: parseIso(match[8], sign)\n      };\n    }\n  }\n\n  if (isObject(input) && ('from' in input || 'to' in input)) {\n    /** @type {?} */\n    const diffRes = momentsDifference(parseDate(input.from), parseDate(input.to));\n    return {\n      milliseconds: diffRes.milliseconds,\n      month: diffRes.months\n    };\n  }\n\n  return input;\n} // createDuration.fn = Duration.prototype;\n// createDuration.invalid = invalid;\n\n/**\n * @param {?} inp\n * @param {?} sign\n * @return {?}\n */\n\n\nfunction parseIso(inp, sign) {\n  // We'd normally use ~~inp for this, but unfortunately it also\n  // converts floats to ints.\n  // inp may be undefined, so careful calling replace on it.\n\n  /** @type {?} */\n  const res = inp && parseFloat(inp.replace(',', '.')); // apply sign while we're at it\n\n  return (isNaN(res) ? 0 : res) * sign;\n}\n/**\n * @param {?} base\n * @param {?} other\n * @return {?}\n */\n\n\nfunction positiveMomentsDifference(base, other) {\n  /** @type {?} */\n  const res = {\n    milliseconds: 0,\n    months: 0\n  };\n  res.months = getMonth(other) - getMonth(base) + (getFullYear(other) - getFullYear(base)) * 12;\n  /** @type {?} */\n\n  const _basePlus = add(cloneDate(base), res.months, 'month');\n\n  if (isAfter(_basePlus, other)) {\n    --res.months;\n  }\n\n  res.milliseconds = +other - +add(cloneDate(base), res.months, 'month');\n  return res;\n}\n/**\n * @param {?} base\n * @param {?} other\n * @return {?}\n */\n\n\nfunction momentsDifference(base, other) {\n  if (!(isDateValid(base) && isDateValid(other))) {\n    return {\n      milliseconds: 0,\n      months: 0\n    };\n  }\n  /** @type {?} */\n\n\n  let res;\n  /** @type {?} */\n\n  const _other = cloneWithOffset(other, base, {\n    _offset: base.getTimezoneOffset()\n  });\n\n  if (isBefore(base, _other)) {\n    res = positiveMomentsDifference(base, _other);\n  } else {\n    res = positiveMomentsDifference(_other, base);\n    res.milliseconds = -res.milliseconds;\n    res.months = -res.months;\n  }\n\n  return res;\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @param {?} date\n * @param {?} val\n * @param {?} period\n * @param {?=} isUTC\n * @return {?}\n */\n\n\nfunction add(date, val, period, isUTC) {\n  /** @type {?} */\n  const dur = createDuration(val, period);\n  return addSubtract(date, dur, 1, isUTC);\n}\n/**\n * @param {?} date\n * @param {?} val\n * @param {?} period\n * @param {?=} isUTC\n * @return {?}\n */\n\n\nfunction subtract(date, val, period, isUTC) {\n  /** @type {?} */\n  const dur = createDuration(val, period);\n  return addSubtract(date, dur, -1, isUTC);\n}\n/**\n * @param {?} date\n * @param {?} duration\n * @param {?} isAdding\n * @param {?=} isUTC\n * @return {?}\n */\n\n\nfunction addSubtract(date, duration, isAdding, isUTC) {\n  /** @type {?} */\n  const milliseconds = duration._milliseconds;\n  /** @type {?} */\n\n  const days = absRound(duration._days);\n  /** @type {?} */\n\n  const months = absRound(duration._months); // todo: add timezones support\n  // const _updateOffset = updateOffset == null ? true : updateOffset;\n\n  if (months) {\n    setMonth(date, getMonth(date, isUTC) + months * isAdding, isUTC);\n  }\n\n  if (days) {\n    setDate(date, getDate(date, isUTC) + days * isAdding, isUTC);\n  }\n\n  if (milliseconds) {\n    setTime(date, getTime(date) + milliseconds * isAdding);\n  }\n\n  return cloneDate(date); // todo: add timezones support\n  // if (_updateOffset) {\n  //   hooks.updateOffset(date, days || months);\n  // }\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @return {?}\n */\n\n\nfunction initDayOfWeek() {\n  // FORMATTING\n  addFormatToken('d', null, 'do',\n  /**\n  * @param {?} date\n  * @param {?} opts\n  * @return {?}\n  */\n  function (date, opts) {\n    return getDay(date, opts.isUTC).toString(10);\n  });\n  addFormatToken('dd', null, null,\n  /**\n  * @param {?} date\n  * @param {?} opts\n  * @return {?}\n  */\n  function (date, opts) {\n    return opts.locale.weekdaysMin(date, opts.format, opts.isUTC);\n  });\n  addFormatToken('ddd', null, null,\n  /**\n  * @param {?} date\n  * @param {?} opts\n  * @return {?}\n  */\n  function (date, opts) {\n    return opts.locale.weekdaysShort(date, opts.format, opts.isUTC);\n  });\n  addFormatToken('dddd', null, null,\n  /**\n  * @param {?} date\n  * @param {?} opts\n  * @return {?}\n  */\n  function (date, opts) {\n    return opts.locale.weekdays(date, opts.format, opts.isUTC);\n  });\n  addFormatToken('e', null, null,\n  /**\n  * @param {?} date\n  * @param {?} opts\n  * @return {?}\n  */\n  function (date, opts) {\n    return getLocaleDayOfWeek(date, opts.locale, opts.isUTC).toString(10); // return getDay(date, opts.isUTC).toString(10);\n  });\n  addFormatToken('E', null, null,\n  /**\n  * @param {?} date\n  * @param {?} opts\n  * @return {?}\n  */\n  function (date, opts) {\n    return getISODayOfWeek(date, opts.isUTC).toString(10);\n  }); // ALIASES\n\n  addUnitAlias('day', 'd');\n  addUnitAlias('weekday', 'e');\n  addUnitAlias('isoWeekday', 'E'); // PRIORITY\n\n  addUnitPriority('day', 11);\n  addUnitPriority('weekday', 11);\n  addUnitPriority('isoWeekday', 11); // PARSING\n\n  addRegexToken('d', match1to2);\n  addRegexToken('e', match1to2);\n  addRegexToken('E', match1to2);\n  addRegexToken('dd',\n  /**\n  * @param {?} isStrict\n  * @param {?} locale\n  * @return {?}\n  */\n  function (isStrict, locale) {\n    return locale.weekdaysMinRegex(isStrict);\n  });\n  addRegexToken('ddd',\n  /**\n  * @param {?} isStrict\n  * @param {?} locale\n  * @return {?}\n  */\n  function (isStrict, locale) {\n    return locale.weekdaysShortRegex(isStrict);\n  });\n  addRegexToken('dddd',\n  /**\n  * @param {?} isStrict\n  * @param {?} locale\n  * @return {?}\n  */\n  function (isStrict, locale) {\n    return locale.weekdaysRegex(isStrict);\n  });\n  addWeekParseToken(['dd', 'ddd', 'dddd'],\n  /**\n  * @param {?} input\n  * @param {?} week\n  * @param {?} config\n  * @param {?} token\n  * @return {?}\n  */\n  function (input, week, config, token) {\n    /** @type {?} */\n    const weekday = config._locale.weekdaysParse(input, token, config._strict); // if we didn't get a weekday name, mark the date as invalid\n\n\n    if (weekday != null) {\n      week.d = weekday;\n    } else {\n      getParsingFlags(config).invalidWeekday = !!input;\n    }\n\n    return config;\n  });\n  addWeekParseToken(['d', 'e', 'E'],\n  /**\n  * @param {?} input\n  * @param {?} week\n  * @param {?} config\n  * @param {?} token\n  * @return {?}\n  */\n  function (input, week, config, token) {\n    week[token] = toInt(input);\n    return config;\n  });\n} // HELPERS\n\n/**\n * @param {?} input\n * @param {?} locale\n * @return {?}\n */\n\n\nfunction parseWeekday(input, locale) {\n  if (!isString(input)) {\n    return input;\n  }\n  /** @type {?} */\n\n\n  const _num = parseInt(input, 10);\n\n  if (!isNaN(_num)) {\n    return _num;\n  }\n  /** @type {?} */\n\n\n  const _weekDay = locale.weekdaysParse(input);\n\n  if (isNumber(_weekDay)) {\n    return _weekDay;\n  }\n\n  return null;\n}\n/**\n * @param {?} input\n * @param {?=} locale\n * @return {?}\n */\n\n\nfunction parseIsoWeekday(input, locale = getLocale()) {\n  if (isString(input)) {\n    return locale.weekdaysParse(input) % 7 || 7;\n  }\n\n  return isNumber(input) && isNaN(input) ? null : input;\n} // MOMENTS\n\n/**\n * @param {?} date\n * @param {?} input\n * @param {?} opts\n * @return {?}\n */\n\n\nfunction getSetDayOfWeek(date, input, opts) {\n  if (!input) {\n    return getDayOfWeek(date, opts.isUTC);\n  }\n\n  return setDayOfWeek(date, input, opts.locale, opts.isUTC);\n}\n/**\n * @param {?} date\n * @param {?} input\n * @param {?=} locale\n * @param {?=} isUTC\n * @return {?}\n */\n\n\nfunction setDayOfWeek(date, input, locale = getLocale(), isUTC) {\n  /** @type {?} */\n  const day = getDay(date, isUTC);\n  /** @type {?} */\n\n  const _input = parseWeekday(input, locale);\n\n  return add(date, _input - day, 'day');\n}\n/**\n * @param {?} date\n * @param {?=} isUTC\n * @return {?}\n */\n\n\nfunction getDayOfWeek(date, isUTC) {\n  return getDay(date, isUTC);\n}\n/**\n * ****************************************\n * @param {?} date\n * @param {?=} locale\n * @param {?=} isUTC\n * @return {?}\n */\n// todo: utc\n// getSetLocaleDayOfWeek\n\n\nfunction getLocaleDayOfWeek(date, locale = getLocale(), isUTC) {\n  return (getDay(date, isUTC) + 7 - locale.firstDayOfWeek()) % 7;\n}\n/**\n * @param {?} date\n * @param {?} input\n * @param {?=} opts\n * @return {?}\n */\n\n\nfunction setLocaleDayOfWeek(date, input, opts = {}) {\n  /** @type {?} */\n  const weekday = getLocaleDayOfWeek(date, opts.locale, opts.isUTC);\n  return add(date, input - weekday, 'day');\n} // getSetISODayOfWeek\n\n/**\n * @param {?} date\n * @param {?=} isUTC\n * @return {?}\n */\n\n\nfunction getISODayOfWeek(date, isUTC) {\n  return getDay(date, isUTC) || 7;\n}\n/**\n * @param {?} date\n * @param {?} input\n * @param {?=} opts\n * @return {?}\n */\n\n\nfunction setISODayOfWeek(date, input, opts = {}) {\n  // behaves the same as moment#day except\n  // as a getter, returns 7 instead of 0 (1-7 range instead of 0-6)\n  // as a setter, sunday should belong to the previous week.\n  // behaves the same as moment#day except\n  // as a getter, returns 7 instead of 0 (1-7 range instead of 0-6)\n  // as a setter, sunday should belong to the previous week.\n\n  /** @type {?} */\n  const weekday = parseIsoWeekday(input, opts.locale);\n  return setDayOfWeek(date, getDayOfWeek(date) % 7 ? weekday : weekday - 7);\n}\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// tslint:disable:comment-format binary-expression-operand-order max-line-length\n//! moment.js locale configuration\n//! locale : Arabic [ar]\n//! author : Abdel Said: https://github.com/abdelsaid\n//! author : Ahmed Elkhatib\n//! author : forabi https://github.com/forabi\n\n/** @type {?} */\n\n\nconst symbolMap = {\n  1: '١',\n  2: '٢',\n  3: '٣',\n  4: '٤',\n  5: '٥',\n  6: '٦',\n  7: '٧',\n  8: '٨',\n  9: '٩',\n  0: '٠'\n};\n/** @type {?} */\n\nconst numberMap = {\n  '١': '1',\n  '٢': '2',\n  '٣': '3',\n  '٤': '4',\n  '٥': '5',\n  '٦': '6',\n  '٧': '7',\n  '٨': '8',\n  '٩': '9',\n  '٠': '0'\n};\n/** @type {?} */\n\nconst pluralForm =\n/**\n* @param {?} num\n* @return {?}\n*/\nfunction (num) {\n  return num === 0 ? 0 : num === 1 ? 1 : num === 2 ? 2 : num % 100 >= 3 && num % 100 <= 10 ? 3 : num % 100 >= 11 ? 4 : 5;\n};\n/** @type {?} */\n\n\nconst plurals = {\n  s: ['أقل من ثانية', 'ثانية واحدة', ['ثانيتان', 'ثانيتين'], '%d ثوان', '%d ثانية', '%d ثانية'],\n  m: ['أقل من دقيقة', 'دقيقة واحدة', ['دقيقتان', 'دقيقتين'], '%d دقائق', '%d دقيقة', '%d دقيقة'],\n  h: ['أقل من ساعة', 'ساعة واحدة', ['ساعتان', 'ساعتين'], '%d ساعات', '%d ساعة', '%d ساعة'],\n  d: ['أقل من يوم', 'يوم واحد', ['يومان', 'يومين'], '%d أيام', '%d يومًا', '%d يوم'],\n  M: ['أقل من شهر', 'شهر واحد', ['شهران', 'شهرين'], '%d أشهر', '%d شهرا', '%d شهر'],\n  y: ['أقل من عام', 'عام واحد', ['عامان', 'عامين'], '%d أعوام', '%d عامًا', '%d عام']\n};\n/** @type {?} */\n\nconst pluralize =\n/**\n* @param {?} u\n* @return {?}\n*/\nfunction (u) {\n  return (\n    /**\n    * @param {?} num\n    * @param {?} withoutSuffix\n    * @return {?}\n    */\n    function (num, withoutSuffix) {\n      /** @type {?} */\n      const f = pluralForm(num);\n      /** @type {?} */\n\n      let str = plurals[u][pluralForm(num)];\n\n      if (f === 2) {\n        str = str[withoutSuffix ? 0 : 1];\n      }\n\n      return (\n        /** @type {?} */\n        str.replace(/%d/i, num.toString())\n      );\n    }\n  );\n};\n/** @type {?} */\n\n\nconst months = ['يناير', 'فبراير', 'مارس', 'أبريل', 'مايو', 'يونيو', 'يوليو', 'أغسطس', 'سبتمبر', 'أكتوبر', 'نوفمبر', 'ديسمبر'];\n/** @type {?} */\n\nconst arLocale = {\n  abbr: 'ar',\n  months,\n  monthsShort: months,\n  weekdays: 'الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split('_'),\n  weekdaysShort: 'أحد_إثنين_ثلاثاء_أربعاء_خميس_جمعة_سبت'.split('_'),\n  weekdaysMin: 'ح_ن_ث_ر_خ_ج_س'.split('_'),\n  weekdaysParseExact: true,\n  longDateFormat: {\n    LT: 'HH:mm',\n    LTS: 'HH:mm:ss',\n    L: 'D/\\u200FM/\\u200FYYYY',\n    LL: 'D MMMM YYYY',\n    LLL: 'D MMMM YYYY HH:mm',\n    LLLL: 'dddd D MMMM YYYY HH:mm'\n  },\n  meridiemParse: /ص|م/,\n\n  /**\n   * @param {?} input\n   * @return {?}\n   */\n  isPM(input) {\n    return 'م' === input;\n  },\n\n  /**\n   * @param {?} hour\n   * @param {?} minute\n   * @param {?} isLower\n   * @return {?}\n   */\n  meridiem(hour, minute, isLower) {\n    if (hour < 12) {\n      return 'ص';\n    } else {\n      return 'م';\n    }\n  },\n\n  calendar: {\n    sameDay: '[اليوم عند الساعة] LT',\n    nextDay: '[غدًا عند الساعة] LT',\n    nextWeek: 'dddd [عند الساعة] LT',\n    lastDay: '[أمس عند الساعة] LT',\n    lastWeek: 'dddd [عند الساعة] LT',\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: 'بعد %s',\n    past: 'منذ %s',\n    s: pluralize('s'),\n    ss: pluralize('s'),\n    m: pluralize('m'),\n    mm: pluralize('m'),\n    h: pluralize('h'),\n    hh: pluralize('h'),\n    d: pluralize('d'),\n    dd: pluralize('d'),\n    M: pluralize('M'),\n    MM: pluralize('M'),\n    y: pluralize('y'),\n    yy: pluralize('y')\n  },\n\n  /**\n   * @param {?} str\n   * @return {?}\n   */\n  preparse(str) {\n    return str.replace(/[١٢٣٤٥٦٧٨٩٠]/g,\n    /**\n    * @param {?} match\n    * @return {?}\n    */\n    function (match) {\n      return numberMap[match];\n    }).replace(/،/g, ',');\n  },\n\n  /**\n   * @param {?} str\n   * @return {?}\n   */\n  postformat(str) {\n    return str.replace(/\\d/g,\n    /**\n    * @param {?} match\n    * @return {?}\n    */\n    function (match) {\n      return symbolMap[match];\n    }).replace(/,/g, '،');\n  },\n\n  week: {\n    dow: 6,\n    // Saturday is the first day of the week.\n    doy: 12 // The week that contains Jan 1st is the first week of the year.\n\n  }\n};\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// tslint:disable:comment-format binary-expression-operand-order max-line-length\n// tslint:disable:no-bitwise prefer-template cyclomatic-complexity\n// tslint:disable:no-shadowed-variable switch-default prefer-const\n// tslint:disable:one-variable-per-declaration newline-before-return\n//! moment.js locale configuration\n//! locale : Bulgarian [bg]\n//! author : Iskren Ivov Chernev : https://github.com/ichernev\n//! author : Kunal Marwaha : https://github.com/marwahaha\n//! author : Matt Grande : https://github.com/mattgrande\n//! author : Isaac Cambron : https://github.com/icambron\n//! author : Venelin Manchev : https://github.com/vmanchev\n\n/** @type {?} */\n\nconst bgLocale = {\n  abbr: 'bg',\n  months: 'януари_февруари_март_април_май_юни_юли_август_септември_октомври_ноември_декември'.split('_'),\n  monthsShort: 'янр_фев_мар_апр_май_юни_юли_авг_сеп_окт_ное_дек'.split('_'),\n  weekdays: 'неделя_понеделник_вторник_сряда_четвъртък_петък_събота'.split('_'),\n  weekdaysShort: 'нед_пон_вто_сря_чет_пет_съб'.split('_'),\n  weekdaysMin: 'нд_пн_вт_ср_чт_пт_сб'.split('_'),\n  longDateFormat: {\n    LT: 'H:mm',\n    LTS: 'H:mm:ss',\n    L: 'D.MM.YYYY',\n    LL: 'D MMMM YYYY',\n    LLL: 'D MMMM YYYY H:mm',\n    LLLL: 'dddd, D MMMM YYYY H:mm'\n  },\n  calendar: {\n    sameDay: '[Днес в] LT',\n    nextDay: '[Утре в] LT',\n    nextWeek: 'dddd [в] LT',\n    lastDay: '[Вчера в] LT',\n    lastWeek:\n    /**\n    * @param {?} d\n    * @return {?}\n    */\n    function (d) {\n      switch (d) {\n        case 0:\n        case 3:\n        case 6:\n          return '[В изминалата] dddd [в] LT';\n\n        case 1:\n        case 2:\n        case 4:\n        case 5:\n          return '[В изминалия] dddd [в] LT';\n      }\n    },\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: 'след %s',\n    past: 'преди %s',\n    s: 'няколко секунди',\n    ss: '%d секунди',\n    m: 'минута',\n    mm: '%d минути',\n    h: 'час',\n    hh: '%d часа',\n    d: 'ден',\n    dd: '%d дни',\n    M: 'месец',\n    MM: '%d месеца',\n    y: 'година',\n    yy: '%d години'\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}-(ев|ен|ти|ви|ри|ми)/,\n  ordinal:\n  /**\n  * @param {?} _num\n  * @return {?}\n  */\n  function (_num) {\n    /** @type {?} */\n    const number = Number(_num);\n    /** @type {?} */\n\n    let lastDigit = number % 10;\n    /** @type {?} */\n\n    let last2Digits = number % 100;\n\n    if (number === 0) {\n      return number + '-ев';\n    } else if (last2Digits === 0) {\n      return number + '-ен';\n    } else if (last2Digits > 10 && last2Digits < 20) {\n      return number + '-ти';\n    } else if (lastDigit === 1) {\n      return number + '-ви';\n    } else if (lastDigit === 2) {\n      return number + '-ри';\n    } else if (lastDigit === 7 || lastDigit === 8) {\n      return number + '-ми';\n    } else {\n      return number + '-ти';\n    }\n  },\n  week: {\n    dow: 1,\n    // Monday is the first day of the week.\n    doy: 7 // The week that contains Jan 1st is the first week of the year.\n\n  }\n};\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n//! moment.js locale configuration\n//! locale : Catalan [ca]\n//! author : Xavier Arbat : https://github.com/XavisaurusRex\n\n/** @type {?} */\n\nlet monthsShortDot = 'gen._feb._mar._abr._mai._jun._jul._ago._set._oct._nov._des.'.split('_');\n/** @type {?} */\n\nlet monthsShort = 'ene_feb_mar_abr_mai_jun_jul_ago_set_oct_nov_des'.split('_');\n/** @type {?} */\n\nlet monthsParse = [/^gen/i, /^feb/i, /^mar/i, /^abr/i, /^mai/i, /^jun/i, /^jul/i, /^ago/i, /^set/i, /^oct/i, /^nov/i, /^des/i];\n/** @type {?} */\n\nlet monthsRegex = /^(gener|febrer|març|abril|maig|juny|juliol|agost|setembre|octubre|novembre|desembre|gen\\.?|feb\\.?|mar\\.?|abr\\.?|mai\\.?|jun\\.?|jul\\.?|ago\\.?|set\\.?|oct\\.?|nov\\.?|des\\.?)/i;\n/** @type {?} */\n\nconst caLocale = {\n  abbr: 'ca',\n  months: 'gener_febrer_març_abril_maig_juny_juliol_agost_setembre_octubre_novembre_desembre'.split('_'),\n\n  /**\n   * @param {?} date\n   * @param {?} format\n   * @param {?=} isUTC\n   * @return {?}\n   */\n  monthsShort(date, format, isUTC) {\n    if (!date) {\n      return monthsShortDot;\n    }\n\n    if (/-MMM-/.test(format)) {\n      return monthsShort[getMonth(date, isUTC)];\n    }\n\n    return monthsShortDot[getMonth(date, isUTC)];\n  },\n\n  monthsRegex,\n  monthsShortRegex: monthsRegex,\n  monthsStrictRegex: /^(gener|febrer|març|abril|maig|juny|juliol|agost|setembre|octubre|novembre|desembre)/i,\n  monthsShortStrictRegex: /^(gen\\.?|feb\\.?|mar\\.?|abr\\.?|mai\\.?|jun\\.?|jul\\.?|ago\\.?|set\\.?|oct\\.?|nov\\.?|des\\.?)/i,\n  monthsParse,\n  longMonthsParse: monthsParse,\n  shortMonthsParse: monthsParse,\n  weekdays: 'diumenge_dilluns_dimarts_dimecres_dijous_divendres_dissabte'.split('_'),\n  weekdaysShort: 'diu._dil._dim._dix._dij._div._dis.'.split('_'),\n  weekdaysMin: 'dg_dl_dt_dc_dj_dv_ds'.split('_'),\n  weekdaysParseExact: true,\n  longDateFormat: {\n    LT: 'H:mm',\n    LTS: 'H:mm:ss',\n    L: 'DD/MM/YYYY',\n    LL: 'D [de] MMMM [de] YYYY',\n    LLL: 'D [de] MMMM [de] YYYY H:mm',\n    LLLL: 'dddd, D [de] MMMM [de] YYYY H:mm'\n  },\n  calendar: {\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    sameDay(date) {\n      return '[avui a ' + ('la' + (getHours(date) !== 1) ? 'les' : '') + '] LT';\n    },\n\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    nextDay(date) {\n      return '[dema a ' + ('la' + (getHours(date) !== 1) ? 'les' : '') + '] LT';\n    },\n\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    nextWeek(date) {\n      return 'dddd [a ' + ('la' + (getHours(date) !== 1) ? 'les' : '') + '] LT';\n    },\n\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    lastDay(date) {\n      return '[ahir a ' + ('la' + (getHours(date) !== 1) ? 'les' : '') + '] LT';\n    },\n\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    lastWeek(date) {\n      return '[el] dddd [' + ('passada la ' + (getHours(date) !== 1) ? 'passades les' : '') + '] LT';\n    },\n\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: 'en %s',\n    past: 'fa %s',\n    s: 'uns segons',\n    ss: '%d segons',\n    m: 'un minut',\n    mm: '%d minuts',\n    h: 'una hora',\n    hh: '%d hores',\n    d: 'un dia',\n    dd: '%d dies',\n    M: 'un mes',\n    MM: '%d mesos',\n    y: 'un any',\n    yy: '%d anys'\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}(er|on|er|rt|é)/,\n\n  /**\n   * @param {?} _num\n   * @return {?}\n   */\n  ordinal(_num) {\n    /** @type {?} */\n    const num = Number(_num);\n    /** @type {?} */\n\n    const output = num > 4 ? 'é' : num === 1 || num === 3 ? 'r' : num === 2 ? 'n' : num === 4 ? 't' : 'é';\n    return num + output;\n  },\n\n  week: {\n    dow: 1,\n    // Monday is the first day of the week.\n    doy: 4 // The week that contains Jan 4th is the first week of the year.\n\n  }\n};\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n//! moment.js locale configuration\n//! locale : Czech [cs]\n//! author : petrbela : https://github.com/petrbela\n\n/** @type {?} */\n\nconst months$1 = 'leden_únor_březen_duben_květen_červen_červenec_srpen_září_říjen_listopad_prosinec'.split('_');\n/** @type {?} */\n\nconst monthsShort$1 = 'led_úno_bře_dub_kvě_čvn_čvc_srp_zář_říj_lis_pro'.split('_');\n/**\n * @param {?} num\n * @return {?}\n */\n\nfunction plural(num) {\n  return num > 1 && num < 5 && ~~(num / 10) !== 1;\n}\n/**\n * @param {?} num\n * @param {?} withoutSuffix\n * @param {?} key\n * @param {?} isFuture\n * @return {?}\n */\n\n\nfunction translate(num, withoutSuffix, key, isFuture) {\n  /** @type {?} */\n  const result = num + ' ';\n\n  switch (key) {\n    case 's':\n      // a few seconds / in a few seconds / a few seconds ago\n      return withoutSuffix || isFuture ? 'pár sekund' : 'pár sekundami';\n\n    case 'ss':\n      // 9 seconds / in 9 seconds / 9 seconds ago\n      if (withoutSuffix || isFuture) {\n        return result + (plural(num) ? 'sekundy' : 'sekund');\n      } else {\n        return result + 'sekundami';\n      }\n\n    // break;\n\n    case 'm':\n      // a minute / in a minute / a minute ago\n      return withoutSuffix ? 'minuta' : isFuture ? 'minutu' : 'minutou';\n\n    case 'mm':\n      // 9 minutes / in 9 minutes / 9 minutes ago\n      if (withoutSuffix || isFuture) {\n        return result + (plural(num) ? 'minuty' : 'minut');\n      } else {\n        return result + 'minutami';\n      }\n\n    // break;\n\n    case 'h':\n      // an hour / in an hour / an hour ago\n      return withoutSuffix ? 'hodina' : isFuture ? 'hodinu' : 'hodinou';\n\n    case 'hh':\n      // 9 hours / in 9 hours / 9 hours ago\n      if (withoutSuffix || isFuture) {\n        return result + (plural(num) ? 'hodiny' : 'hodin');\n      } else {\n        return result + 'hodinami';\n      }\n\n    // break;\n\n    case 'd':\n      // a day / in a day / a day ago\n      return withoutSuffix || isFuture ? 'den' : 'dnem';\n\n    case 'dd':\n      // 9 days / in 9 days / 9 days ago\n      if (withoutSuffix || isFuture) {\n        return result + (plural(num) ? 'dny' : 'dní');\n      } else {\n        return result + 'dny';\n      }\n\n    // break;\n\n    case 'M':\n      // a month / in a month / a month ago\n      return withoutSuffix || isFuture ? 'měsíc' : 'měsícem';\n\n    case 'MM':\n      // 9 months / in 9 months / 9 months ago\n      if (withoutSuffix || isFuture) {\n        return result + (plural(num) ? 'měsíce' : 'měsíců');\n      } else {\n        return result + 'měsíci';\n      }\n\n    // break;\n\n    case 'y':\n      // a year / in a year / a year ago\n      return withoutSuffix || isFuture ? 'rok' : 'rokem';\n\n    case 'yy':\n      // 9 years / in 9 years / 9 years ago\n      if (withoutSuffix || isFuture) {\n        return result + (plural(num) ? 'roky' : 'let');\n      } else {\n        return result + 'lety';\n      }\n\n    // break;\n  }\n}\n/** @type {?} */\n\n\nconst csLocale = {\n  abbr: 'cs',\n  months: months$1,\n  monthsShort: monthsShort$1,\n  monthsParse:\n  /**\n  * @param {?} months\n  * @param {?} monthsShort\n  * @return {?}\n  */\n  function (months, monthsShort) {\n    /** @type {?} */\n    let i;\n    /** @type {?} */\n\n    let _monthsParse = [];\n\n    for (i = 0; i < 12; i++) {\n      // use custom parser to solve problem with July (červenec)\n      _monthsParse[i] = new RegExp('^' + months[i] + '$|^' + monthsShort[i] + '$', 'i');\n    }\n\n    return _monthsParse;\n  }(months$1, monthsShort$1),\n  shortMonthsParse:\n  /**\n  * @param {?} monthsShort\n  * @return {?}\n  */\n  function (monthsShort) {\n    /** @type {?} */\n    let i;\n    /** @type {?} */\n\n    let _shortMonthsParse = [];\n\n    for (i = 0; i < 12; i++) {\n      _shortMonthsParse[i] = new RegExp('^' + monthsShort[i] + '$', 'i');\n    }\n\n    return _shortMonthsParse;\n  }(monthsShort$1),\n  longMonthsParse:\n  /**\n  * @param {?} months\n  * @return {?}\n  */\n  function (months) {\n    /** @type {?} */\n    let i;\n    /** @type {?} */\n\n    let _longMonthsParse = [];\n\n    for (i = 0; i < 12; i++) {\n      _longMonthsParse[i] = new RegExp('^' + months[i] + '$', 'i');\n    }\n\n    return _longMonthsParse;\n  }(months$1),\n  weekdays: 'neděle_pondělí_úterý_středa_čtvrtek_pátek_sobota'.split('_'),\n  weekdaysShort: 'ne_po_út_st_čt_pá_so'.split('_'),\n  weekdaysMin: 'ne_po_út_st_čt_pá_so'.split('_'),\n  longDateFormat: {\n    LT: 'H:mm',\n    LTS: 'H:mm:ss',\n    L: 'DD.MM.YYYY',\n    LL: 'D. MMMM YYYY',\n    LLL: 'D. MMMM YYYY H:mm',\n    LLLL: 'dddd D. MMMM YYYY H:mm',\n    l: 'D. M. YYYY'\n  },\n  calendar: {\n    sameDay: '[dnes v] LT',\n    nextDay: '[zítra v] LT',\n\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    nextWeek(date) {\n      switch (getDayOfWeek(date)) {\n        case 0:\n          return '[v neděli v] LT';\n\n        case 1:\n        case 2:\n          return '[v] dddd [v] LT';\n\n        case 3:\n          return '[ve středu v] LT';\n\n        case 4:\n          return '[ve čtvrtek v] LT';\n\n        case 5:\n          return '[v pátek v] LT';\n\n        case 6:\n          return '[v sobotu v] LT';\n      }\n    },\n\n    lastDay: '[včera v] LT',\n\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    lastWeek(date) {\n      switch (getDayOfWeek(date)) {\n        case 0:\n          return '[minulou neděli v] LT';\n\n        case 1:\n        case 2:\n          return '[minulé] dddd [v] LT';\n\n        case 3:\n          return '[minulou středu v] LT';\n\n        case 4:\n        case 5:\n          return '[minulý] dddd [v] LT';\n\n        case 6:\n          return '[minulou sobotu v] LT';\n      }\n    },\n\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: 'za %s',\n    past: 'před %s',\n    s: translate,\n    ss: translate,\n    m: translate,\n    mm: translate,\n    h: translate,\n    hh: translate,\n    d: translate,\n    dd: translate,\n    M: translate,\n    MM: translate,\n    y: translate,\n    yy: translate\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n  ordinal: '%d.',\n  week: {\n    dow: 1,\n    // Monday is the first day of the week.\n    doy: 4 // The week that contains Jan 4th is the first week of the year.\n\n  }\n};\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// tslint:disable:comment-format\n//! moment.js locale configuration\n//! locale : Danish (Denmark) [da]\n//! author : Per Hansen : https://github.com/perhp\n\n/** @type {?} */\n\nconst daLocale = {\n  abbr: 'da',\n  months: 'Januar_Februar_Marts_April_Maj_Juni_Juli_August_September_Oktober_November_December'.split('_'),\n  monthsShort: 'Jan_Feb_Mar_Apr_Maj_Jun_Jul_Aug_Sep_Okt_Nov_Dec'.split('_'),\n  weekdays: 'Søndag_Mandag_Tirsdag_Onsdag_Torsdag_Fredag_Lørdag'.split('_'),\n  weekdaysShort: 'Søn_Man_Tir_Ons_Tor_Fre_Lør'.split('_'),\n  weekdaysMin: 'Sø_Ma_Ti_On_To_Fr_Lø'.split('_'),\n  longDateFormat: {\n    LT: 'HH:mm',\n    LTS: 'HH:mm:ss',\n    L: 'DD/MM/YYYY',\n    LL: 'D. MMMM YYYY',\n    LLL: 'D. MMMM YYYY HH:mm',\n    LLLL: 'dddd [d.] D. MMMM YYYY [kl.] HH:mm'\n  },\n  calendar: {\n    sameDay: '[i dag kl.] LT',\n    nextDay: '[i morgen kl.] LT',\n    nextWeek: 'på dddd [kl.] LT',\n    lastDay: '[i går kl.] LT',\n    lastWeek: '[i] dddd[s kl.] LT',\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: 'om %s',\n    past: '%s siden',\n    s: 'få sekunder',\n    m: 'et minut',\n    mm: '%d minutter',\n    h: 'en time',\n    hh: '%d timer',\n    d: 'en dag',\n    dd: '%d dage',\n    M: 'en måned',\n    MM: '%d måneder',\n    y: 'et år',\n    yy: '%d år'\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n  ordinal: '%d.',\n  week: {\n    dow: 1,\n    // Monday is the first day of the week.\n    doy: 4 // The week that contains Jan 4th is the first week of the year.\n\n  }\n};\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// tslint:disable:comment-format binary-expression-operand-order max-line-length\n// tslint:disable:no-bitwise prefer-template cyclomatic-complexity\n// tslint:disable:no-shadowed-variable switch-default prefer-const\n// tslint:disable:one-variable-per-declaration newline-before-return\n// tslint:disable:object-literal-key-quotes\n//! moment.js locale configuration\n//! locale : German [de]\n//! author : lluchs : https://github.com/lluchs\n//! author: Menelion Elensúle: https://github.com/Oire\n//! author : Mikolaj Dadela : https://github.com/mik01aj\n\n/**\n * @param {?} num\n * @param {?} withoutSuffix\n * @param {?} key\n * @param {?} isFuture\n * @return {?}\n */\n\nfunction processRelativeTime(num, withoutSuffix, key, isFuture) {\n  /** @type {?} */\n  const format = {\n    'm': ['eine Minute', 'einer Minute'],\n    'h': ['eine Stunde', 'einer Stunde'],\n    'd': ['ein Tag', 'einem Tag'],\n    'dd': [num + ' Tage', num + ' Tagen'],\n    'M': ['ein Monat', 'einem Monat'],\n    'MM': [num + ' Monate', num + ' Monaten'],\n    'y': ['ein Jahr', 'einem Jahr'],\n    'yy': [num + ' Jahre', num + ' Jahren']\n  };\n  return withoutSuffix ? format[key][0] : format[key][1];\n}\n/** @type {?} */\n\n\nconst deLocale = {\n  abbr: 'de',\n  months: 'Januar_Februar_März_April_Mai_Juni_Juli_August_September_Oktober_November_Dezember'.split('_'),\n  monthsShort: 'Jan._Feb._März_Apr._Mai_Juni_Juli_Aug._Sep._Okt._Nov._Dez.'.split('_'),\n  monthsParseExact: true,\n  weekdays: 'Sonntag_Montag_Dienstag_Mittwoch_Donnerstag_Freitag_Samstag'.split('_'),\n  weekdaysShort: 'So._Mo._Di._Mi._Do._Fr._Sa.'.split('_'),\n  weekdaysMin: 'So_Mo_Di_Mi_Do_Fr_Sa'.split('_'),\n  weekdaysParseExact: true,\n  longDateFormat: {\n    LT: 'HH:mm',\n    LTS: 'HH:mm:ss',\n    L: 'DD.MM.YYYY',\n    LL: 'D. MMMM YYYY',\n    LLL: 'D. MMMM YYYY HH:mm',\n    LLLL: 'dddd, D. MMMM YYYY HH:mm'\n  },\n  calendar: {\n    sameDay: '[heute um] LT [Uhr]',\n    sameElse: 'L',\n    nextDay: '[morgen um] LT [Uhr]',\n    nextWeek: 'dddd [um] LT [Uhr]',\n    lastDay: '[gestern um] LT [Uhr]',\n    lastWeek: '[letzten] dddd [um] LT [Uhr]'\n  },\n  relativeTime: {\n    future: 'in %s',\n    past: 'vor %s',\n    s: 'ein paar Sekunden',\n    ss: '%d Sekunden',\n    m: processRelativeTime,\n    mm: '%d Minuten',\n    h: processRelativeTime,\n    hh: '%d Stunden',\n    d: processRelativeTime,\n    dd: processRelativeTime,\n    M: processRelativeTime,\n    MM: processRelativeTime,\n    y: processRelativeTime,\n    yy: processRelativeTime\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n  ordinal: '%d.',\n  week: {\n    dow: 1,\n    // Monday is the first day of the week.\n    doy: 4 // The week that contains Jan 4th is the first week of the year.\n\n  }\n};\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// tslint:disable:comment-format binary-expression-operand-order max-line-length\n// tslint:disable:no-bitwise prefer-template cyclomatic-complexity\n// tslint:disable:no-shadowed-variable switch-default prefer-const\n// tslint:disable:one-variable-per-declaration newline-before-return\n//! moment.js locale configuration\n//! locale : English (United Kingdom) [en-gb]\n//! author : Chris Gedrim : https://github.com/chrisgedrim\n\n/** @type {?} */\n\nconst enGbLocale = {\n  abbr: 'en-gb',\n  months: 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_'),\n  monthsShort: 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),\n  weekdays: 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_'),\n  weekdaysShort: 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),\n  weekdaysMin: 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),\n  longDateFormat: {\n    LT: 'HH:mm',\n    LTS: 'HH:mm:ss',\n    L: 'DD/MM/YYYY',\n    LL: 'D MMMM YYYY',\n    LLL: 'D MMMM YYYY HH:mm',\n    LLLL: 'dddd, D MMMM YYYY HH:mm'\n  },\n  calendar: {\n    sameDay: '[Today at] LT',\n    nextDay: '[Tomorrow at] LT',\n    nextWeek: 'dddd [at] LT',\n    lastDay: '[Yesterday at] LT',\n    lastWeek: '[Last] dddd [at] LT',\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: 'in %s',\n    past: '%s ago',\n    s: 'a few seconds',\n    ss: '%d seconds',\n    m: 'a minute',\n    mm: '%d minutes',\n    h: 'an hour',\n    hh: '%d hours',\n    d: 'a day',\n    dd: '%d days',\n    M: 'a month',\n    MM: '%d months',\n    y: 'a year',\n    yy: '%d years'\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}(st|nd|rd|th)/,\n\n  /**\n   * @param {?} _num\n   * @return {?}\n   */\n  ordinal(_num) {\n    /** @type {?} */\n    const num = Number(_num);\n    /** @type {?} */\n\n    const b = num % 10;\n    /** @type {?} */\n\n    const output = ~~(num % 100 / 10) === 1 ? 'th' : b === 1 ? 'st' : b === 2 ? 'nd' : b === 3 ? 'rd' : 'th';\n    return num + output;\n  },\n\n  week: {\n    dow: 1,\n    // Monday is the first day of the week.\n    doy: 4 // The week that contains Jan 4th is the first week of the year.\n\n  }\n};\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n//! moment.js locale configuration\n//! locale : Spanish (Dominican Republic) [es-do]\n\n/** @type {?} */\n\nlet monthsShortDot$1 = 'ene._feb._mar._abr._may._jun._jul._ago._sep._oct._nov._dic.'.split('_');\n/** @type {?} */\n\nlet monthsShort$2 = 'ene_feb_mar_abr_may_jun_jul_ago_sep_oct_nov_dic'.split('_');\n/** @type {?} */\n\nlet monthsParse$1 = [/^ene/i, /^feb/i, /^mar/i, /^abr/i, /^may/i, /^jun/i, /^jul/i, /^ago/i, /^sep/i, /^oct/i, /^nov/i, /^dic/i];\n/** @type {?} */\n\nlet monthsRegex$1 = /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre|ene\\.?|feb\\.?|mar\\.?|abr\\.?|may\\.?|jun\\.?|jul\\.?|ago\\.?|sep\\.?|oct\\.?|nov\\.?|dic\\.?)/i;\n/** @type {?} */\n\nconst esDoLocale = {\n  abbr: 'es-do',\n  months: 'enero_febrero_marzo_abril_mayo_junio_julio_agosto_septiembre_octubre_noviembre_diciembre'.split('_'),\n\n  /**\n   * @param {?} date\n   * @param {?} format\n   * @param {?=} isUTC\n   * @return {?}\n   */\n  monthsShort(date, format, isUTC) {\n    if (!date) {\n      return monthsShortDot$1;\n    } else if (/-MMM-/.test(format)) {\n      return monthsShort$2[getMonth(date, isUTC)];\n    } else {\n      return monthsShortDot$1[getMonth(date, isUTC)];\n    }\n  },\n\n  monthsRegex: monthsRegex$1,\n  monthsShortRegex: monthsRegex$1,\n  monthsStrictRegex: /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre)/i,\n  monthsShortStrictRegex: /^(ene\\.?|feb\\.?|mar\\.?|abr\\.?|may\\.?|jun\\.?|jul\\.?|ago\\.?|sep\\.?|oct\\.?|nov\\.?|dic\\.?)/i,\n  monthsParse: monthsParse$1,\n  longMonthsParse: monthsParse$1,\n  shortMonthsParse: monthsParse$1,\n  weekdays: 'domingo_lunes_martes_miércoles_jueves_viernes_sábado'.split('_'),\n  weekdaysShort: 'dom._lun._mar._mié._jue._vie._sáb.'.split('_'),\n  weekdaysMin: 'do_lu_ma_mi_ju_vi_sá'.split('_'),\n  weekdaysParseExact: true,\n  longDateFormat: {\n    LT: 'h:mm A',\n    LTS: 'h:mm:ss A',\n    L: 'DD/MM/YYYY',\n    LL: 'D [de] MMMM [de] YYYY',\n    LLL: 'D [de] MMMM [de] YYYY h:mm A',\n    LLLL: 'dddd, D [de] MMMM [de] YYYY h:mm A'\n  },\n  calendar: {\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    sameDay(date) {\n      return '[hoy a la' + (getHours(date) !== 1 ? 's' : '') + '] LT';\n    },\n\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    nextDay(date) {\n      return '[mañana a la' + (getHours(date) !== 1 ? 's' : '') + '] LT';\n    },\n\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    nextWeek(date) {\n      return 'dddd [a la' + (getHours(date) !== 1 ? 's' : '') + '] LT';\n    },\n\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    lastDay(date) {\n      return '[ayer a la' + (getHours(date) !== 1 ? 's' : '') + '] LT';\n    },\n\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    lastWeek(date) {\n      return '[el] dddd [pasado a la' + (getHours(date) !== 1 ? 's' : '') + '] LT';\n    },\n\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: 'en %s',\n    past: 'hace %s',\n    s: 'unos segundos',\n    ss: '%d segundos',\n    m: 'un minuto',\n    mm: '%d minutos',\n    h: 'una hora',\n    hh: '%d horas',\n    d: 'un día',\n    dd: '%d días',\n    M: 'un mes',\n    MM: '%d meses',\n    y: 'un año',\n    yy: '%d años'\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}º/,\n  ordinal: '%dº',\n  week: {\n    dow: 1,\n    // Monday is the first day of the week.\n    doy: 4 // The week that contains Jan 4th is the first week of the year.\n\n  }\n};\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n//! moment.js locale configuration\n//! locale : Spanish [es]\n//! author : Julio Napurí : https://github.com/julionc\n\n/** @type {?} */\n\nlet monthsShortDot$2 = 'ene._feb._mar._abr._may._jun._jul._ago._sep._oct._nov._dic.'.split('_');\n/** @type {?} */\n\nlet monthsShort$3 = 'ene_feb_mar_abr_may_jun_jul_ago_sep_oct_nov_dic'.split('_');\n/** @type {?} */\n\nlet monthsParse$2 = [/^ene/i, /^feb/i, /^mar/i, /^abr/i, /^may/i, /^jun/i, /^jul/i, /^ago/i, /^sep/i, /^oct/i, /^nov/i, /^dic/i];\n/** @type {?} */\n\nlet monthsRegex$2 = /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre|ene\\.?|feb\\.?|mar\\.?|abr\\.?|may\\.?|jun\\.?|jul\\.?|ago\\.?|sep\\.?|oct\\.?|nov\\.?|dic\\.?)/i;\n/** @type {?} */\n\nconst esLocale = {\n  abbr: 'es',\n  months: 'enero_febrero_marzo_abril_mayo_junio_julio_agosto_septiembre_octubre_noviembre_diciembre'.split('_'),\n\n  /**\n   * @param {?} date\n   * @param {?} format\n   * @param {?=} isUTC\n   * @return {?}\n   */\n  monthsShort(date, format, isUTC) {\n    if (!date) {\n      return monthsShortDot$2;\n    }\n\n    if (/-MMM-/.test(format)) {\n      return monthsShort$3[getMonth(date, isUTC)];\n    }\n\n    return monthsShortDot$2[getMonth(date, isUTC)];\n  },\n\n  monthsRegex: monthsRegex$2,\n  monthsShortRegex: monthsRegex$2,\n  monthsStrictRegex: /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre)/i,\n  monthsShortStrictRegex: /^(ene\\.?|feb\\.?|mar\\.?|abr\\.?|may\\.?|jun\\.?|jul\\.?|ago\\.?|sep\\.?|oct\\.?|nov\\.?|dic\\.?)/i,\n  monthsParse: monthsParse$2,\n  longMonthsParse: monthsParse$2,\n  shortMonthsParse: monthsParse$2,\n  weekdays: 'domingo_lunes_martes_miércoles_jueves_viernes_sábado'.split('_'),\n  weekdaysShort: 'dom._lun._mar._mié._jue._vie._sáb.'.split('_'),\n  weekdaysMin: 'do_lu_ma_mi_ju_vi_sá'.split('_'),\n  weekdaysParseExact: true,\n  longDateFormat: {\n    LT: 'H:mm',\n    LTS: 'H:mm:ss',\n    L: 'DD/MM/YYYY',\n    LL: 'D [de] MMMM [de] YYYY',\n    LLL: 'D [de] MMMM [de] YYYY H:mm',\n    LLLL: 'dddd, D [de] MMMM [de] YYYY H:mm'\n  },\n  calendar: {\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    sameDay(date) {\n      return '[hoy a la' + (getHours(date) !== 1 ? 's' : '') + '] LT';\n    },\n\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    nextDay(date) {\n      return '[mañana a la' + (getHours(date) !== 1 ? 's' : '') + '] LT';\n    },\n\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    nextWeek(date) {\n      return 'dddd [a la' + (getHours(date) !== 1 ? 's' : '') + '] LT';\n    },\n\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    lastDay(date) {\n      return '[ayer a la' + (getHours(date) !== 1 ? 's' : '') + '] LT';\n    },\n\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    lastWeek(date) {\n      return '[el] dddd [pasado a la' + (getHours(date) !== 1 ? 's' : '') + '] LT';\n    },\n\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: 'en %s',\n    past: 'hace %s',\n    s: 'unos segundos',\n    ss: '%d segundos',\n    m: 'un minuto',\n    mm: '%d minutos',\n    h: 'una hora',\n    hh: '%d horas',\n    d: 'un día',\n    dd: '%d días',\n    M: 'un mes',\n    MM: '%d meses',\n    y: 'un año',\n    yy: '%d años'\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}º/,\n  ordinal: '%dº',\n  week: {\n    dow: 1,\n    // Monday is the first day of the week.\n    doy: 4 // The week that contains Jan 4th is the first week of the year.\n\n  }\n};\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n//! moment.js locale configuration\n//! locale : Spanish (United States) [es-us]\n//! author : bustta : https://github.com/bustta\n\n/** @type {?} */\n\nlet monthsShortDot$3 = 'ene._feb._mar._abr._may._jun._jul._ago._sep._oct._nov._dic.'.split('_');\n/** @type {?} */\n\nlet monthsShort$4 = 'ene_feb_mar_abr_may_jun_jul_ago_sep_oct_nov_dic'.split('_');\n/** @type {?} */\n\nconst esUsLocale = {\n  abbr: 'es-us',\n  months: 'enero_febrero_marzo_abril_mayo_junio_julio_agosto_septiembre_octubre_noviembre_diciembre'.split('_'),\n\n  /**\n   * @param {?} date\n   * @param {?} format\n   * @param {?=} isUTC\n   * @return {?}\n   */\n  monthsShort(date, format, isUTC) {\n    if (!date) {\n      return monthsShortDot$3;\n    } else if (/-MMM-/.test(format)) {\n      return monthsShort$4[getMonth(date, isUTC)];\n    } else {\n      return monthsShortDot$3[getMonth(date, isUTC)];\n    }\n  },\n\n  monthsParseExact: true,\n  weekdays: 'domingo_lunes_martes_miércoles_jueves_viernes_sábado'.split('_'),\n  weekdaysShort: 'dom._lun._mar._mié._jue._vie._sáb.'.split('_'),\n  weekdaysMin: 'do_lu_ma_mi_ju_vi_sá'.split('_'),\n  weekdaysParseExact: true,\n  longDateFormat: {\n    LT: 'h:mm A',\n    LTS: 'h:mm:ss A',\n    L: 'MM/DD/YYYY',\n    LL: 'MMMM [de] D [de] YYYY',\n    LLL: 'MMMM [de] D [de] YYYY h:mm A',\n    LLLL: 'dddd, MMMM [de] D [de] YYYY h:mm A'\n  },\n  calendar: {\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    sameDay(date) {\n      return '[hoy a la' + (getHours(date) !== 1 ? 's' : '') + '] LT';\n    },\n\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    nextDay(date) {\n      return '[mañana a la' + (getHours(date) !== 1 ? 's' : '') + '] LT';\n    },\n\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    nextWeek(date) {\n      return 'dddd [a la' + (getHours(date) !== 1 ? 's' : '') + '] LT';\n    },\n\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    lastDay(date) {\n      return '[ayer a la' + (getHours(date) !== 1 ? 's' : '') + '] LT';\n    },\n\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    lastWeek(date) {\n      return '[el] dddd [pasado a la' + (getHours(date) !== 1 ? 's' : '') + '] LT';\n    },\n\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: 'en %s',\n    past: 'hace %s',\n    s: 'unos segundos',\n    ss: '%d segundos',\n    m: 'un minuto',\n    mm: '%d minutos',\n    h: 'una hora',\n    hh: '%d horas',\n    d: 'un día',\n    dd: '%d días',\n    M: 'un mes',\n    MM: '%d meses',\n    y: 'un año',\n    yy: '%d años'\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}º/,\n  ordinal: '%dº',\n  week: {\n    dow: 0,\n    // Sunday is the first day of the week.\n    doy: 6 // The week that contains Jan 1st is the first week of the year.\n\n  }\n};\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// tslint:disable:comment-format binary-expression-operand-order max-line-length\n// tslint:disable:no-bitwise prefer-template cyclomatic-complexity\n// tslint:disable:no-shadowed-variable switch-default prefer-const\n// tslint:disable:one-variable-per-declaration newline-before-return\n//! moment.js locale configuration\n//! locale : Estonian [et]\n//! author : Chris Gedrim : https://github.com/a90machado\n\n/** @type {?} */\n\nconst processRelativeTime$1 =\n/**\n* @param {?} num\n* @param {?} withoutSuffix\n* @param {?} key\n* @param {?} isFuture\n* @return {?}\n*/\nfunction (num, withoutSuffix, key, isFuture) {\n  /** @type {?} */\n  const format = {\n    s: ['mõne sekundi', 'mõni sekund', 'paar sekundit'],\n    ss: [num + 'sekundi', num + 'sekundit'],\n    m: ['ühe minuti', 'üks minut'],\n    mm: [num + ' minuti', num + ' minutit'],\n    h: ['ühe tunni', 'tund aega', 'üks tund'],\n    hh: [num + ' tunni', num + ' tundi'],\n    d: ['ühe päeva', 'üks päev'],\n    M: ['kuu aja', 'kuu aega', 'üks kuu'],\n    MM: [num + ' kuu', num + ' kuud'],\n    y: ['ühe aasta', 'aasta', 'üks aasta'],\n    yy: [num + ' aasta', num + ' aastat']\n  };\n\n  if (withoutSuffix) {\n    return format[key][2] ? format[key][2] : format[key][1];\n  }\n\n  return isFuture ? format[key][0] : format[key][1];\n};\n/** @type {?} */\n\n\nconst etLocale = {\n  abbr: 'et',\n  months: 'jaanuar_veebruar_märts_aprill_mai_juuni_juuli_august_september_oktoober_november_detsember'.split('_'),\n  monthsShort: 'jaan_veebr_märts_apr_mai_juuni_juuli_aug_sept_okt_nov_dets'.split('_'),\n  weekdays: 'pühapäev_esmaspäev_teisipäev_kolmapäev_neljapäev_reede_laupäev'.split('_'),\n  weekdaysShort: 'P_E_T_K_N_R_L'.split('_'),\n  weekdaysMin: 'P_E_T_K_N_R_L'.split('_'),\n  longDateFormat: {\n    LT: 'H:mm',\n    LTS: 'H:mm:ss',\n    L: 'DD.MM.YYYY',\n    LL: 'D. MMMM YYYY',\n    LLL: 'D. MMMM YYYY H:mm',\n    LLLL: 'dddd, D. MMMM YYYY H:mm'\n  },\n  calendar: {\n    sameDay: '[Täna,] LT',\n    nextDay: '[Homme,] LT',\n    nextWeek: '[Järgmine] dddd LT',\n    lastDay: '[Eile,] LT',\n    lastWeek: '[Eelmine] dddd LT',\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: '%s pärast',\n    past: '%s tagasi',\n    s: processRelativeTime$1,\n    ss: processRelativeTime$1,\n    m: processRelativeTime$1,\n    mm: processRelativeTime$1,\n    h: processRelativeTime$1,\n    hh: processRelativeTime$1,\n    d: processRelativeTime$1,\n    dd: '%d päeva',\n    M: processRelativeTime$1,\n    MM: processRelativeTime$1,\n    y: processRelativeTime$1,\n    yy: processRelativeTime$1\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}./,\n  ordinal: '%d.',\n  week: {\n    dow: 1,\n    // Monday is the first day of the week.\n    doy: 4 // The week that contains Jan 4th is the first week of the year.\n\n  }\n};\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// tslint:disable:comment-format binary-expression-operand-order max-line-length\n// tslint:disable:no-bitwise prefer-template cyclomatic-complexity\n// tslint:disable:no-shadowed-variable switch-default prefer-const\n// tslint:disable:one-variable-per-declaration newline-before-return\n//! moment.js locale configuration\n// https://github.com/moment/moment/blob/develop/locale/fi.js\n\n/** @type {?} */\n\nvar numbersPast = 'nolla yksi kaksi kolme neljä viisi kuusi seitsemän kahdeksan yhdeksän'.split(' ');\n/** @type {?} */\n\nvar numbersFuture = ['nolla', 'yhden', 'kahden', 'kolmen', 'neljän', 'viiden', 'kuuden', numbersPast[7], numbersPast[8], numbersPast[9]];\n/**\n * @param {?} num\n * @param {?} withoutSuffix\n * @param {?} key\n * @param {?} isFuture\n * @return {?}\n */\n\nfunction translate$1(num, withoutSuffix, key, isFuture) {\n  /** @type {?} */\n  var result = '';\n\n  switch (key) {\n    case 's':\n      return isFuture ? 'muutaman sekunnin' : 'muutama sekunti';\n\n    case 'ss':\n      return isFuture ? 'sekunnin' : 'sekuntia';\n\n    case 'm':\n      return isFuture ? 'minuutin' : 'minuutti';\n\n    case 'mm':\n      result = isFuture ? 'minuutin' : 'minuuttia';\n      break;\n\n    case 'h':\n      return isFuture ? 'tunnin' : 'tunti';\n\n    case 'hh':\n      result = isFuture ? 'tunnin' : 'tuntia';\n      break;\n\n    case 'd':\n      return isFuture ? 'päivän' : 'päivä';\n\n    case 'dd':\n      result = isFuture ? 'päivän' : 'päivää';\n      break;\n\n    case 'M':\n      return isFuture ? 'kuukauden' : 'kuukausi';\n\n    case 'MM':\n      result = isFuture ? 'kuukauden' : 'kuukautta';\n      break;\n\n    case 'y':\n      return isFuture ? 'vuoden' : 'vuosi';\n\n    case 'yy':\n      result = isFuture ? 'vuoden' : 'vuotta';\n      break;\n  }\n\n  result = verbalNumber(num, isFuture) + ' ' + result;\n  return result;\n}\n/**\n * @param {?} num\n * @param {?} isFuture\n * @return {?}\n */\n\n\nfunction verbalNumber(num, isFuture) {\n  return num < 10 ? isFuture ? numbersFuture[num] : numbersPast[num] : num;\n}\n/** @type {?} */\n\n\nconst fiLocale = {\n  abbr: 'fi',\n  months: 'tammikuu_helmikuu_maaliskuu_huhtikuu_toukokuu_kesäkuu_heinäkuu_elokuu_syyskuu_lokakuu_marraskuu_joulukuu'.split('_'),\n  monthsShort: 'tammi_helmi_maalis_huhti_touko_kesä_heinä_elo_syys_loka_marras_joulu'.split('_'),\n  weekdays: 'sunnuntai_maanantai_tiistai_keskiviikko_torstai_perjantai_lauantai'.split('_'),\n  weekdaysShort: 'su_ma_ti_ke_to_pe_la'.split('_'),\n  weekdaysMin: 'su_ma_ti_ke_to_pe_la'.split('_'),\n  longDateFormat: {\n    LT: 'HH.mm',\n    LTS: 'HH.mm.ss',\n    L: 'DD.MM.YYYY',\n    LL: 'Do MMMM[ta] YYYY',\n    LLL: 'Do MMMM[ta] YYYY, [klo] HH.mm',\n    LLLL: 'dddd, Do MMMM[ta] YYYY, [klo] HH.mm',\n    l: 'D.M.YYYY',\n    ll: 'Do MMM YYYY',\n    lll: 'Do MMM YYYY, [klo] HH.mm',\n    llll: 'ddd, Do MMM YYYY, [klo] HH.mm'\n  },\n  calendar: {\n    sameDay: '[tänään] [klo] LT',\n    nextDay: '[huomenna] [klo] LT',\n    nextWeek: 'dddd [klo] LT',\n    lastDay: '[eilen] [klo] LT',\n    lastWeek: '[viime] dddd[na] [klo] LT',\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: '%s päästä',\n    past: '%s sitten',\n    s: translate$1,\n    ss: translate$1,\n    m: translate$1,\n    mm: translate$1,\n    h: translate$1,\n    hh: translate$1,\n    d: translate$1,\n    dd: translate$1,\n    M: translate$1,\n    MM: translate$1,\n    y: translate$1,\n    yy: translate$1\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n  ordinal: '%d.',\n  week: {\n    dow: 1,\n    // Monday is the first day of the week.\n    doy: 4 // The week that contains Jan 4th is the first week of the year.\n\n  }\n};\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// tslint:disable:comment-format binary-expression-operand-order max-line-length\n// tslint:disable:no-bitwise prefer-template cyclomatic-complexity\n// tslint:disable:no-shadowed-variable switch-default prefer-const\n// tslint:disable:one-variable-per-declaration newline-before-return\n//! moment.js locale configuration\n//! locale : French [fr]\n//! author : John Fischer : https://github.com/jfroffice\n\n/** @type {?} */\n\nconst frLocale = {\n  abbr: 'fr',\n  months: 'janvier_février_mars_avril_mai_juin_juillet_août_septembre_octobre_novembre_décembre'.split('_'),\n  monthsShort: 'janv._févr._mars_avr._mai_juin_juil._août_sept._oct._nov._déc.'.split('_'),\n  monthsParseExact: true,\n  weekdays: 'dimanche_lundi_mardi_mercredi_jeudi_vendredi_samedi'.split('_'),\n  weekdaysShort: 'dim._lun._mar._mer._jeu._ven._sam.'.split('_'),\n  weekdaysMin: 'di_lu_ma_me_je_ve_sa'.split('_'),\n  weekdaysParseExact: true,\n  longDateFormat: {\n    LT: 'HH:mm',\n    LTS: 'HH:mm:ss',\n    L: 'DD/MM/YYYY',\n    LL: 'D MMMM YYYY',\n    LLL: 'D MMMM YYYY HH:mm',\n    LLLL: 'dddd D MMMM YYYY HH:mm'\n  },\n  calendar: {\n    sameDay: '[Aujourd’hui à] LT',\n    nextDay: '[Demain à] LT',\n    nextWeek: 'dddd [à] LT',\n    lastDay: '[Hier à] LT',\n    lastWeek: 'dddd [dernier à] LT',\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: 'dans %s',\n    past: 'il y a %s',\n    s: 'quelques secondes',\n    ss: '%d secondes',\n    m: 'une minute',\n    mm: '%d minutes',\n    h: 'une heure',\n    hh: '%d heures',\n    d: 'un jour',\n    dd: '%d jours',\n    M: 'un mois',\n    MM: '%d mois',\n    y: 'un an',\n    yy: '%d ans'\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}(er|)/,\n\n  /**\n   * @param {?} _num\n   * @param {?} period\n   * @return {?}\n   */\n  ordinal(_num, period) {\n    /** @type {?} */\n    const num = Number(_num);\n\n    switch (period) {\n      // TODO: Return 'e' when day of month > 1. Move this case inside\n      // block for masculine words below.\n      // See https://github.com/moment/moment/issues/3375\n      case 'D':\n        return num + (num === 1 ? 'er' : '');\n      // Words with masculine grammatical gender: mois, trimestre, jour\n\n      default:\n      case 'M':\n      case 'Q':\n      case 'DDD':\n      case 'd':\n        return num + (num === 1 ? 'er' : 'e');\n      // Words with feminine grammatical gender: semaine\n\n      case 'w':\n      case 'W':\n        return num + (num === 1 ? 're' : 'e');\n    }\n  },\n\n  week: {\n    dow: 1,\n    // Monday is the first day of the week.\n    doy: 4 // The week that contains Jan 4th is the first week of the year.\n\n  }\n};\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n//! moment.js locale configuration\n//! locale : Galician [gl]\n//! author : Darío Beiró : https://github.com/quinobravo\n\n/** @type {?} */\n\nlet monthsShortDot$4 = 'xan._feb._mar._abr._mai._xuñ._xul._ago._set._out._nov._dec.'.split('_');\n/** @type {?} */\n\nlet monthsShort$5 = 'xan_feb_mar_abr_mai_xuñ_xul_ago_set_out_nov_dec'.split('_');\n/** @type {?} */\n\nlet monthsParse$3 = [/^xan/i, /^feb/i, /^mar/i, /^abr/i, /^mai/i, /^xuñ/i, /^xul/i, /^ago/i, /^set/i, /^out/i, /^nov/i, /^dec/i];\n/** @type {?} */\n\nlet monthsRegex$3 = /^(xaneiro|febreiro|marzo|abril|maio|xuño|xullo|agosto|setembro|outubro|novembro|decembro|xan\\.?|feb\\.?|mar\\.?|abr\\.?|mai\\.?|xuñ\\.?|xul\\.?|ago\\.?|set\\.?|out\\.?|nov\\.?|dec\\.?)/i;\n/** @type {?} */\n\nconst glLocale = {\n  abbr: 'gl',\n  months: 'xaneiro_febreiro_marzo_abril_maio_xuño_xullo_agosto_setembro_outubro_novembro_decembro'.split('_'),\n\n  /**\n   * @param {?} date\n   * @param {?} format\n   * @param {?=} isUTC\n   * @return {?}\n   */\n  monthsShort(date, format, isUTC) {\n    if (!date) {\n      return monthsShortDot$4;\n    }\n\n    if (/-MMM-/.test(format)) {\n      return monthsShort$5[getMonth(date, isUTC)];\n    }\n\n    return monthsShortDot$4[getMonth(date, isUTC)];\n  },\n\n  monthsRegex: monthsRegex$3,\n  monthsShortRegex: monthsRegex$3,\n  monthsStrictRegex: /^(xaneiro|febreiro|marzo|abril|maio|xuño|xullo|agosto|setembro|outubro|novembro|decembro)/i,\n  monthsShortStrictRegex: /^(xan\\.?|feb\\.?|mar\\.?|abr\\.?|mai\\.?|xuñ\\.?|xul\\.?|ago\\.?|set\\.?|out\\.?|nov\\.?|dec\\.?)/i,\n  monthsParse: monthsParse$3,\n  longMonthsParse: monthsParse$3,\n  shortMonthsParse: monthsParse$3,\n  weekdays: 'domingo_luns_martes_mércores_xoves_venres_sábado'.split('_'),\n  weekdaysShort: 'dom._lun._mar._mér._xov._ven._sáb.'.split('_'),\n  weekdaysMin: 'do_lu_ma_mé_xo_ve_sá'.split('_'),\n  weekdaysParseExact: true,\n  longDateFormat: {\n    LT: 'H:mm',\n    LTS: 'H:mm:ss',\n    L: 'DD/MM/YYYY',\n    LL: 'D [de] MMMM [de] YYYY',\n    LLL: 'D [de] MMMM [de] YYYY H:mm',\n    LLLL: 'dddd, D [de] MMMM [de] YYYY H:mm'\n  },\n  calendar: {\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    sameDay(date) {\n      return '[hoxe á' + (getHours(date) !== 1 ? 's' : '') + '] LT';\n    },\n\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    nextDay(date) {\n      return '[mañan á' + (getHours(date) !== 1 ? 's' : '') + '] LT';\n    },\n\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    nextWeek(date) {\n      return 'dddd [á' + (getHours(date) !== 1 ? 's' : '') + '] LT';\n    },\n\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    lastDay(date) {\n      return '[onte á' + (getHours(date) !== 1 ? 's' : '') + '] LT';\n    },\n\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    lastWeek(date) {\n      return '[o] dddd [pasado á' + (getHours(date) !== 1 ? 's' : '') + '] LT';\n    },\n\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: 'en %s',\n    past: 'fai %s',\n    s: 'uns segundos',\n    ss: '%d segundos',\n    m: 'un minuto',\n    mm: '%d minutos',\n    h: 'unha hora',\n    hh: '%d horas',\n    d: 'un día',\n    dd: '%d días',\n    M: 'un mes',\n    MM: '%d meses',\n    y: 'un ano',\n    yy: '%d anos'\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}º/,\n  ordinal: '%dº',\n  week: {\n    dow: 1,\n    // Monday is the first day of the week.\n    doy: 4 // The week that contains Jan 4th is the first week of the year.\n\n  }\n};\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// tslint:disable:comment-format binary-expression-operand-order max-line-length\n// tslint:disable:no-bitwise prefer-template cyclomatic-complexity\n// tslint:disable:no-shadowed-variable switch-default prefer-const\n// tslint:disable:one-variable-per-declaration newline-before-return\n//! moment.js locale configuration\n//! locale : Hebrew [he]\n//! author : Tomer Cohen : https://github.com/tomer\n//! author : Moshe Simantov : https://github.com/DevelopmentIL\n//! author : Tal Ater : https://github.com/TalAter\n\n/** @type {?} */\n\nconst heLocale = {\n  abbr: 'he',\n  months: 'ינואר_פברואר_מרץ_אפריל_מאי_יוני_יולי_אוגוסט_ספטמבר_אוקטובר_נובמבר_דצמבר'.split('_'),\n  monthsShort: 'ינו׳_פבר׳_מרץ_אפר׳_מאי_יוני_יולי_אוג׳_ספט׳_אוק׳_נוב׳_דצמ׳'.split('_'),\n  weekdays: 'ראשון_שני_שלישי_רביעי_חמישי_שישי_שבת'.split('_'),\n  weekdaysShort: 'א׳_ב׳_ג׳_ד׳_ה׳_ו׳_ש׳'.split('_'),\n  weekdaysMin: 'א_ב_ג_ד_ה_ו_ש'.split('_'),\n  longDateFormat: {\n    LT: 'HH:mm',\n    LTS: 'HH:mm:ss',\n    L: 'DD/MM/YYYY',\n    LL: 'D [ב]MMMM YYYY',\n    LLL: 'D [ב]MMMM YYYY HH:mm',\n    LLLL: 'dddd, D [ב]MMMM YYYY HH:mm',\n    l: 'D/M/YYYY',\n    ll: 'D MMM YYYY',\n    lll: 'D MMM YYYY HH:mm',\n    llll: 'ddd, D MMM YYYY HH:mm'\n  },\n  calendar: {\n    sameDay: '[היום ב־]LT',\n    nextDay: '[מחר ב־]LT',\n    nextWeek: 'dddd [בשעה] LT',\n    lastDay: '[אתמול ב־]LT',\n    lastWeek: '[ביום] dddd [האחרון בשעה] LT',\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: 'בעוד %s',\n    past: 'לפני %s',\n    s: 'מספר שניות',\n    ss: '%d שניות',\n    m: 'דקה',\n    mm: '%d דקות',\n    h: 'שעה',\n\n    /**\n     * @param {?} num\n     * @return {?}\n     */\n    hh(num) {\n      if (num === 2) {\n        return 'שעתיים';\n      }\n\n      return num + ' שעות';\n    },\n\n    d: 'יום',\n\n    /**\n     * @param {?} num\n     * @return {?}\n     */\n    dd(num) {\n      if (num === 2) {\n        return 'יומיים';\n      }\n\n      return num + ' ימים';\n    },\n\n    M: 'חודש',\n\n    /**\n     * @param {?} num\n     * @return {?}\n     */\n    MM(num) {\n      if (num === 2) {\n        return 'חודשיים';\n      }\n\n      return num + ' חודשים';\n    },\n\n    y: 'שנה',\n\n    /**\n     * @param {?} num\n     * @return {?}\n     */\n    yy(num) {\n      if (num === 2) {\n        return 'שנתיים';\n      } else if (num % 10 === 0 && num !== 10) {\n        return num + ' שנה';\n      }\n\n      return num + ' שנים';\n    }\n\n  },\n  meridiemParse: /אחה\"צ|לפנה\"צ|אחרי הצהריים|לפני הצהריים|לפנות בוקר|בבוקר|בערב/i,\n\n  /**\n   * @param {?} input\n   * @return {?}\n   */\n  isPM(input) {\n    return /^(אחה\"צ|אחרי הצהריים|בערב)$/.test(input);\n  },\n\n  /**\n   * @param {?} hour\n   * @param {?} minute\n   * @param {?} isLower\n   * @return {?}\n   */\n  meridiem(hour, minute, isLower) {\n    if (hour < 5) {\n      return 'לפנות בוקר';\n    } else if (hour < 10) {\n      return 'בבוקר';\n    } else if (hour < 12) {\n      return isLower ? 'לפנה\"צ' : 'לפני הצהריים';\n    } else if (hour < 18) {\n      return isLower ? 'אחה\"צ' : 'אחרי הצהריים';\n    } else {\n      return 'בערב';\n    }\n  }\n\n};\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// tslint:disable:comment-format binary-expression-operand-order max-line-length\n// tslint:disable:no-bitwise prefer-template cyclomatic-complexity\n// tslint:disable:no-shadowed-variable switch-default prefer-const\n// tslint:disable:one-variable-per-declaration newline-before-return\n// tslint:disable:no-parameter-reassignment prefer-switch\n//! moment.js locale configuration\n//! locale : Hindi [hi]\n//! author : Mayank Singhal : https://github.com/mayanksinghal\n\n/** @type {?} */\n\nlet symbolMap$1 = {\n  1: '१',\n  2: '२',\n  3: '३',\n  4: '४',\n  5: '५',\n  6: '६',\n  7: '७',\n  8: '८',\n  9: '९',\n  0: '०'\n};\n/** @type {?} */\n\nlet numberMap$1 = {\n  '१': '1',\n  '२': '2',\n  '३': '3',\n  '४': '4',\n  '५': '5',\n  '६': '6',\n  '७': '7',\n  '८': '8',\n  '९': '9',\n  '०': '0'\n};\n/** @type {?} */\n\nconst hiLocale = {\n  abbr: 'hi',\n  months: 'जनवरी_फ़रवरी_मार्च_अप्रैल_मई_जून_जुलाई_अगस्त_सितम्बर_अक्टूबर_नवम्बर_दिसम्बर'.split('_'),\n  monthsShort: 'जन._फ़र._मार्च_अप्रै._मई_जून_जुल._अग._सित._अक्टू._नव._दिस.'.split('_'),\n  monthsParseExact: true,\n  weekdays: 'रविवार_सोमवार_मंगलवार_बुधवार_गुरूवार_शुक्रवार_शनिवार'.split('_'),\n  weekdaysShort: 'रवि_सोम_मंगल_बुध_गुरू_शुक्र_शनि'.split('_'),\n  weekdaysMin: 'र_सो_मं_बु_गु_शु_श'.split('_'),\n  longDateFormat: {\n    LT: 'A h:mm बजे',\n    LTS: 'A h:mm:ss बजे',\n    L: 'DD/MM/YYYY',\n    LL: 'D MMMM YYYY',\n    LLL: 'D MMMM YYYY, A h:mm बजे',\n    LLLL: 'dddd, D MMMM YYYY, A h:mm बजे'\n  },\n  calendar: {\n    sameDay: '[आज] LT',\n    nextDay: '[कल] LT',\n    nextWeek: 'dddd, LT',\n    lastDay: '[कल] LT',\n    lastWeek: '[पिछले] dddd, LT',\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: '%s में',\n    past: '%s पहले',\n    s: 'कुछ ही क्षण',\n    ss: '%d सेकंड',\n    m: 'एक मिनट',\n    mm: '%d मिनट',\n    h: 'एक घंटा',\n    hh: '%d घंटे',\n    d: 'एक दिन',\n    dd: '%d दिन',\n    M: 'एक महीने',\n    MM: '%d महीने',\n    y: 'एक वर्ष',\n    yy: '%d वर्ष'\n  },\n\n  /**\n   * @param {?} str\n   * @return {?}\n   */\n  preparse(str) {\n    return str.replace(/[१२३४५६७८९०]/g,\n    /**\n    * @param {?} match\n    * @return {?}\n    */\n    function (match) {\n      return numberMap$1[match];\n    });\n  },\n\n  /**\n   * @param {?} str\n   * @return {?}\n   */\n  postformat(str) {\n    return str.replace(/\\d/g,\n    /**\n    * @param {?} match\n    * @return {?}\n    */\n    function (match) {\n      return symbolMap$1[match];\n    });\n  },\n\n  // Hindi notation for meridiems are quite fuzzy in practice. While there exists\n  // a rigid notion of a 'Pahar' it is not used as rigidly in modern Hindi.\n  meridiemParse: /रात|सुबह|दोपहर|शाम/,\n\n  /**\n   * @param {?} hour\n   * @param {?} meridiem\n   * @return {?}\n   */\n  meridiemHour(hour, meridiem) {\n    if (hour === 12) {\n      hour = 0;\n    }\n\n    if (meridiem === 'रात') {\n      return hour < 4 ? hour : hour + 12;\n    } else if (meridiem === 'सुबह') {\n      return hour;\n    } else if (meridiem === 'दोपहर') {\n      return hour >= 10 ? hour : hour + 12;\n    } else if (meridiem === 'शाम') {\n      return hour + 12;\n    }\n  },\n\n  /**\n   * @param {?} hour\n   * @param {?} minute\n   * @param {?} isLower\n   * @return {?}\n   */\n  meridiem(hour, minute, isLower) {\n    if (hour < 4) {\n      return 'रात';\n    } else if (hour < 10) {\n      return 'सुबह';\n    } else if (hour < 17) {\n      return 'दोपहर';\n    } else if (hour < 20) {\n      return 'शाम';\n    } else {\n      return 'रात';\n    }\n  },\n\n  week: {\n    dow: 0,\n    // Sunday is the first day of the week.\n    doy: 6 // The week that contains Jan 1st is the first week of the year.\n\n  }\n};\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n//! moment.js locale configuration\n//! locale : Hungarian [hu]\n//! author : Adam Brunner : https://github.com/adambrunner\n\n/** @type {?} */\n\nlet weekEndings = 'vasárnap hétfőn kedden szerdán csütörtökön pénteken szombaton'.split(' ');\n/**\n * @param {?} num\n * @param {?} withoutSuffix\n * @param {?} key\n * @param {?} isFuture\n * @return {?}\n */\n\nfunction translate$2(num, withoutSuffix, key, isFuture) {\n  switch (key) {\n    case 's':\n      return isFuture || withoutSuffix ? 'néhány másodperc' : 'néhány másodperce';\n\n    case 'ss':\n      return num + (isFuture || withoutSuffix ? ' másodperc' : ' másodperce');\n\n    case 'm':\n      return 'egy' + (isFuture || withoutSuffix ? ' perc' : ' perce');\n\n    case 'mm':\n      return num + (isFuture || withoutSuffix ? ' perc' : ' perce');\n\n    case 'h':\n      return 'egy' + (isFuture || withoutSuffix ? ' óra' : ' órája');\n\n    case 'hh':\n      return num + (isFuture || withoutSuffix ? ' óra' : ' órája');\n\n    case 'd':\n      return 'egy' + (isFuture || withoutSuffix ? ' nap' : ' napja');\n\n    case 'dd':\n      return num + (isFuture || withoutSuffix ? ' nap' : ' napja');\n\n    case 'M':\n      return 'egy' + (isFuture || withoutSuffix ? ' hónap' : ' hónapja');\n\n    case 'MM':\n      return num + (isFuture || withoutSuffix ? ' hónap' : ' hónapja');\n\n    case 'y':\n      return 'egy' + (isFuture || withoutSuffix ? ' év' : ' éve');\n\n    case 'yy':\n      return num + (isFuture || withoutSuffix ? ' év' : ' éve');\n  }\n\n  return '';\n}\n/**\n * @param {?} date\n * @param {?} isFuture\n * @return {?}\n */\n\n\nfunction week(date, isFuture) {\n  return (isFuture ? '' : '[múlt] ') + '[' + weekEndings[getDayOfWeek(date)] + '] LT[-kor]';\n}\n/** @type {?} */\n\n\nconst huLocale = {\n  abbr: 'hu',\n  months: 'január_február_március_április_május_június_július_augusztus_szeptember_október_november_december'.split('_'),\n  monthsShort: 'jan_feb_márc_ápr_máj_jún_júl_aug_szept_okt_nov_dec'.split('_'),\n  weekdays: 'vasárnap_hétfő_kedd_szerda_csütörtök_péntek_szombat'.split('_'),\n  weekdaysShort: 'vas_hét_kedd_sze_csüt_pén_szo'.split('_'),\n  weekdaysMin: 'v_h_k_sze_cs_p_szo'.split('_'),\n  longDateFormat: {\n    LT: 'H:mm',\n    LTS: 'H:mm:ss',\n    L: 'YYYY.MM.DD.',\n    LL: 'YYYY. MMMM D.',\n    LLL: 'YYYY. MMMM D. H:mm',\n    LLLL: 'YYYY. MMMM D., dddd H:mm'\n  },\n  meridiemParse: /de|du/i,\n\n  /**\n   * @param {?} input\n   * @return {?}\n   */\n  isPM(input) {\n    return input.charAt(1).toLowerCase() === 'u';\n  },\n\n  /**\n   * @param {?} hours\n   * @param {?} minutes\n   * @param {?} isLower\n   * @return {?}\n   */\n  meridiem(hours, minutes, isLower) {\n    if (hours < 12) {\n      return isLower === true ? 'de' : 'DE';\n    } else {\n      return isLower === true ? 'du' : 'DU';\n    }\n  },\n\n  calendar: {\n    sameDay: '[ma] LT[-kor]',\n    nextDay: '[holnap] LT[-kor]',\n\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    nextWeek(date) {\n      return week(date, true);\n    },\n\n    lastDay: '[tegnap] LT[-kor]',\n\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    lastWeek(date) {\n      return week(date, false);\n    },\n\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: '%s múlva',\n    past: '%s',\n    s: translate$2,\n    ss: translate$2,\n    m: translate$2,\n    mm: translate$2,\n    h: translate$2,\n    hh: translate$2,\n    d: translate$2,\n    dd: translate$2,\n    M: translate$2,\n    MM: translate$2,\n    y: translate$2,\n    yy: translate$2\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n  ordinal: '%d.',\n  week: {\n    dow: 1,\n    // Monday is the first day of the week.\n    doy: 4 // The week that contains Jan 4th is the first week of the year.\n\n  }\n};\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// tslint:disable:comment-format binary-expression-operand-order max-line-length\n// tslint:disable:no-bitwise prefer-template cyclomatic-complexity\n// tslint:disable:no-shadowed-variable switch-default prefer-const\n// tslint:disable:one-variable-per-declaration newline-before-return\n//! moment.js locale configuration\n//! locale : Croatian [hr]\n//! author : Danijel Grmec : https://github.com/cobaltsis\n\n/** @type {?} */\n\nconst hrLocale = {\n  abbr: 'hr',\n  months: 'Siječanj_Veljača_Ožujak_Travanj_Svibanj_Lipanj_Srpanj_Kolovoz_Rujan_Listopad_Studeni_Prosinac'.split('_'),\n  monthsShort: 'Sij_Velj_Ožu_Tra_Svi_Lip_Srp_Kol_Ruj_Lis_Stu_Pro'.split('_'),\n  weekdays: 'Nedjelja_Ponedjeljak_Utorak_Srijeda_Četvrtak_Petak_Subota'.split('_'),\n  weekdaysShort: 'Ned_Pon_Uto_Sri_Čet_Pet_Sub'.split('_'),\n  weekdaysMin: 'Ne_Po_Ut_Sr_Če_Pe_Su'.split('_'),\n  longDateFormat: {\n    LT: 'HH:mm',\n    LTS: 'HH:mm:ss',\n    L: 'DD/MM/YYYY',\n    LL: 'D MMMM YYYY',\n    LLL: 'D MMMM YYYY HH:mm',\n    LLLL: 'dddd, D MMMM YYYY HH:mm'\n  },\n  calendar: {\n    sameDay: '[Danas u] LT',\n    nextDay: '[Sutra u] LT',\n    nextWeek: 'dddd [u] LT',\n    lastDay: '[Jučer u] LT',\n    lastWeek: '[Zadnji] dddd [u] LT',\n    sameElse: 'L'\n  },\n  invalidDate: 'Neispravan datum',\n  relativeTime: {\n    future: 'za %s',\n    past: '%s prije',\n    s: 'nekoliko sekundi',\n    ss: '%d sekundi',\n    m: 'minuta',\n    mm: '%d minuta',\n    h: 'sat',\n    hh: '%d sati',\n    d: 'dan',\n    dd: '%d dana',\n    M: 'mjesec',\n    MM: '%d mjeseci',\n    y: 'godina',\n    yy: '%d godina'\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}(st|nd|rd|th)/,\n\n  /**\n   * @param {?} _num\n   * @return {?}\n   */\n  ordinal(_num) {\n    /** @type {?} */\n    const num = Number(_num);\n    /** @type {?} */\n\n    const b = num % 10;\n    /** @type {?} */\n\n    const output = ~~(num % 100 / 10) === 1 ? '.' : b === 1 ? '.' : b === 2 ? '.' : b === 3 ? '.' : '.';\n    return num + output;\n  },\n\n  week: {\n    dow: 1,\n    // Monday is the first day of the week.\n    doy: 4 // The week that contains Jan 4th is the first week of the year.\n\n  }\n};\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// tslint:disable:comment-format binary-expression-operand-order max-line-length\n// tslint:disable:no-bitwise prefer-template cyclomatic-complexity\n// tslint:disable:no-shadowed-variable switch-default prefer-const\n// tslint:disable:one-variable-per-declaration newline-before-return\n// tslint:disable:no-parameter-reassignment prefer-switch\n//! moment.js locale configuration\n//! locale : Indonesia [id]\n//! author : Romy Kusuma : https://github.com/rkusuma\n//! reference: https://github.com/moment/moment/blob/develop/locale/id.js\n\n/** @type {?} */\n\nconst idLocale = {\n  abbr: 'id',\n  months: 'Januari_Februari_Maret_April_Mei_Juni_Juli_Agustus_September_Oktober_November_Desember'.split('_'),\n  monthsShort: 'Jan_Feb_Mar_Apr_Mei_Jun_Jul_Ags_Sep_Okt_Nov_Des'.split('_'),\n  weekdays: 'Minggu_Senin_Selasa_Rabu_Kamis_Jumat_Sabtu'.split('_'),\n  weekdaysShort: 'Min_Sen_Sel_Rab_Kam_Jum_Sab'.split('_'),\n  weekdaysMin: 'Mg_Sn_Sl_Rb_Km_Jm_Sb'.split('_'),\n  longDateFormat: {\n    LT: 'HH.mm',\n    LTS: 'HH.mm.ss',\n    L: 'DD/MM/YYYY',\n    LL: 'D MMMM YYYY',\n    LLL: 'D MMMM YYYY [pukul] HH.mm',\n    LLLL: 'dddd, D MMMM YYYY [pukul] HH.mm'\n  },\n  meridiemParse: /pagi|siang|sore|malam/,\n\n  /**\n   * @param {?} hour\n   * @param {?} meridiem\n   * @return {?}\n   */\n  meridiemHour(hour, meridiem) {\n    if (hour === 12) {\n      hour = 0;\n    }\n\n    if (meridiem === 'pagi') {\n      return hour;\n    } else if (meridiem === 'siang') {\n      return hour >= 11 ? hour : hour + 12;\n    } else if (meridiem === 'sore' || meridiem === 'malam') {\n      return hour + 12;\n    }\n  },\n\n  /**\n   * @param {?} hours\n   * @param {?} minutes\n   * @param {?} isLower\n   * @return {?}\n   */\n  meridiem(hours, minutes, isLower) {\n    if (hours < 11) {\n      return 'pagi';\n    } else if (hours < 15) {\n      return 'siang';\n    } else if (hours < 19) {\n      return 'sore';\n    } else {\n      return 'malam';\n    }\n  },\n\n  calendar: {\n    sameDay: '[Hari ini pukul] LT',\n    nextDay: '[Besok pukul] LT',\n    nextWeek: 'dddd [pukul] LT',\n    lastDay: '[Kemarin pukul] LT',\n    lastWeek: 'dddd [lalu pukul] LT',\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: 'dalam %s',\n    past: '%s yang lalu',\n    s: 'beberapa detik',\n    ss: '%d detik',\n    m: 'semenit',\n    mm: '%d menit',\n    h: 'sejam',\n    hh: '%d jam',\n    d: 'sehari',\n    dd: '%d hari',\n    M: 'sebulan',\n    MM: '%d bulan',\n    y: 'setahun',\n    yy: '%d tahun'\n  },\n  week: {\n    dow: 1,\n    // Monday is the first day of the week.\n    doy: 7 // The week that contains Jan 1st is the first week of the year.\n\n  }\n};\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n//! moment.js locale configuration\n//! locale : Italian [it]\n//! author : Lorenzo : https://github.com/aliem\n//! author: Mattia Larentis: https://github.com/nostalgiaz\n\n/** @type {?} */\n\nconst itLocale = {\n  abbr: 'it',\n  months: 'gennaio_febbraio_marzo_aprile_maggio_giugno_luglio_agosto_settembre_ottobre_novembre_dicembre'.split('_'),\n  monthsShort: 'gen_feb_mar_apr_mag_giu_lug_ago_set_ott_nov_dic'.split('_'),\n  weekdays: 'domenica_lunedì_martedì_mercoledì_giovedì_venerdì_sabato'.split('_'),\n  weekdaysShort: 'dom_lun_mar_mer_gio_ven_sab'.split('_'),\n  weekdaysMin: 'do_lu_ma_me_gi_ve_sa'.split('_'),\n  longDateFormat: {\n    LT: 'HH:mm',\n    LTS: 'HH:mm:ss',\n    L: 'DD/MM/YYYY',\n    LL: 'D MMMM YYYY',\n    LLL: 'D MMMM YYYY HH:mm',\n    LLLL: 'dddd D MMMM YYYY HH:mm'\n  },\n  calendar: {\n    sameDay: '[Oggi alle] LT',\n    nextDay: '[Domani alle] LT',\n    nextWeek: 'dddd [alle] LT',\n    lastDay: '[Ieri alle] LT',\n\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    lastWeek(date) {\n      switch (getDayOfWeek(date)) {\n        case 0:\n          return '[la scorsa] dddd [alle] LT';\n\n        default:\n          return '[lo scorso] dddd [alle] LT';\n      }\n    },\n\n    sameElse: 'L'\n  },\n  relativeTime: {\n    /**\n     * @param {?} num\n     * @return {?}\n     */\n    future(num) {\n      return (/^[0-9].+$/.test(num.toString(10)) ? 'tra' : 'in') + ' ' + num;\n    },\n\n    past: '%s fa',\n    s: 'alcuni secondi',\n    ss: '%d secondi',\n    m: 'un minuto',\n    mm: '%d minuti',\n    h: 'un\\'ora',\n    hh: '%d ore',\n    d: 'un giorno',\n    dd: '%d giorni',\n    M: 'un mese',\n    MM: '%d mesi',\n    y: 'un anno',\n    yy: '%d anni'\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}º/,\n  ordinal: '%dº',\n  week: {\n    dow: 1,\n    // Monday is the first day of the week.\n    doy: 4 // The week that contains Jan 4th is the first week of the year.\n\n  }\n};\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// tslint:disable:comment-format binary-expression-operand-order max-line-length\n// tslint:disable:no-bitwise prefer-template cyclomatic-complexity\n// tslint:disable:no-shadowed-variable switch-default prefer-const\n// tslint:disable:one-variable-per-declaration newline-before-return\n//! moment.js locale configuration\n//! locale : Japanese [ja]\n//! author : LI Long : https://github.com/baryon\n\n/** @type {?} */\n\nconst jaLocale = {\n  abbr: 'ja',\n  months: '1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月'.split('_'),\n  monthsShort: '1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月'.split('_'),\n  weekdays: '日曜日_月曜日_火曜日_水曜日_木曜日_金曜日_土曜日'.split('_'),\n  weekdaysShort: '日_月_火_水_木_金_土'.split('_'),\n  weekdaysMin: '日_月_火_水_木_金_土'.split('_'),\n  longDateFormat: {\n    LT: 'HH:mm',\n    LTS: 'HH:mm:ss',\n    L: 'YYYY/MM/DD',\n    LL: 'YYYY年M月D日',\n    LLL: 'YYYY年M月D日 HH:mm',\n    LLLL: 'YYYY年M月D日 HH:mm dddd',\n    l: 'YYYY/MM/DD',\n    ll: 'YYYY年M月D日',\n    lll: 'YYYY年M月D日 HH:mm',\n    llll: 'YYYY年M月D日 HH:mm dddd'\n  },\n  meridiemParse: /午前|午後/i,\n\n  /**\n   * @param {?} input\n   * @return {?}\n   */\n  isPM(input) {\n    return input === '午後';\n  },\n\n  /**\n   * @param {?} hour\n   * @param {?} minute\n   * @param {?} isLower\n   * @return {?}\n   */\n  meridiem(hour, minute, isLower) {\n    if (hour < 12) {\n      return '午前';\n    } else {\n      return '午後';\n    }\n  },\n\n  calendar: {\n    sameDay: '[今日] LT',\n    nextDay: '[明日] LT',\n    nextWeek: '[来週]dddd LT',\n    lastDay: '[昨日] LT',\n    lastWeek: '[前週]dddd LT',\n    sameElse: 'L'\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}日/,\n\n  /**\n   * @param {?} num\n   * @param {?} period\n   * @return {?}\n   */\n  ordinal(num, period) {\n    switch (period) {\n      case 'd':\n      case 'D':\n      case 'DDD':\n        return num + '日';\n\n      default:\n        return num.toString(10);\n    }\n  },\n\n  relativeTime: {\n    future: '%s後',\n    past: '%s前',\n    s: '数秒',\n    ss: '%d秒',\n    m: '1分',\n    mm: '%d分',\n    h: '1時間',\n    hh: '%d時間',\n    d: '1日',\n    dd: '%d日',\n    M: '1ヶ月',\n    MM: '%dヶ月',\n    y: '1年',\n    yy: '%d年'\n  }\n};\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// tslint:disable:comment-format binary-expression-operand-order max-line-length\n// tslint:disable:no-bitwise prefer-template cyclomatic-complexity\n// tslint:disable:no-shadowed-variable switch-default prefer-const\n// tslint:disable:one-variable-per-declaration newline-before-return\n//! moment.js locale configuration\n//! locale : Georgian [ka]\n//! author : Irakli Janiashvili : https://github.com/irakli-janiashvili\n//! author : Levan Tskipuri : https://github.com/tskipa\n\n/** @type {?} */\n\nconst kaLocale = {\n  abbr: 'ka',\n  months: {\n    format: 'იანვარს_თებერვალს_მარტს_აპრილის_მაისს_ივნისს_ივლისს_აგვისტს_სექტემბერს_ოქტომბერს_ნოემბერს_დეკემბერს'.split('_'),\n    standalone: 'იანვარი_თებერვალი_მარტი_აპრილი_მაისი_ივნისი_ივლისი_აგვისტო_სექტემბერი_ოქტომბერი_ნოემბერი_დეკემბერი'.split('_')\n  },\n  monthsShort: 'იან_თებ_მარ_აპრ_მაი_ივნ_ივლ_აგვ_სექ_ოქტ_ნოე_დეკ'.split('_'),\n  weekdays: {\n    standalone: 'კვირა_ორშაბათი_სამშაბათი_ოთხშაბათი_ხუთშაბათი_პარასკევი_შაბათი'.split('_'),\n    format: 'კვირას_ორშაბათს_სამშაბათს_ოთხშაბათს_ხუთშაბათს_პარასკევს_შაბათს'.split('_'),\n    isFormat: /(წინა|შემდეგ)/\n  },\n  weekdaysShort: 'კვი_ორშ_სამ_ოთხ_ხუთ_პარ_შაბ'.split('_'),\n  weekdaysMin: 'კვ_ორ_სა_ოთ_ხუ_პა_შა'.split('_'),\n  longDateFormat: {\n    LT: 'h:mm A',\n    LTS: 'h:mm:ss A',\n    L: 'DD/MM/YYYY',\n    LL: 'D MMMM YYYY',\n    LLL: 'D MMMM YYYY h:mm A',\n    LLLL: 'dddd, D MMMM YYYY h:mm A'\n  },\n  calendar: {\n    sameDay: '[დღეს] LT[-ზე]',\n    nextDay: '[ხვალ] LT[-ზე]',\n    lastDay: '[გუშინ] LT[-ზე]',\n    nextWeek: '[შემდეგ] dddd LT[-ზე]',\n    lastWeek: '[წინა] dddd LT-ზე',\n    sameElse: 'L'\n  },\n  relativeTime: {\n    /**\n     * @param {?} s\n     * @return {?}\n     */\n    future(s) {\n      /** @type {?} */\n      var st = s.toString();\n      return /(წამი|წუთი|საათი|წელი)/.test(st) ? st.replace(/ი$/, 'ში') : st + 'ში';\n    },\n\n    /**\n     * @param {?} s\n     * @return {?}\n     */\n    past(s) {\n      /** @type {?} */\n      var st = s.toString();\n\n      if (/(წამი|წუთი|საათი|დღე|თვე)/.test(st)) {\n        return st.replace(/(ი|ე)$/, 'ის წინ');\n      }\n\n      if (/წელი/.test(st)) {\n        return st.replace(/წელი$/, 'წლის წინ');\n      }\n    },\n\n    s: 'რამდენიმე წამი',\n    ss: '%d წამი',\n    m: 'წუთი',\n    mm: '%d წუთი',\n    h: 'საათი',\n    hh: '%d საათი',\n    d: 'დღე',\n    dd: '%d დღე',\n    M: 'თვე',\n    MM: '%d თვე',\n    y: 'წელი',\n    yy: '%d წელი'\n  },\n  dayOfMonthOrdinalParse: /0|1-ლი|მე-\\d{1,2}|\\d{1,2}-ე/,\n\n  /**\n   * @param {?} _num\n   * @param {?} _period\n   * @return {?}\n   */\n  ordinal(_num, _period) {\n    /** @type {?} */\n    const num = Number(_num);\n\n    if (num === 0) {\n      return num.toString();\n    }\n\n    if (num === 1) {\n      return num + '-ლი';\n    }\n\n    if (num < 20 || num <= 100 && num % 20 === 0 || num % 100 === 0) {\n      return 'მე-' + num;\n    }\n\n    return num + '-ე';\n  },\n\n  week: {\n    dow: 1,\n    doy: 4\n  }\n};\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// ! moment.js locale configuration\n// ! locale : Kazakh [kk]\n// ! authors : Nurlan Rakhimzhanov : https://github.com/nurlan\n\n/** @type {?} */\n\nconst suffixes = {\n  0: '-ші',\n  1: '-ші',\n  2: '-ші',\n  3: '-ші',\n  4: '-ші',\n  5: '-ші',\n  6: '-шы',\n  7: '-ші',\n  8: '-ші',\n  9: '-шы',\n  10: '-шы',\n  20: '-шы',\n  30: '-шы',\n  40: '-шы',\n  50: '-ші',\n  60: '-шы',\n  70: '-ші',\n  80: '-ші',\n  90: '-шы',\n  100: '-ші'\n};\n/** @type {?} */\n\nconst kkLocale = {\n  abbr: 'kk',\n  months: 'қаңтар_ақпан_наурыз_сәуір_мамыр_маусым_шілде_тамыз_қыркүйек_қазан_қараша_желтоқсан'.split('_'),\n  monthsShort: 'қаң_ақп_нау_сәу_мам_мау_шіл_там_қыр_қаз_қар_жел'.split('_'),\n  weekdays: 'жексенбі_дүйсенбі_сейсенбі_сәрсенбі_бейсенбі_жұма_сенбі'.split('_'),\n  weekdaysShort: 'жек_дүй_сей_сәр_бей_жұм_сен'.split('_'),\n  weekdaysMin: 'жк_дй_сй_ср_бй_жм_сн'.split('_'),\n  longDateFormat: {\n    LT: 'HH:mm',\n    LTS: 'HH:mm:ss',\n    L: 'DD.MM.YYYY',\n    LL: 'D MMMM YYYY',\n    LLL: 'D MMMM YYYY HH:mm',\n    LLLL: 'dddd, D MMMM YYYY HH:mm'\n  },\n  calendar: {\n    sameDay: '[Бүгін сағат] LT',\n    nextDay: '[Ертең сағат] LT',\n    nextWeek: 'dddd [сағат] LT',\n    lastDay: '[Кеше сағат] LT',\n    lastWeek: '[Өткен аптаның] dddd [сағат] LT',\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: '%s ішінде',\n    past: '%s бұрын',\n    s: 'бірнеше секунд',\n    ss: '%d секунд',\n    m: 'бір минут',\n    mm: '%d минут',\n    h: 'бір сағат',\n    hh: '%d сағат',\n    d: 'бір күн',\n    dd: '%d күн',\n    M: 'бір ай',\n    MM: '%d ай',\n    y: 'бір жыл',\n    yy: '%d жыл'\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}-(ші|шы)/,\n\n  /**\n   * @param {?} _num\n   * @return {?}\n   */\n  ordinal(_num) {\n    /** @type {?} */\n    const a = _num % 10;\n    /** @type {?} */\n\n    const b = _num >= 100 ? 100 : null;\n    return _num + (suffixes[_num] || suffixes[a] || suffixes[b]);\n  },\n\n  week: {\n    dow: 1,\n    // Monday is the first day of the week.\n    doy: 7 // The week that contains Jan 7th is the first week of the year.\n\n  }\n};\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// tslint:disable:comment-format binary-expression-operand-order max-line-length\n// tslint:disable:no-bitwise prefer-template cyclomatic-complexity\n// tslint:disable:no-shadowed-variable switch-default prefer-const\n// tslint:disable:one-variable-per-declaration newline-before-return\n// tslint:disable:object-literal-shorthand\n//! moment.js locale configuration\n//! locale : Korean [ko]\n//! author : Kyungwook, Park : https://github.com/kyungw00k\n//! author : Jeeeyul Lee <jeeeyul@gmail.com>\n\n/** @type {?} */\n\nconst koLocale = {\n  abbr: 'ko',\n  months: '1월_2월_3월_4월_5월_6월_7월_8월_9월_10월_11월_12월'.split('_'),\n  monthsShort: '1월_2월_3월_4월_5월_6월_7월_8월_9월_10월_11월_12월'.split('_'),\n  weekdays: '일요일_월요일_화요일_수요일_목요일_금요일_토요일'.split('_'),\n  weekdaysShort: '일_월_화_수_목_금_토'.split('_'),\n  weekdaysMin: '일_월_화_수_목_금_토'.split('_'),\n  longDateFormat: {\n    LT: 'A h:mm',\n    LTS: 'A h:mm:ss',\n    L: 'YYYY.MM.DD',\n    LL: 'YYYY년 MMMM D일',\n    LLL: 'YYYY년 MMMM D일 A h:mm',\n    LLLL: 'YYYY년 MMMM D일 dddd A h:mm',\n    l: 'YYYY.MM.DD',\n    ll: 'YYYY년 MMMM D일',\n    lll: 'YYYY년 MMMM D일 A h:mm',\n    llll: 'YYYY년 MMMM D일 dddd A h:mm'\n  },\n  calendar: {\n    sameDay: '오늘 LT',\n    nextDay: '내일 LT',\n    nextWeek: 'dddd LT',\n    lastDay: '어제 LT',\n    lastWeek: '지난주 dddd LT',\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: '%s 후',\n    past: '%s 전',\n    s: '몇 초',\n    ss: '%d초',\n    m: '1분',\n    mm: '%d분',\n    h: '한 시간',\n    hh: '%d시간',\n    d: '하루',\n    dd: '%d일',\n    M: '한 달',\n    MM: '%d달',\n    y: '일 년',\n    yy: '%d년'\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}(일|월|주)/,\n  ordinal:\n  /**\n  * @param {?} num\n  * @param {?} period\n  * @return {?}\n  */\n  function (num, period) {\n    switch (period) {\n      case 'd':\n      case 'D':\n      case 'DDD':\n        return num + '일';\n\n      case 'M':\n        return num + '월';\n\n      case 'w':\n      case 'W':\n        return num + '주';\n\n      default:\n        return num.toString(10);\n    }\n  },\n  meridiemParse: /오전|오후/,\n  isPM:\n  /**\n  * @param {?} token\n  * @return {?}\n  */\n  function (token) {\n    return token === '오후';\n  },\n  meridiem:\n  /**\n  * @param {?} hour\n  * @param {?} minute\n  * @param {?} isUpper\n  * @return {?}\n  */\n  function (hour, minute, isUpper) {\n    return hour < 12 ? '오전' : '오후';\n  }\n};\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// tslint:disable:comment-format binary-expression-operand-order max-line-length\n// tslint:disable:no-bitwise prefer-template cyclomatic-complexity\n// tslint:disable:no-shadowed-variable switch-default prefer-const\n// tslint:disable:one-variable-per-declaration newline-before-return\n//! moment.js locale configuration\n//! locale : Lithuanian [lt]\n//! author : Stanislavas Guk : https://github.com/ixoster\n\n/** @type {?} */\n\nconst units = {\n  ss: 'sekundė_sekundžių_sekundes',\n  m: 'minutė_minutės_minutę',\n  mm: 'minutės_minučių_minutes',\n  h: 'valanda_valandos_valandą',\n  hh: 'valandos_valandų_valandas',\n  d: 'diena_dienos_dieną',\n  dd: 'dienos_dienų_dienas',\n  M: 'mėnuo_mėnesio_mėnesį',\n  MM: 'mėnesiai_mėnesių_mėnesius',\n  y: 'metai_metų_metus',\n  yy: 'metai_metų_metus'\n};\n/**\n * @param {?} num\n * @param {?} withoutSuffix\n * @param {?} key\n * @param {?} isFuture\n * @return {?}\n */\n\nfunction translateSeconds(num, withoutSuffix, key, isFuture) {\n  if (withoutSuffix) {\n    return 'kelios sekundės';\n  } else {\n    return isFuture ? 'kelių sekundžių' : 'kelias sekundes';\n  }\n}\n/**\n * @param {?} num\n * @param {?} withoutSuffix\n * @param {?} key\n * @param {?} isFuture\n * @return {?}\n */\n\n\nfunction translateSingular(num, withoutSuffix, key, isFuture) {\n  return withoutSuffix ? forms(key)[0] : isFuture ? forms(key)[1] : forms(key)[2];\n}\n/**\n * @param {?} num\n * @return {?}\n */\n\n\nfunction special(num) {\n  return num % 10 === 0 || num > 10 && num < 20;\n}\n/**\n * @param {?} key\n * @return {?}\n */\n\n\nfunction forms(key) {\n  return (\n    /** @type {?} */\n    units[key].split('_')\n  );\n}\n/**\n * @param {?} num\n * @param {?} withoutSuffix\n * @param {?} key\n * @param {?} isFuture\n * @return {?}\n */\n\n\nfunction translate$3(num, withoutSuffix, key, isFuture) {\n  /** @type {?} */\n  let result = num + ' ';\n\n  if (num === 1) {\n    return result + translateSingular(num, withoutSuffix, key[0], isFuture);\n  } else if (withoutSuffix) {\n    return result + (special(num) ? forms(key)[1] : forms(key)[0]);\n  } else {\n    if (isFuture) {\n      return result + forms(key)[1];\n    } else {\n      return result + (special(num) ? forms(key)[1] : forms(key)[2]);\n    }\n  }\n}\n/** @type {?} */\n\n\nconst ltLocale = {\n  abbr: 'lt',\n  months: {\n    format: 'sausio_vasario_kovo_balandžio_gegužės_birželio_liepos_rugpjūčio_rugsėjo_spalio_lapkričio_gruodžio'.split('_'),\n    standalone: 'sausis_vasaris_kovas_balandis_gegužė_birželis_liepa_rugpjūtis_rugsėjis_spalis_lapkritis_gruodis'.split('_'),\n    isFormat: /D[oD]?(\\[[^\\[\\]]*\\]|\\s)+MMMM?|MMMM?(\\[[^\\[\\]]*\\]|\\s)+D[oD]?/\n  },\n  monthsShort: 'sau_vas_kov_bal_geg_bir_lie_rgp_rgs_spa_lap_grd'.split('_'),\n  weekdays: {\n    format: 'sekmadienį_pirmadienį_antradienį_trečiadienį_ketvirtadienį_penktadienį_šeštadienį'.split('_'),\n    standalone: 'sekmadienis_pirmadienis_antradienis_trečiadienis_ketvirtadienis_penktadienis_šeštadienis'.split('_'),\n    isFormat: /dddd HH:mm/\n  },\n  weekdaysShort: 'Sek_Pir_Ant_Tre_Ket_Pen_Šeš'.split('_'),\n  weekdaysMin: 'S_P_A_T_K_Pn_Š'.split('_'),\n  weekdaysParseExact: true,\n  longDateFormat: {\n    LT: 'HH:mm',\n    LTS: 'HH:mm:ss',\n    L: 'YYYY-MM-DD',\n    LL: 'YYYY [m.] MMMM D [d.]',\n    LLL: 'YYYY [m.] MMMM D [d.], HH:mm [val.]',\n    LLLL: 'YYYY [m.] MMMM D [d.], dddd, HH:mm [val.]',\n    l: 'YYYY-MM-DD',\n    ll: 'YYYY [m.] MMMM D [d.]',\n    lll: 'YYYY [m.] MMMM D [d.], HH:mm [val.]',\n    llll: 'YYYY [m.] MMMM D [d.], ddd, HH:mm [val.]'\n  },\n  calendar: {\n    sameDay: '[Šiandien] LT',\n    nextDay: '[Rytoj] LT',\n    nextWeek: 'dddd LT',\n    lastDay: '[Vakar] LT',\n    lastWeek: '[Praėjusį] dddd LT',\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: 'po %s',\n    past: 'prieš %s',\n    s: translateSeconds,\n    ss: translate$3,\n    m: translateSingular,\n    mm: translate$3,\n    h: translateSingular,\n    hh: translate$3,\n    d: translateSingular,\n    dd: translate$3,\n    M: translateSingular,\n    MM: translate$3,\n    y: translateSingular,\n    yy: translate$3\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}-oji/,\n\n  /**\n   * @param {?} num\n   * @return {?}\n   */\n  ordinal(num) {\n    return num + '-oji';\n  },\n\n  week: {\n    dow: 1,\n    // Monday is the first day of the week.\n    doy: 4 // The week that contains Jan 4th is the first week of the year.\n\n  }\n};\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// tslint:disable:comment-format binary-expression-operand-order max-line-length\n// tslint:disable:no-bitwise prefer-template cyclomatic-complexity\n// tslint:disable:no-shadowed-variable switch-default prefer-const\n// tslint:disable:one-variable-per-declaration newline-before-return\n//! moment.js locale configuration\n//! locale : Latvian [lv]\n//! author : Matiss Janis Aboltins : https://github.com/matissjanis\n\n/** @type {?} */\n\nconst lvLocale = {\n  abbr: 'lv',\n  months: 'Janvāris_Februāris_Marts_Aprīlis_Maijs_Jūnijs_Jūlijs_Augusts_Septembris_Oktobris_Novembris_Decembris'.split('_'),\n  monthsShort: 'Jan_Feb_Mar_Apr_Mai_Jūn_Jūl_Aug_Sep_Okt_Nov_Dec'.split('_'),\n  weekdays: 'Svētdiena_Pirmdiena_Otrdiena_Trešdiena_Ceturtdiena_Piektdiena_Sestdiena'.split('_'),\n  weekdaysShort: 'Svētd_Pirmd_Otrd_Trešd_Ceturtd_Piektd_Sestd'.split('_'),\n  weekdaysMin: 'Sv_Pi_Ot_Tr_Ce_Pk_Se'.split('_'),\n  longDateFormat: {\n    LT: 'HH:mm',\n    LTS: 'HH:mm:ss',\n    L: 'DD/MM/YYYY',\n    LL: 'D MMMM YYYY',\n    LLL: 'D MMMM YYYY HH:mm',\n    LLLL: 'dddd, D MMMM YYYY HH:mm'\n  },\n  calendar: {\n    sameDay: '[Today at] LT',\n    nextDay: '[Tomorrow at] LT',\n    nextWeek: 'dddd [at] LT',\n    lastDay: '[Yesterday at] LT',\n    lastWeek: '[Last] dddd [at] LT',\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: 'pēc %s',\n    past: 'pirms %s',\n    s: 'dažām sekundēm',\n    ss: '%d sekundēm',\n    m: 'minūtes',\n    mm: '%d minūtēm',\n    h: 'stundas',\n    hh: '%d stundām',\n    d: 'dienas',\n    dd: '%d dienām',\n    M: 'mēneša',\n    MM: '%d mēnešiem',\n    y: 'gada',\n    yy: '%d gadiem'\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n\n  /**\n   * @param {?} num\n   * @return {?}\n   */\n  ordinal(num) {\n    return num + '.';\n  },\n\n  week: {\n    dow: 1,\n    // Monday is the first day of the week.\n    doy: 4 // The week that contains Jan 4th is the first week of the year.\n\n  }\n};\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// tslint:disable:comment-format binary-expression-operand-order max-line-length\n// tslint:disable:no-bitwise prefer-template cyclomatic-complexity\n// tslint:disable:no-shadowed-variable switch-default prefer-const\n// tslint:disable:one-variable-per-declaration newline-before-return\n// tslint:disable:object-literal-shorthand\n//! moment.js locale configuration\n//! locale : Mongolian [mn]\n//! author : Javkhlantugs Nyamdorj : https://github.com/javkhaanj7\n\n/**\n * @param {?} num\n * @param {?} withoutSuffix\n * @param {?} key\n * @param {?} isFuture\n * @return {?}\n */\n\nfunction translate$4(num, withoutSuffix, key, isFuture) {\n  switch (key) {\n    case 's':\n      return withoutSuffix ? 'хэдхэн секунд' : 'хэдхэн секундын';\n\n    case 'ss':\n      return num + (withoutSuffix ? ' секунд' : ' секундын');\n\n    case 'm':\n    case 'mm':\n      return num + (withoutSuffix ? ' минут' : ' минутын');\n\n    case 'h':\n    case 'hh':\n      return num + (withoutSuffix ? ' цаг' : ' цагийн');\n\n    case 'd':\n    case 'dd':\n      return num + (withoutSuffix ? ' өдөр' : ' өдрийн');\n\n    case 'M':\n    case 'MM':\n      return num + (withoutSuffix ? ' сар' : ' сарын');\n\n    case 'y':\n    case 'yy':\n      return num + (withoutSuffix ? ' жил' : ' жилийн');\n\n    default:\n      return num.toString(10);\n  }\n}\n/** @type {?} */\n\n\nconst mnLocale = {\n  abbr: 'mn',\n  months: 'Нэгдүгээр сар_Хоёрдугаар сар_Гуравдугаар сар_Дөрөвдүгээр сар_Тавдугаар сар_Зургадугаар сар_Долдугаар сар_Наймдугаар сар_Есдүгээр сар_Аравдугаар сар_Арван нэгдүгээр сар_Арван хоёрдугаар сар'.split('_'),\n  monthsShort: '1 сар_2 сар_3 сар_4 сар_5 сар_6 сар_7 сар_8 сар_9 сар_10 сар_11 сар_12 сар'.split('_'),\n  monthsParseExact: true,\n  weekdays: 'Ням_Даваа_Мягмар_Лхагва_Пүрэв_Баасан_Бямба'.split('_'),\n  weekdaysShort: 'Ням_Дав_Мяг_Лха_Пүр_Баа_Бям'.split('_'),\n  weekdaysMin: 'Ня_Да_Мя_Лх_Пү_Ба_Бя'.split('_'),\n  weekdaysParseExact: true,\n  longDateFormat: {\n    LT: 'HH:mm',\n    LTS: 'HH:mm:ss',\n    L: 'YYYY-MM-DD',\n    LL: 'YYYY оны MMMMын D',\n    LLL: 'YYYY оны MMMMын D HH:mm',\n    LLLL: 'dddd, YYYY оны MMMMын D HH:mm'\n  },\n  meridiemParse: /ҮӨ|ҮХ/i,\n  isPM:\n  /**\n  * @param {?} input\n  * @return {?}\n  */\n  function (input) {\n    return input === 'ҮХ';\n  },\n  meridiem:\n  /**\n  * @param {?} hour\n  * @param {?} minute\n  * @param {?} isLower\n  * @return {?}\n  */\n  function (hour, minute, isLower) {\n    if (hour < 12) {\n      return 'ҮӨ';\n    } else {\n      return 'ҮХ';\n    }\n  },\n  calendar: {\n    sameDay: '[Өнөөдөр] LT',\n    nextDay: '[Маргааш] LT',\n    nextWeek: '[Ирэх] dddd LT',\n    lastDay: '[Өчигдөр] LT',\n    lastWeek: '[Өнгөрсөн] dddd LT',\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: '%s дараа',\n    past: '%s өмнө',\n    s: translate$4,\n    ss: translate$4,\n    m: translate$4,\n    mm: translate$4,\n    h: translate$4,\n    hh: translate$4,\n    d: translate$4,\n    dd: translate$4,\n    M: translate$4,\n    MM: translate$4,\n    y: translate$4,\n    yy: translate$4\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2} өдөр/,\n  ordinal:\n  /**\n  * @param {?} num\n  * @param {?} period\n  * @return {?}\n  */\n  function (num, period) {\n    switch (period) {\n      case 'd':\n      case 'D':\n      case 'DDD':\n        return num + ' өдөр';\n\n      default:\n        return num.toString(10);\n    }\n  }\n};\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n//! moment.js locale configuration\n//! locale : Norwegian Bokmål [nb]\n//! authors : Espen Hovlandsdal : https://github.com/rexxars\n//!           Sigurd Gartmann : https://github.com/sigurdga\n\n/** @type {?} */\n\nconst nbLocale = {\n  abbr: 'nb',\n  months: 'januar_februar_mars_april_mai_juni_juli_august_september_oktober_november_desember'.split('_'),\n  monthsShort: 'jan._feb._mars_april_mai_juni_juli_aug._sep._okt._nov._des.'.split('_'),\n  monthsParseExact: true,\n  weekdays: 'søndag_mandag_tirsdag_onsdag_torsdag_fredag_lørdag'.split('_'),\n  weekdaysShort: 'sø._ma._ti._on._to._fr._lø.'.split('_'),\n  weekdaysMin: 'sø_ma_ti_on_to_fr_lø'.split('_'),\n  weekdaysParseExact: true,\n  longDateFormat: {\n    LT: 'HH:mm',\n    LTS: 'HH:mm:ss',\n    L: 'DD.MM.YYYY',\n    LL: 'D. MMMM YYYY',\n    LLL: 'D. MMMM YYYY [kl.] HH:mm',\n    LLLL: 'dddd D. MMMM YYYY [kl.] HH:mm'\n  },\n  calendar: {\n    sameDay: '[i dag kl.] LT',\n    nextDay: '[i morgen kl.] LT',\n    nextWeek: 'dddd [kl.] LT',\n    lastDay: '[i går kl.] LT',\n    lastWeek: '[forrige] dddd [kl.] LT',\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: 'om %s',\n    past: '%s siden',\n    s: 'noen sekunder',\n    ss: '%d sekunder',\n    m: 'ett minutt',\n    mm: '%d minutter',\n    h: 'en time',\n    hh: '%d timer',\n    d: 'en dag',\n    dd: '%d dager',\n    M: 'en måned',\n    MM: '%d måneder',\n    y: 'ett år',\n    yy: '%d år'\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n  ordinal: '%d.',\n  week: {\n    dow: 1,\n    // Monday is the first day of the week.\n    doy: 4 // The week that contains Jan 4th is the first week of the year.\n\n  }\n};\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n//! moment.js locale configuration\n//! locale : Dutch (Belgium) [nl-be]\n//! author : Joris Röling : https://github.com/jorisroling\n//! author : Jacob Middag : https://github.com/middagj\n\n/** @type {?} */\n\nlet monthsShortWithDots = 'jan._feb._mrt._apr._mei_jun._jul._aug._sep._okt._nov._dec.'.split('_');\n/** @type {?} */\n\nlet monthsShortWithoutDots = 'jan_feb_mrt_apr_mei_jun_jul_aug_sep_okt_nov_dec'.split('_');\n/** @type {?} */\n\nlet monthsParse$4 = [/^jan/i, /^feb/i, /^maart|mrt.?$/i, /^apr/i, /^mei$/i, /^jun[i.]?$/i, /^jul[i.]?$/i, /^aug/i, /^sep/i, /^okt/i, /^nov/i, /^dec/i];\n/** @type {?} */\n\nlet monthsRegex$4 = /^(januari|februari|maart|april|mei|april|ju[nl]i|augustus|september|oktober|november|december|jan\\.?|feb\\.?|mrt\\.?|apr\\.?|ju[nl]\\.?|aug\\.?|sep\\.?|okt\\.?|nov\\.?|dec\\.?)/i;\n/** @type {?} */\n\nconst nlBeLocale = {\n  abbr: 'nl-be',\n  months: 'januari_februari_maart_april_mei_juni_juli_augustus_september_oktober_november_december'.split('_'),\n\n  /**\n   * @param {?} date\n   * @param {?} format\n   * @param {?=} isUTC\n   * @return {?}\n   */\n  monthsShort(date, format, isUTC) {\n    if (!date) {\n      return monthsShortWithDots;\n    } else if (/-MMM-/.test(format)) {\n      return monthsShortWithoutDots[getMonth(date, isUTC)];\n    } else {\n      return monthsShortWithDots[getMonth(date, isUTC)];\n    }\n  },\n\n  monthsRegex: monthsRegex$4,\n  monthsShortRegex: monthsRegex$4,\n  monthsStrictRegex: /^(januari|februari|maart|mei|ju[nl]i|april|augustus|september|oktober|november|december)/i,\n  monthsShortStrictRegex: /^(jan\\.?|feb\\.?|mrt\\.?|apr\\.?|mei|ju[nl]\\.?|aug\\.?|sep\\.?|okt\\.?|nov\\.?|dec\\.?)/i,\n  monthsParse: monthsParse$4,\n  longMonthsParse: monthsParse$4,\n  shortMonthsParse: monthsParse$4,\n  weekdays: 'zondag_maandag_dinsdag_woensdag_donderdag_vrijdag_zaterdag'.split('_'),\n  weekdaysShort: 'zo._ma._di._wo._do._vr._za.'.split('_'),\n  weekdaysMin: 'zo_ma_di_wo_do_vr_za'.split('_'),\n  weekdaysParseExact: true,\n  longDateFormat: {\n    LT: 'HH:mm',\n    LTS: 'HH:mm:ss',\n    L: 'DD/MM/YYYY',\n    LL: 'D MMMM YYYY',\n    LLL: 'D MMMM YYYY HH:mm',\n    LLLL: 'dddd D MMMM YYYY HH:mm'\n  },\n  calendar: {\n    sameDay: '[vandaag om] LT',\n    nextDay: '[morgen om] LT',\n    nextWeek: 'dddd [om] LT',\n    lastDay: '[gisteren om] LT',\n    lastWeek: '[afgelopen] dddd [om] LT',\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: 'over %s',\n    past: '%s geleden',\n    s: 'een paar seconden',\n    ss: '%d seconden',\n    m: 'één minuut',\n    mm: '%d minuten',\n    h: 'één uur',\n    hh: '%d uur',\n    d: 'één dag',\n    dd: '%d dagen',\n    M: 'één maand',\n    MM: '%d maanden',\n    y: 'één jaar',\n    yy: '%d jaar'\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}(ste|de)/,\n\n  /**\n   * @param {?} _num\n   * @return {?}\n   */\n  ordinal(_num) {\n    /** @type {?} */\n    const num = Number(_num);\n    return num + (num === 1 || num === 8 || num >= 20 ? 'ste' : 'de');\n  },\n\n  week: {\n    dow: 1,\n    // Monday is the first day of the week.\n    doy: 4 // The week that contains Jan 4th is the first week of the year.\n\n  }\n};\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n//! moment.js locale configuration\n//! locale : Dutch [nl]\n//! author : Joris Röling : https://github.com/jorisroling\n//! author : Jacob Middag : https://github.com/middagj\n\n/** @type {?} */\n\nlet monthsShortWithDots$1 = 'jan._feb._mrt._apr._mei_jun._jul._aug._sep._okt._nov._dec.'.split('_');\n/** @type {?} */\n\nlet monthsShortWithoutDots$1 = 'jan_feb_mrt_apr_mei_jun_jul_aug_sep_okt_nov_dec'.split('_');\n/** @type {?} */\n\nlet monthsParse$5 = [/^jan/i, /^feb/i, /^maart|mrt.?$/i, /^apr/i, /^mei$/i, /^jun[i.]?$/i, /^jul[i.]?$/i, /^aug/i, /^sep/i, /^okt/i, /^nov/i, /^dec/i];\n/** @type {?} */\n\nlet monthsRegex$5 = /^(januari|februari|maart|april|mei|april|ju[nl]i|augustus|september|oktober|november|december|jan\\.?|feb\\.?|mrt\\.?|apr\\.?|ju[nl]\\.?|aug\\.?|sep\\.?|okt\\.?|nov\\.?|dec\\.?)/i;\n/** @type {?} */\n\nconst nlLocale = {\n  abbr: 'nl',\n  months: 'januari_februari_maart_april_mei_juni_juli_augustus_september_oktober_november_december'.split('_'),\n\n  /**\n   * @param {?} date\n   * @param {?} format\n   * @param {?=} isUTC\n   * @return {?}\n   */\n  monthsShort(date, format, isUTC) {\n    if (!date) {\n      return monthsShortWithDots$1;\n    } else if (/-MMM-/.test(format)) {\n      return monthsShortWithoutDots$1[getMonth(date, isUTC)];\n    } else {\n      return monthsShortWithDots$1[getMonth(date, isUTC)];\n    }\n  },\n\n  monthsRegex: monthsRegex$5,\n  monthsShortRegex: monthsRegex$5,\n  monthsStrictRegex: /^(januari|februari|maart|mei|ju[nl]i|april|augustus|september|oktober|november|december)/i,\n  monthsShortStrictRegex: /^(jan\\.?|feb\\.?|mrt\\.?|apr\\.?|mei|ju[nl]\\.?|aug\\.?|sep\\.?|okt\\.?|nov\\.?|dec\\.?)/i,\n  monthsParse: monthsParse$5,\n  longMonthsParse: monthsParse$5,\n  shortMonthsParse: monthsParse$5,\n  weekdays: 'zondag_maandag_dinsdag_woensdag_donderdag_vrijdag_zaterdag'.split('_'),\n  weekdaysShort: 'zo._ma._di._wo._do._vr._za.'.split('_'),\n  weekdaysMin: 'zo_ma_di_wo_do_vr_za'.split('_'),\n  weekdaysParseExact: true,\n  longDateFormat: {\n    LT: 'HH:mm',\n    LTS: 'HH:mm:ss',\n    L: 'DD-MM-YYYY',\n    LL: 'D MMMM YYYY',\n    LLL: 'D MMMM YYYY HH:mm',\n    LLLL: 'dddd D MMMM YYYY HH:mm'\n  },\n  calendar: {\n    sameDay: '[vandaag om] LT',\n    nextDay: '[morgen om] LT',\n    nextWeek: 'dddd [om] LT',\n    lastDay: '[gisteren om] LT',\n    lastWeek: '[afgelopen] dddd [om] LT',\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: 'over %s',\n    past: '%s geleden',\n    s: 'een paar seconden',\n    ss: '%d seconden',\n    m: 'één minuut',\n    mm: '%d minuten',\n    h: 'één uur',\n    hh: '%d uur',\n    d: 'één dag',\n    dd: '%d dagen',\n    M: 'één maand',\n    MM: '%d maanden',\n    y: 'één jaar',\n    yy: '%d jaar'\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}(ste|de)/,\n\n  /**\n   * @param {?} _num\n   * @return {?}\n   */\n  ordinal(_num) {\n    /** @type {?} */\n    const num = Number(_num);\n    return num + (num === 1 || num === 8 || num >= 20 ? 'ste' : 'de');\n  },\n\n  week: {\n    dow: 1,\n    // Monday is the first day of the week.\n    doy: 4 // The week that contains Jan 4th is the first week of the year.\n\n  }\n};\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n//! moment.js locale configuration\n//! locale : Polish [pl]\n//! author : Rafal Hirsz : https://github.com/evoL\n\n/** @type {?} */\n\nlet monthsNominative = 'styczeń_luty_marzec_kwiecień_maj_czerwiec_lipiec_sierpień_wrzesień_październik_listopad_grudzień'.split('_');\n/** @type {?} */\n\nlet monthsSubjective = 'stycznia_lutego_marca_kwietnia_maja_czerwca_lipca_sierpnia_września_października_listopada_grudnia'.split('_');\n/**\n * @param {?} num\n * @return {?}\n */\n\nfunction plural$1(num) {\n  return num % 10 < 5 && num % 10 > 1 && ~~(num / 10) % 10 !== 1;\n}\n/**\n * @param {?} num\n * @param {?} withoutSuffix\n * @param {?} key\n * @return {?}\n */\n\n\nfunction translate$5(num, withoutSuffix, key) {\n  /** @type {?} */\n  let result = num + ' ';\n\n  switch (key) {\n    case 'ss':\n      return result + (plural$1(num) ? 'sekundy' : 'sekund');\n\n    case 'm':\n      return withoutSuffix ? 'minuta' : 'minutę';\n\n    case 'mm':\n      return result + (plural$1(num) ? 'minuty' : 'minut');\n\n    case 'h':\n      return withoutSuffix ? 'godzina' : 'godzinę';\n\n    case 'hh':\n      return result + (plural$1(num) ? 'godziny' : 'godzin');\n\n    case 'MM':\n      return result + (plural$1(num) ? 'miesiące' : 'miesięcy');\n\n    case 'yy':\n      return result + (plural$1(num) ? 'lata' : 'lat');\n  }\n}\n/** @type {?} */\n\n\nconst plLocale = {\n  abbr: 'pl',\n\n  /**\n   * @param {?} date\n   * @param {?} format\n   * @param {?=} isUTC\n   * @return {?}\n   */\n  months(date, format, isUTC) {\n    if (!date) {\n      return monthsNominative;\n    } else if (format === '') {\n      // Hack: if format empty we know this is used to generate\n      // RegExp by moment. Give then back both valid forms of months\n      // in RegExp ready format.\n      return '(' + monthsSubjective[getMonth(date, isUTC)] + '|' + monthsNominative[getMonth(date, isUTC)] + ')';\n    } else if (/D MMMM/.test(format)) {\n      return monthsSubjective[getMonth(date, isUTC)];\n    } else {\n      return monthsNominative[getMonth(date, isUTC)];\n    }\n  },\n\n  monthsShort: 'sty_lut_mar_kwi_maj_cze_lip_sie_wrz_paź_lis_gru'.split('_'),\n  weekdays: 'niedziela_poniedziałek_wtorek_środa_czwartek_piątek_sobota'.split('_'),\n  weekdaysShort: 'ndz_pon_wt_śr_czw_pt_sob'.split('_'),\n  weekdaysMin: 'Nd_Pn_Wt_Śr_Cz_Pt_So'.split('_'),\n  longDateFormat: {\n    LT: 'HH:mm',\n    LTS: 'HH:mm:ss',\n    L: 'DD.MM.YYYY',\n    LL: 'D MMMM YYYY',\n    LLL: 'D MMMM YYYY HH:mm',\n    LLLL: 'dddd, D MMMM YYYY HH:mm'\n  },\n  calendar: {\n    sameDay: '[Dziś o] LT',\n    nextDay: '[Jutro o] LT',\n\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    nextWeek(date) {\n      switch (getDayOfWeek(date)) {\n        case 0:\n          return '[W niedzielę o] LT';\n\n        case 2:\n          return '[We wtorek o] LT';\n\n        case 3:\n          return '[W środę o] LT';\n\n        case 5:\n          return '[W piątek o] LT';\n\n        case 6:\n          return '[W sobotę o] LT';\n\n        default:\n          return '[W] dddd [o] LT';\n      }\n    },\n\n    lastDay: '[Wczoraj o] LT',\n\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    lastWeek(date) {\n      switch (getDayOfWeek(date)) {\n        case 0:\n          return '[W zeszłą niedzielę o] LT';\n\n        case 3:\n          return '[W zeszłą środę o] LT';\n\n        case 4:\n          return '[W zeszłą czwartek o] LT';\n\n        case 5:\n          return '[W zeszłą piątek o] LT';\n\n        case 6:\n          return '[W zeszłą sobotę o] LT';\n\n        default:\n          return '[W zeszły] dddd [o] LT';\n      }\n    },\n\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: 'za %s',\n    past: '%s temu',\n    s: 'kilka sekund',\n    ss: translate$5,\n    m: translate$5,\n    mm: translate$5,\n    h: translate$5,\n    hh: translate$5,\n    d: '1 dzień',\n    dd: '%d dni',\n    M: 'miesiąc',\n    MM: translate$5,\n    y: 'rok',\n    yy: translate$5\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n  ordinal: '%d.',\n  week: {\n    dow: 1,\n    // Monday is the first day of the week.\n    doy: 4 // The week that contains Jan 4th is the first week of the year.\n\n  }\n};\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n//! moment.js locale configuration\n//! locale : Portuguese (Brazil) [pt-br]\n//! author : Caio Ribeiro Pereira : https://github.com/caio-ribeiro-pereira\n\n/** @type {?} */\n\nconst ptBrLocale = {\n  abbr: 'pt-br',\n  months: 'Janeiro_Fevereiro_Março_Abril_Maio_Junho_Julho_Agosto_Setembro_Outubro_Novembro_Dezembro'.split('_'),\n  monthsShort: 'Jan_Fev_Mar_Abr_Mai_Jun_Jul_Ago_Set_Out_Nov_Dez'.split('_'),\n  weekdays: 'Domingo_Segunda-feira_Terça-feira_Quarta-feira_Quinta-feira_Sexta-feira_Sábado'.split('_'),\n  weekdaysShort: 'Dom_Seg_Ter_Qua_Qui_Sex_Sáb'.split('_'),\n  weekdaysMin: 'Do_2ª_3ª_4ª_5ª_6ª_Sá'.split('_'),\n  weekdaysParseExact: true,\n  longDateFormat: {\n    LT: 'HH:mm',\n    LTS: 'HH:mm:ss',\n    L: 'DD/MM/YYYY',\n    LL: 'D [de] MMMM [de] YYYY',\n    LLL: 'D [de] MMMM [de] YYYY [às] HH:mm',\n    LLLL: 'dddd, D [de] MMMM [de] YYYY [às] HH:mm'\n  },\n  calendar: {\n    sameDay: '[Hoje às] LT',\n    nextDay: '[Amanhã às] LT',\n    nextWeek: 'dddd [às] LT',\n    lastDay: '[Ontem às] LT',\n\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    lastWeek(date) {\n      return getDayOfWeek(date) === 0 || getDayOfWeek(date) === 6 ? '[Último] dddd [às] LT' : // Saturday + Sunday\n      '[Última] dddd [às] LT'; // Monday - Friday\n    },\n\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: 'em %s',\n    past: '%s atrás',\n    s: 'poucos segundos',\n    ss: '%d segundos',\n    m: 'um minuto',\n    mm: '%d minutos',\n    h: 'uma hora',\n    hh: '%d horas',\n    d: 'um dia',\n    dd: '%d dias',\n    M: 'um mês',\n    MM: '%d meses',\n    y: 'um ano',\n    yy: '%d anos'\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}º/,\n  ordinal: '%dº'\n};\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// ! moment.js locale configuration\n// ! locale : Romanian [ro]\n//! author : Vlad Gurdiga : https://github.com/gurdiga\n//! author : Valentin Agachi : https://github.com/avaly\n// ! author : Earle white: https://github.com/5earle\n\n/**\n * @param {?} num\n * @param {?} withoutSuffix\n * @param {?} key\n * @return {?}\n */\n\nfunction relativeTimeWithPlural(num, withoutSuffix, key) {\n  /** @type {?} */\n  let format = {\n    ss: 'secunde',\n    mm: 'minute',\n    hh: 'ore',\n    dd: 'zile',\n    MM: 'luni',\n    yy: 'ani'\n  };\n  /** @type {?} */\n\n  let separator = ' ';\n\n  if (num % 100 >= 20 || num >= 100 && num % 100 === 0) {\n    separator = ' de ';\n  }\n\n  return num + separator + format[key];\n}\n/** @type {?} */\n\n\nconst roLocale = {\n  abbr: 'ro',\n  months: 'ianuarie_februarie_martie_aprilie_mai_iunie_iulie_august_septembrie_octombrie_noiembrie_decembrie'.split('_'),\n  monthsShort: 'ian._febr._mart._apr._mai_iun._iul._aug._sept._oct._nov._dec.'.split('_'),\n  monthsParseExact: true,\n  weekdays: 'duminică_luni_marți_miercuri_joi_vineri_sâmbătă'.split('_'),\n  weekdaysShort: 'Dum_Lun_Mar_Mie_Joi_Vin_Sâm'.split('_'),\n  weekdaysMin: 'Du_Lu_Ma_Mi_Jo_Vi_Sâ'.split('_'),\n  longDateFormat: {\n    LT: 'H:mm',\n    LTS: 'H:mm:ss',\n    L: 'DD.MM.YYYY',\n    LL: 'D MMMM YYYY',\n    LLL: 'D MMMM YYYY H:mm',\n    LLLL: 'dddd, D MMMM YYYY H:mm'\n  },\n  calendar: {\n    sameDay: '[azi la] LT',\n    nextDay: '[mâine la] LT',\n    nextWeek: 'dddd [la] LT',\n    lastDay: '[ieri la] LT',\n    lastWeek: '[fosta] dddd [la] LT',\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: 'peste %s',\n    past: '%s în urmă',\n    s: 'câteva secunde',\n    ss: relativeTimeWithPlural,\n    m: 'un minut',\n    mm: relativeTimeWithPlural,\n    h: 'o oră',\n    hh: relativeTimeWithPlural,\n    d: 'o zi',\n    dd: relativeTimeWithPlural,\n    M: 'o lună',\n    MM: relativeTimeWithPlural,\n    y: 'un an',\n    yy: relativeTimeWithPlural\n  },\n  week: {\n    dow: 1,\n    // Monday is the first day of the week.\n    doy: 7 // The week that contains Jan 1st is the first week of the year.\n\n  }\n};\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n//! moment.js locale configuration\n//! locale : Russian [ru]\n//! author : Viktorminator : https://github.com/Viktorminator\n//! Author : Menelion Elensúle : https://github.com/Oire\n//! author : Коренберг Марк : https://github.com/socketpair\n\n/**\n * @param {?} word\n * @param {?} num\n * @return {?}\n */\n\nfunction plural$2(word, num) {\n  /** @type {?} */\n  let forms = word.split('_');\n  return num % 10 === 1 && num % 100 !== 11 ? forms[0] : num % 10 >= 2 && num % 10 <= 4 && (num % 100 < 10 || num % 100 >= 20) ? forms[1] : forms[2];\n}\n/**\n * @param {?} num\n * @param {?} withoutSuffix\n * @param {?} key\n * @return {?}\n */\n\n\nfunction relativeTimeWithPlural$1(num, withoutSuffix, key) {\n  /** @type {?} */\n  let format = {\n    ss: withoutSuffix ? 'секунда_секунды_секунд' : 'секунду_секунды_секунд',\n    mm: withoutSuffix ? 'минута_минуты_минут' : 'минуту_минуты_минут',\n    hh: 'час_часа_часов',\n    dd: 'день_дня_дней',\n    MM: 'месяц_месяца_месяцев',\n    yy: 'год_года_лет'\n  };\n\n  if (key === 'm') {\n    return withoutSuffix ? 'минута' : 'минуту';\n  }\n\n  return num + ' ' + plural$2(format[key], +num);\n}\n/** @type {?} */\n\n\nlet monthsParse$6 = [/^янв/i, /^фев/i, /^мар/i, /^апр/i, /^ма[йя]/i, /^июн/i, /^июл/i, /^авг/i, /^сен/i, /^окт/i, /^ноя/i, /^дек/i]; // http://new.gramota.ru/spravka/rules/139-prop : § 103\n// Сокращения месяцев: http://new.gramota.ru/spravka/buro/search-answer?s=242637\n// CLDR data:          http://www.unicode.org/cldr/charts/28/summary/ru.html#1753\n\n/** @type {?} */\n\nconst ruLocale = {\n  abbr: 'ru',\n  months: {\n    format: 'января_февраля_марта_апреля_мая_июня_июля_августа_сентября_октября_ноября_декабря'.split('_'),\n    standalone: 'январь_февраль_март_апрель_май_июнь_июль_август_сентябрь_октябрь_ноябрь_декабрь'.split('_')\n  },\n  monthsShort: {\n    // по CLDR именно \"июл.\" и \"июн.\", но какой смысл менять букву на точку ?\n    format: 'янв._февр._мар._апр._мая_июня_июля_авг._сент._окт._нояб._дек.'.split('_'),\n    standalone: 'янв._февр._март_апр._май_июнь_июль_авг._сент._окт._нояб._дек.'.split('_')\n  },\n  weekdays: {\n    standalone: 'воскресенье_понедельник_вторник_среда_четверг_пятница_суббота'.split('_'),\n    format: 'воскресенье_понедельник_вторник_среду_четверг_пятницу_субботу'.split('_'),\n    isFormat: /\\[ ?[Вв] ?(?:прошлую|следующую|эту)? ?\\] ?dddd/\n  },\n  weekdaysShort: 'вс_пн_вт_ср_чт_пт_сб'.split('_'),\n  weekdaysMin: 'вс_пн_вт_ср_чт_пт_сб'.split('_'),\n  monthsParse: monthsParse$6,\n  longMonthsParse: monthsParse$6,\n  shortMonthsParse: monthsParse$6,\n  // полные названия с падежами, по три буквы, для некоторых, по 4 буквы, сокращения с точкой и без точки\n  monthsRegex: /^(январ[ья]|янв\\.?|феврал[ья]|февр?\\.?|марта?|мар\\.?|апрел[ья]|апр\\.?|ма[йя]|июн[ья]|июн\\.?|июл[ья]|июл\\.?|августа?|авг\\.?|сентябр[ья]|сент?\\.?|октябр[ья]|окт\\.?|ноябр[ья]|нояб?\\.?|декабр[ья]|дек\\.?)/i,\n  // копия предыдущего\n  monthsShortRegex: /^(январ[ья]|янв\\.?|феврал[ья]|февр?\\.?|марта?|мар\\.?|апрел[ья]|апр\\.?|ма[йя]|июн[ья]|июн\\.?|июл[ья]|июл\\.?|августа?|авг\\.?|сентябр[ья]|сент?\\.?|октябр[ья]|окт\\.?|ноябр[ья]|нояб?\\.?|декабр[ья]|дек\\.?)/i,\n  // полные названия с падежами\n  monthsStrictRegex: /^(январ[яь]|феврал[яь]|марта?|апрел[яь]|ма[яй]|июн[яь]|июл[яь]|августа?|сентябр[яь]|октябр[яь]|ноябр[яь]|декабр[яь])/i,\n  // Выражение, которое соотвествует только сокращённым формам\n  monthsShortStrictRegex: /^(янв\\.|февр?\\.|мар[т.]|апр\\.|ма[яй]|июн[ья.]|июл[ья.]|авг\\.|сент?\\.|окт\\.|нояб?\\.|дек\\.)/i,\n  longDateFormat: {\n    LT: 'H:mm',\n    LTS: 'H:mm:ss',\n    L: 'DD.MM.YYYY',\n    LL: 'D MMMM YYYY г.',\n    LLL: 'D MMMM YYYY г., H:mm',\n    LLLL: 'dddd, D MMMM YYYY г., H:mm'\n  },\n  calendar: {\n    sameDay: '[Сегодня в] LT',\n    nextDay: '[Завтра в] LT',\n    lastDay: '[Вчера в] LT',\n\n    /**\n     * @param {?} date\n     * @param {?} now\n     * @return {?}\n     */\n    nextWeek(date, now) {\n      if (getWeek(now) !== getWeek(date)) {\n        switch (getDayOfWeek(date)) {\n          case 0:\n            return '[В следующее] dddd [в] LT';\n\n          case 1:\n          case 2:\n          case 4:\n            return '[В следующий] dddd [в] LT';\n\n          case 3:\n          case 5:\n          case 6:\n            return '[В следующую] dddd [в] LT';\n        }\n      } else {\n        if (getDayOfWeek(date) === 2) {\n          return '[Во] dddd [в] LT';\n        } else {\n          return '[В] dddd [в] LT';\n        }\n      }\n    },\n\n    /**\n     * @param {?} date\n     * @param {?} now\n     * @return {?}\n     */\n    lastWeek(date, now) {\n      if (getWeek(now) !== getWeek(date)) {\n        switch (getDayOfWeek(date)) {\n          case 0:\n            return '[В прошлое] dddd [в] LT';\n\n          case 1:\n          case 2:\n          case 4:\n            return '[В прошлый] dddd [в] LT';\n\n          case 3:\n          case 5:\n          case 6:\n            return '[В прошлую] dddd [в] LT';\n        }\n      } else {\n        if (getDayOfWeek(date) === 2) {\n          return '[Во] dddd [в] LT';\n        } else {\n          return '[В] dddd [в] LT';\n        }\n      }\n    },\n\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: 'через %s',\n    past: '%s назад',\n    s: 'несколько секунд',\n    ss: relativeTimeWithPlural$1,\n    m: relativeTimeWithPlural$1,\n    mm: relativeTimeWithPlural$1,\n    h: 'час',\n    hh: relativeTimeWithPlural$1,\n    d: 'день',\n    dd: relativeTimeWithPlural$1,\n    M: 'месяц',\n    MM: relativeTimeWithPlural$1,\n    y: 'год',\n    yy: relativeTimeWithPlural$1\n  },\n  meridiemParse: /ночи|утра|дня|вечера/i,\n\n  /**\n   * @param {?} input\n   * @return {?}\n   */\n  isPM(input) {\n    return /^(дня|вечера)$/.test(input);\n  },\n\n  /**\n   * @param {?} hour\n   * @param {?} minute\n   * @param {?} isLower\n   * @return {?}\n   */\n  meridiem(hour, minute, isLower) {\n    if (hour < 4) {\n      return 'ночи';\n    } else if (hour < 12) {\n      return 'утра';\n    } else if (hour < 17) {\n      return 'дня';\n    } else {\n      return 'вечера';\n    }\n  },\n\n  dayOfMonthOrdinalParse: /\\d{1,2}-(й|го|я)/,\n\n  /**\n   * @param {?} _num\n   * @param {?} period\n   * @return {?}\n   */\n  ordinal(_num, period) {\n    /** @type {?} */\n    const num = Number(_num);\n\n    switch (period) {\n      case 'M':\n      case 'd':\n      case 'DDD':\n        return num + '-й';\n\n      case 'D':\n        return num + '-го';\n\n      case 'w':\n      case 'W':\n        return num + '-я';\n\n      default:\n        return num.toString(10);\n    }\n  },\n\n  week: {\n    dow: 1,\n    // Monday is the first day of the week.\n    doy: 4 // The week that contains Jan 4th is the first week of the year.\n\n  }\n};\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n//! moment.js locale configuration\n//! locale : Slovak [sk]\n//! author : Jozef Pažin : https://github.com/atiris\n\n/** @type {?} */\n\nconst months$2 = 'január_február_marec_apríl_máj_jún_júl_august_september_október_november_december'.split('_');\n/** @type {?} */\n\nconst monthsShort$6 = 'jan_feb_mar_apr_máj_jún_júl_aug_sep_okt_nov_dec'.split('_');\n/**\n * @param {?} num\n * @return {?}\n */\n\nfunction plural$3(num) {\n  return num > 1 && num < 5 && ~~(num / 10) !== 1;\n}\n/**\n * @param {?} num\n * @param {?} withoutSuffix\n * @param {?} key\n * @param {?} isFuture\n * @return {?}\n */\n\n\nfunction translate$6(num, withoutSuffix, key, isFuture) {\n  /** @type {?} */\n  const result = num + ' ';\n\n  switch (key) {\n    case 's':\n      // a few seconds / in a few seconds / a few seconds ago\n      return withoutSuffix || isFuture ? 'pár sekúnd' : 'pár sekundami';\n\n    case 'ss':\n      // 9 seconds / in 9 seconds / 9 seconds ago\n      if (withoutSuffix || isFuture) {\n        return result + (plural$3(num) ? 'sekundy' : 'sekúnd');\n      } else {\n        return result + 'sekundami';\n      }\n\n    // break;\n\n    case 'm':\n      // a minute / in a minute / a minute ago\n      return withoutSuffix ? 'minúta' : isFuture ? 'minútu' : 'minútou';\n\n    case 'mm':\n      // 9 minutes / in 9 minutes / 9 minutes ago\n      if (withoutSuffix || isFuture) {\n        return result + (plural$3(num) ? 'minúty' : 'minút');\n      } else {\n        return result + 'minútami';\n      }\n\n    // break;\n\n    case 'h':\n      // an hour / in an hour / an hour ago\n      return withoutSuffix ? 'hodina' : isFuture ? 'hodinu' : 'hodinou';\n\n    case 'hh':\n      // 9 hours / in 9 hours / 9 hours ago\n      if (withoutSuffix || isFuture) {\n        return result + (plural$3(num) ? 'hodiny' : 'hodín');\n      } else {\n        return result + 'hodinami';\n      }\n\n    // break;\n\n    case 'd':\n      // a day / in a day / a day ago\n      return withoutSuffix || isFuture ? 'deň' : 'dňom';\n\n    case 'dd':\n      // 9 days / in 9 days / 9 days ago\n      if (withoutSuffix || isFuture) {\n        return result + (plural$3(num) ? 'dni' : 'dní');\n      } else {\n        return result + 'dňami';\n      }\n\n    // break;\n\n    case 'M':\n      // a month / in a month / a month ago\n      return withoutSuffix || isFuture ? 'mesiac' : 'mesiacom';\n\n    case 'MM':\n      // 9 months / in 9 months / 9 months ago\n      if (withoutSuffix || isFuture) {\n        return result + (plural$3(num) ? 'mesiace' : 'mesiacov');\n      } else {\n        return result + 'mesiacmi';\n      }\n\n    // break;\n\n    case 'y':\n      // a year / in a year / a year ago\n      return withoutSuffix || isFuture ? 'rok' : 'rokom';\n\n    case 'yy':\n      // 9 years / in 9 years / 9 years ago\n      if (withoutSuffix || isFuture) {\n        return result + (plural$3(num) ? 'roky' : 'rokov');\n      } else {\n        return result + 'rokmi';\n      }\n\n    // break;\n  }\n}\n/** @type {?} */\n\n\nconst skLocale = {\n  abbr: 'sk',\n  months: months$2,\n  monthsShort: monthsShort$6,\n  weekdays: 'nedeľa_pondelok_utorok_streda_štvrtok_piatok_sobota'.split('_'),\n  weekdaysShort: 'ne_po_ut_st_št_pi_so'.split('_'),\n  weekdaysMin: 'ne_po_ut_st_št_pi_so'.split('_'),\n  longDateFormat: {\n    LT: 'H:mm',\n    LTS: 'H:mm:ss',\n    L: 'DD.MM.YYYY',\n    LL: 'D. MMMM YYYY',\n    LLL: 'D. MMMM YYYY H:mm',\n    LLLL: 'dddd D. MMMM YYYY H:mm',\n    l: 'D. M. YYYY'\n  },\n  calendar: {\n    sameDay: '[dnes o] LT',\n    nextDay: '[zajtra o] LT',\n\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    nextWeek(date) {\n      switch (getDayOfWeek(date)) {\n        case 0:\n          return '[v nedeľu o] LT';\n\n        case 1:\n        case 2:\n          return '[v] dddd [o] LT';\n\n        case 3:\n          return '[v stredu o] LT';\n\n        case 4:\n          return '[vo štvrtok o] LT';\n\n        case 5:\n          return '[v piatok o] LT';\n\n        case 6:\n          return '[v sobotu o] LT';\n      }\n    },\n\n    lastDay: '[včera o] LT',\n\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    lastWeek(date) {\n      switch (getDayOfWeek(date)) {\n        case 0:\n          return '[minulú nedeľu o] LT';\n\n        case 1:\n        case 2:\n          return '[minulý] dddd [o] LT';\n\n        case 3:\n          return '[minulú stredu o] LT';\n\n        case 4:\n        case 5:\n          return '[minulý] dddd [o] LT';\n\n        case 6:\n          return '[minulú sobotu o] LT';\n      }\n    },\n\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: 'o %s',\n    past: 'pred %s',\n    s: translate$6,\n    ss: translate$6,\n    m: translate$6,\n    mm: translate$6,\n    h: translate$6,\n    hh: translate$6,\n    d: translate$6,\n    dd: translate$6,\n    M: translate$6,\n    MM: translate$6,\n    y: translate$6,\n    yy: translate$6\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n  ordinal: '%d.',\n  week: {\n    dow: 1,\n    // Monday is the first day of the week.\n    doy: 4 // The week that contains Jan 4th is the first week of the year.\n\n  }\n};\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n//! moment.js locale configuration\n//! locale : Slovenian [sl]\n//! author : mihan : https://github.com/mihan\n\n/**\n * @param {?} number\n * @param {?} withoutSuffix\n * @param {?} key\n * @param {?} isFuture\n * @return {?}\n */\n\nfunction processRelativeTime$2(number, withoutSuffix, key, isFuture) {\n  /** @type {?} */\n  var result = number + ' ';\n\n  switch (key) {\n    case 's':\n      return withoutSuffix || isFuture ? 'nekaj sekund' : 'nekaj sekundami';\n\n    case 'ss':\n      if (number === 1) {\n        result += withoutSuffix ? 'sekundo' : 'sekundi';\n      } else if (number === 2) {\n        result += withoutSuffix || isFuture ? 'sekundi' : 'sekundah';\n      } else if (number < 5) {\n        result += withoutSuffix || isFuture ? 'sekunde' : 'sekundah';\n      } else {\n        result += withoutSuffix || isFuture ? 'sekund' : 'sekund';\n      }\n\n      return result;\n\n    case 'm':\n      return withoutSuffix ? 'ena minuta' : 'eno minuto';\n\n    case 'mm':\n      if (number === 1) {\n        result += withoutSuffix ? 'minuta' : 'minuto';\n      } else if (number === 2) {\n        result += withoutSuffix || isFuture ? 'minuti' : 'minutama';\n      } else if (number < 5) {\n        result += withoutSuffix || isFuture ? 'minute' : 'minutami';\n      } else {\n        result += withoutSuffix || isFuture ? 'minut' : 'minutami';\n      }\n\n      return result;\n\n    case 'h':\n      return withoutSuffix ? 'ena ura' : 'eno uro';\n\n    case 'hh':\n      if (number === 1) {\n        result += withoutSuffix ? 'ura' : 'uro';\n      } else if (number === 2) {\n        result += withoutSuffix || isFuture ? 'uri' : 'urama';\n      } else if (number < 5) {\n        result += withoutSuffix || isFuture ? 'ure' : 'urami';\n      } else {\n        result += withoutSuffix || isFuture ? 'ur' : 'urami';\n      }\n\n      return result;\n\n    case 'd':\n      return withoutSuffix || isFuture ? 'en dan' : 'enim dnem';\n\n    case 'dd':\n      if (number === 1) {\n        result += withoutSuffix || isFuture ? 'dan' : 'dnem';\n      } else if (number === 2) {\n        result += withoutSuffix || isFuture ? 'dni' : 'dnevoma';\n      } else {\n        result += withoutSuffix || isFuture ? 'dni' : 'dnevi';\n      }\n\n      return result;\n\n    case 'M':\n      return withoutSuffix || isFuture ? 'en mesec' : 'enim mesecem';\n\n    case 'MM':\n      if (number === 1) {\n        result += withoutSuffix || isFuture ? 'mesec' : 'mesecem';\n      } else if (number === 2) {\n        result += withoutSuffix || isFuture ? 'meseca' : 'mesecema';\n      } else if (number < 5) {\n        result += withoutSuffix || isFuture ? 'mesece' : 'meseci';\n      } else {\n        result += withoutSuffix || isFuture ? 'mesecev' : 'meseci';\n      }\n\n      return result;\n\n    case 'y':\n      return withoutSuffix || isFuture ? 'eno leto' : 'enim letom';\n\n    case 'yy':\n      if (number === 1) {\n        result += withoutSuffix || isFuture ? 'leto' : 'letom';\n      } else if (number === 2) {\n        result += withoutSuffix || isFuture ? 'leti' : 'letoma';\n      } else if (number < 5) {\n        result += withoutSuffix || isFuture ? 'leta' : 'leti';\n      } else {\n        result += withoutSuffix || isFuture ? 'let' : 'leti';\n      }\n\n      return result;\n  }\n}\n/** @type {?} */\n\n\nconst slLocale = {\n  abbr: 'sl',\n  months: 'januar_februar_marec_april_maj_junij_julij_avgust_september_oktober_november_december'.split('_'),\n  monthsShort: 'jan._feb._mar._apr._maj._jun._jul._avg._sep._okt._nov._dec.'.split('_'),\n  monthsParseExact: true,\n  weekdays: 'nedelja_ponedeljek_torek_sreda_četrtek_petek_sobota'.split('_'),\n  weekdaysShort: 'ned._pon._tor._sre._čet._pet._sob.'.split('_'),\n  weekdaysMin: 'ne_po_to_sr_če_pe_so'.split('_'),\n  weekdaysParseExact: true,\n  longDateFormat: {\n    LT: 'H:mm',\n    LTS: 'H:mm:ss',\n    L: 'DD.MM.YYYY',\n    LL: 'D. MMMM YYYY',\n    LLL: 'D. MMMM YYYY H:mm',\n    LLLL: 'dddd, D. MMMM YYYY H:mm'\n  },\n  calendar: {\n    sameDay: '[danes ob] LT',\n    nextDay: '[jutri ob] LT',\n\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    nextWeek(date) {\n      switch (getDayOfWeek(date)) {\n        case 0:\n          return '[v] [nedeljo] [ob] LT';\n\n        case 3:\n          return '[v] [sredo] [ob] LT';\n\n        case 6:\n          return '[v] [soboto] [ob] LT';\n\n        case 1:\n        case 2:\n        case 4:\n        case 5:\n          return '[v] dddd [ob] LT';\n      }\n    },\n\n    lastDay: '[včeraj ob] LT',\n\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    lastWeek(date) {\n      switch (getDayOfWeek(date)) {\n        case 0:\n          return '[prejšnjo] [nedeljo] [ob] LT';\n\n        case 3:\n          return '[prejšnjo] [sredo] [ob] LT';\n\n        case 6:\n          return '[prejšnjo] [soboto] [ob] LT';\n\n        case 1:\n        case 2:\n        case 4:\n        case 5:\n          return '[prejšnji] dddd [ob] LT';\n      }\n    },\n\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: 'čez %s',\n    past: 'pred %s',\n    s: processRelativeTime$2,\n    ss: processRelativeTime$2,\n    m: processRelativeTime$2,\n    mm: processRelativeTime$2,\n    h: processRelativeTime$2,\n    hh: processRelativeTime$2,\n    d: processRelativeTime$2,\n    dd: processRelativeTime$2,\n    M: processRelativeTime$2,\n    MM: processRelativeTime$2,\n    y: processRelativeTime$2,\n    yy: processRelativeTime$2\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n  ordinal: '%d.',\n  week: {\n    dow: 1,\n    // Monday is the first day of the week.\n    doy: 7 // The week that contains Jan 1st is the first week of the year.\n\n  }\n};\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// tslint:disable:comment-format binary-expression-operand-order max-line-length\n// tslint:disable:no-bitwise prefer-template cyclomatic-complexity\n// tslint:disable:no-shadowed-variable switch-default prefer-const\n// tslint:disable:one-variable-per-declaration newline-before-return\n//! moment.js locale configuration\n//! locale : Albanian [sq]\n//! author : Agon Cecelia : https://github.com/agoncecelia\n\n/** @type {?} */\n\nconst sqLocale = {\n  abbr: 'sq',\n  months: 'Janar_Shkurt_Mars_Prill_Maj_Qershor_Korrik_Gusht_Shtator_Tetor_Nëntor_Dhjetor'.split('_'),\n  monthsShort: 'Jan_Shk_Mar_Pri_Maj_Qer_Kor_Gus_Sht_Tet_Nën_Dhj'.split('_'),\n  weekdays: 'E Dielë_E Hënë_E Martë_E Mërkurë_E Enjte_E Premte_E Shtunë'.split('_'),\n  weekdaysShort: 'Die_Hën_Mar_Mër_Enj_Pre_Sht'.split('_'),\n  weekdaysMin: 'Di_He_Ma_Me_En_Pr_Sh'.split('_'),\n  longDateFormat: {\n    LT: 'HH:mm',\n    LTS: 'HH:mm:ss',\n    L: 'DD/MM/YYYY',\n    LL: 'D MMMM YYYY',\n    LLL: 'D MMMM YYYY HH:mm',\n    LLLL: 'dddd, D MMMM YYYY HH:mm'\n  },\n  calendar: {\n    sameDay: '[Sot në] LT',\n    nextDay: '[Nesër në] LT',\n    nextWeek: 'dddd [në] LT',\n    lastDay: '[Dje në] LT',\n    lastWeek: 'dddd [e kaluar në] LT',\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: 'në %s',\n    past: 'para %sve',\n    s: 'disa sekonda',\n    ss: '%d sekonda',\n    m: 'një minut',\n    mm: '%d minuta',\n    h: 'një orë',\n    hh: '%d orë',\n    d: 'një ditë',\n    dd: '%d ditë',\n    M: 'një muaj',\n    MM: '%d muaj',\n    y: 'një vit',\n    yy: '%d vite'\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n  // need clarification\n  ordinal: '%d.',\n  // need clarification\n  week: {\n    dow: 1,\n    // Monday is the first day of the week.\n    doy: 4 // The week that contains Jan 4th is the first week of the year.\n\n  }\n};\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// tslint:disable:comment-format binary-expression-operand-order max-line-length\n// tslint:disable:no-bitwise prefer-template cyclomatic-complexity\n// tslint:disable:no-shadowed-variable switch-default prefer-const\n// tslint:disable:one-variable-per-declaration newline-before-return\n//! moment.js locale configuration\n//! locale : Swedish [sv]\n//! author : Jens Alm : https://github.com/ulmus\n\n/** @type {?} */\n\nconst svLocale = {\n  abbr: 'sv',\n  months: 'januari_februari_mars_april_maj_juni_juli_augusti_september_oktober_november_december'.split('_'),\n  monthsShort: 'jan_feb_mar_apr_maj_jun_jul_aug_sep_okt_nov_dec'.split('_'),\n  weekdays: 'söndag_måndag_tisdag_onsdag_torsdag_fredag_lördag'.split('_'),\n  weekdaysShort: 'sön_mån_tis_ons_tor_fre_lör'.split('_'),\n  weekdaysMin: 'sö_må_ti_on_to_fr_lö'.split('_'),\n  longDateFormat: {\n    LT: 'HH:mm',\n    LTS: 'HH:mm:ss',\n    L: 'YYYY-MM-DD',\n    LL: 'D MMMM YYYY',\n    LLL: 'D MMMM YYYY [kl.] HH:mm',\n    LLLL: 'dddd D MMMM YYYY [kl.] HH:mm',\n    lll: 'D MMM YYYY HH:mm',\n    llll: 'ddd D MMM YYYY HH:mm'\n  },\n  calendar: {\n    sameDay: '[Idag] LT',\n    nextDay: '[Imorgon] LT',\n    lastDay: '[Igår] LT',\n    nextWeek: '[På] dddd LT',\n    lastWeek: '[I] dddd[s] LT',\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: 'om %s',\n    past: 'för %s sedan',\n    s: 'några sekunder',\n    ss: '%d sekunder',\n    m: 'en minut',\n    mm: '%d minuter',\n    h: 'en timme',\n    hh: '%d timmar',\n    d: 'en dag',\n    dd: '%d dagar',\n    M: 'en månad',\n    MM: '%d månader',\n    y: 'ett år',\n    yy: '%d år'\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}(e|a)/,\n\n  /**\n   * @param {?} _num\n   * @return {?}\n   */\n  ordinal(_num) {\n    /** @type {?} */\n    const num = Number(_num);\n    /** @type {?} */\n\n    let b = num % 10;\n    /** @type {?} */\n\n    let output = ~~(num % 100 / 10) === 1 ? 'e' : b === 1 ? 'a' : b === 2 ? 'a' : b === 3 ? 'e' : 'e';\n    return num + output;\n  },\n\n  week: {\n    dow: 1,\n    // Monday is the first day of the week.\n    doy: 4 // The week that contains Jan 4th is the first week of the year.\n\n  }\n};\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// tslint:disable:comment-format binary-expression-operand-order max-line-length\n// tslint:disable:no-bitwise prefer-template cyclomatic-complexity\n// tslint:disable:no-shadowed-variable switch-default prefer-const\n// tslint:disable:one-variable-per-declaration newline-before-return\n// moment.js locale configuration\n// locale : Thai [th]\n// author : Watcharapol Sanitwong : https://github.com/tumit\n\n/** @type {?} */\n\nconst thLocale = {\n  abbr: 'th',\n  months: 'มกราคม_กุมภาพันธ์_มีนาคม_เมษายน_พฤษภาคม_มิถุนายน_กรกฎาคม_สิงหาคม_กันยายน_ตุลาคม_พฤศจิกายน_ธันวาคม'.split('_'),\n  monthsShort: 'ม.ค._ก.พ._มี.ค._เม.ย._พ.ค._มิ.ย._ก.ค._ส.ค._ก.ย._ต.ค._พ.ย._ธ.ค.'.split('_'),\n  monthsParseExact: true,\n  weekdays: 'อาทิตย์_จันทร์_อังคาร_พุธ_พฤหัสบดี_ศุกร์_เสาร์'.split('_'),\n  weekdaysShort: 'อา._จ._อ._พ._พฤ._ศ._ส.'.split('_'),\n  // yes, three characters difference\n  weekdaysMin: 'อา._จ._อ._พ._พฤ._ศ._ส.'.split('_'),\n  weekdaysParseExact: true,\n  longDateFormat: {\n    LT: 'H:mm',\n    LTS: 'H:mm:ss',\n    L: 'DD/MM/YYYY',\n    LL: 'D MMMM YYYY',\n    LLL: 'D MMMM YYYY เวลา H:mm',\n    LLLL: 'วันddddที่ D MMMM YYYY เวลา H:mm'\n  },\n  meridiemParse: /ก่อนเที่ยง|หลังเที่ยง/,\n\n  /**\n   * @param {?} input\n   * @return {?}\n   */\n  isPM(input) {\n    return input === 'หลังเที่ยง';\n  },\n\n  /**\n   * @param {?} hour\n   * @param {?} minute\n   * @param {?} isLower\n   * @return {?}\n   */\n  meridiem(hour, minute, isLower) {\n    if (hour < 12) {\n      return 'ก่อนเที่ยง';\n    } else {\n      return 'หลังเที่ยง';\n    }\n  },\n\n  calendar: {\n    sameDay: '[วันนี้ เวลา] LT',\n    nextDay: '[พรุ่งนี้ เวลา] LT',\n    nextWeek: 'dddd[หน้า เวลา] LT',\n    lastDay: '[เมื่อวานนี้ เวลา] LT',\n    lastWeek: '[วัน]dddd[ที่แล้ว เวลา] LT',\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: 'อีก %s',\n    past: '%sที่แล้ว',\n    s: 'ไม่กี่วินาที',\n    ss: '%d วินาที',\n    m: '1 นาที',\n    mm: '%d นาที',\n    h: '1 ชั่วโมง',\n    hh: '%d ชั่วโมง',\n    d: '1 วัน',\n    dd: '%d วัน',\n    M: '1 เดือน',\n    MM: '%d เดือน',\n    y: '1 ปี',\n    yy: '%d ปี'\n  }\n};\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// tslint:disable:comment-format binary-expression-operand-order max-line-length\n// tslint:disable:no-bitwise prefer-template cyclomatic-complexity\n// tslint:disable:no-shadowed-variable switch-default prefer-const\n// tslint:disable:one-variable-per-declaration newline-before-return\n// moment.js locale configuration\n// locale : Thai-Buddhist Era [th-be]\n// author : Watcharapol Sanitwong : https://github.com/tumit\n\n/** @type {?} */\n\nconst thBeLocale = {\n  abbr: 'th-be',\n  months: 'มกราคม_กุมภาพันธ์_มีนาคม_เมษายน_พฤษภาคม_มิถุนายน_กรกฎาคม_สิงหาคม_กันยายน_ตุลาคม_พฤศจิกายน_ธันวาคม'.split('_'),\n  monthsShort: 'ม.ค._ก.พ._มี.ค._เม.ย._พ.ค._มิ.ย._ก.ค._ส.ค._ก.ย._ต.ค._พ.ย._ธ.ค.'.split('_'),\n  monthsParseExact: true,\n  weekdays: 'อาทิตย์_จันทร์_อังคาร_พุธ_พฤหัสบดี_ศุกร์_เสาร์'.split('_'),\n  weekdaysShort: 'อา._จ._อ._พ._พฤ._ศ._ส.'.split('_'),\n  weekdaysMin: 'อา._จ._อ._พ._พฤ._ศ._ส.'.split('_'),\n  weekdaysParseExact: true,\n  longDateFormat: {\n    LT: 'H:mm',\n    LTS: 'H:mm:ss',\n    L: 'DD/MM/YYYY',\n    LL: 'D MMMM YYYY',\n    LLL: 'D MMMM YYYY เวลา H:mm',\n    LLLL: 'วันddddที่ D MMMM YYYY เวลา H:mm'\n  },\n  meridiemParse: /ก่อนเที่ยง|หลังเที่ยง/,\n\n  /**\n   * @param {?} input\n   * @return {?}\n   */\n  isPM(input) {\n    return input === 'หลังเที่ยง';\n  },\n\n  /**\n   * @param {?} hour\n   * @param {?} minute\n   * @param {?} isLower\n   * @return {?}\n   */\n  meridiem(hour, minute, isLower) {\n    if (hour < 12) {\n      return 'ก่อนเที่ยง';\n    } else {\n      return 'หลังเที่ยง';\n    }\n  },\n\n  calendar: {\n    sameDay: '[วันนี้ เวลา] LT',\n    nextDay: '[พรุ่งนี้ เวลา] LT',\n    nextWeek: 'dddd[หน้า เวลา] LT',\n    lastDay: '[เมื่อวานนี้ เวลา] LT',\n    lastWeek: '[วัน]dddd[ที่แล้ว เวลา] LT',\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: 'อีก %s',\n    past: '%sที่แล้ว',\n    s: 'ไม่กี่วินาที',\n    ss: '%d วินาที',\n    m: '1 นาที',\n    mm: '%d นาที',\n    h: '1 ชั่วโมง',\n    hh: '%d ชั่วโมง',\n    d: '1 วัน',\n    dd: '%d วัน',\n    M: '1 เดือน',\n    MM: '%d เดือน',\n    y: '1 ปี',\n    yy: '%d ปี'\n  },\n\n  /**\n   * @param {?} str\n   * @param {?=} format\n   * @return {?}\n   */\n  preparse(str, format) {\n    /** @type {?} */\n    const _format = thBeLocale.longDateFormat[format] ? thBeLocale.longDateFormat[format] : format; // endsWith('YYYY')\n\n\n    if (_format.indexOf('YYYY', _format.length - 'YYYY'.length) !== -1) {\n      /** @type {?} */\n      const ddMM = str.substr(0, str.length - 4);\n      /** @type {?} */\n\n      const yyyy = parseInt(str.substr(str.length - 4), 10) - 543;\n      return ddMM + yyyy;\n    }\n\n    return str;\n  },\n\n  /**\n   * @param {?} date\n   * @param {?=} isUTC\n   * @return {?}\n   */\n  getFullYear(date, isUTC = false) {\n    return 543 + (isUTC ? date.getUTCFullYear() : date.getFullYear());\n  }\n\n};\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// tslint:disable:comment-format binary-expression-operand-order max-line-length\n// tslint:disable:no-bitwise prefer-template cyclomatic-complexity\n// tslint:disable:no-shadowed-variable switch-default prefer-const\n// tslint:disable:one-variable-per-declaration newline-before-return\n//! moment.js locale configuration\n//! locale : Turkish [tr]\n//! authors : Erhan Gundogan : https://github.com/erhangundogan,\n//!           Burak Yiğit Kaya: https://github.com/BYK\n\n/** @type {?} */\n\nlet suffixes$1 = {\n  1: '\\'inci',\n  5: '\\'inci',\n  8: '\\'inci',\n  70: '\\'inci',\n  80: '\\'inci',\n  2: '\\'nci',\n  7: '\\'nci',\n  20: '\\'nci',\n  50: '\\'nci',\n  3: '\\'üncü',\n  4: '\\'üncü',\n  100: '\\'üncü',\n  6: '\\'ncı',\n  9: '\\'uncu',\n  10: '\\'uncu',\n  30: '\\'uncu',\n  60: '\\'ıncı',\n  90: '\\'ıncı'\n};\n/** @type {?} */\n\nconst trLocale = {\n  abbr: 'tr',\n  months: 'Ocak_Şubat_Mart_Nisan_Mayıs_Haziran_Temmuz_Ağustos_Eylül_Ekim_Kasım_Aralık'.split('_'),\n  monthsShort: 'Oca_Şub_Mar_Nis_May_Haz_Tem_Ağu_Eyl_Eki_Kas_Ara'.split('_'),\n  weekdays: 'Pazar_Pazartesi_Salı_Çarşamba_Perşembe_Cuma_Cumartesi'.split('_'),\n  weekdaysShort: 'Paz_Pts_Sal_Çar_Per_Cum_Cts'.split('_'),\n  weekdaysMin: 'Pz_Pt_Sa_Ça_Pe_Cu_Ct'.split('_'),\n  longDateFormat: {\n    LT: 'HH:mm',\n    LTS: 'HH:mm:ss',\n    L: 'DD.MM.YYYY',\n    LL: 'D MMMM YYYY',\n    LLL: 'D MMMM YYYY HH:mm',\n    LLLL: 'dddd, D MMMM YYYY HH:mm'\n  },\n  calendar: {\n    sameDay: '[bugün saat] LT',\n    nextDay: '[yarın saat] LT',\n    nextWeek: '[gelecek] dddd [saat] LT',\n    lastDay: '[dün] LT',\n    lastWeek: '[geçen] dddd [saat] LT',\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: '%s sonra',\n    past: '%s önce',\n    s: 'birkaç saniye',\n    ss: '%d saniye',\n    m: 'bir dakika',\n    mm: '%d dakika',\n    h: 'bir saat',\n    hh: '%d saat',\n    d: 'bir gün',\n    dd: '%d gün',\n    M: 'bir ay',\n    MM: '%d ay',\n    y: 'bir yıl',\n    yy: '%d yıl'\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}'(inci|nci|üncü|ncı|uncu|ıncı)/,\n\n  /**\n   * @param {?} _num\n   * @return {?}\n   */\n  ordinal(_num) {\n    /** @type {?} */\n    const num = Number(_num);\n\n    if (num === 0) {\n      // special case for zero\n      return num + '\\'ıncı';\n    }\n    /** @type {?} */\n\n\n    let a = num % 10;\n    /** @type {?} */\n\n    let b = num % 100 - a;\n    /** @type {?} */\n\n    let c = num >= 100 ? 100 : null;\n    return num + (suffixes$1[a] || suffixes$1[b] || suffixes$1[c]);\n  },\n\n  week: {\n    dow: 1,\n    // Monday is the first day of the week.\n    doy: 7 // The week that contains Jan 1st is the first week of the year.\n\n  }\n};\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n//! moment.js locale configuration\n//! locale : Ukrainian [uk]\n//! author : zemlanin : https://github.com/zemlanin\n//! Author : Menelion Elensúle : https://github.com/Oire\n\n/**\n * @param {?} word\n * @param {?} num\n * @return {?}\n */\n\nfunction plural$4(word, num) {\n  /** @type {?} */\n  let forms = word.split('_');\n  return num % 10 === 1 && num % 100 !== 11 ? forms[0] : num % 10 >= 2 && num % 10 <= 4 && (num % 100 < 10 || num % 100 >= 20) ? forms[1] : forms[2];\n}\n/**\n * @param {?} num\n * @param {?} withoutSuffix\n * @param {?} key\n * @return {?}\n */\n\n\nfunction relativeTimeWithPlural$2(num, withoutSuffix, key) {\n  /** @type {?} */\n  let format = {\n    ss: withoutSuffix ? 'секунда_секунди_секунд' : 'секунду_секунди_секунд',\n    mm: withoutSuffix ? 'хвилина_хвилини_хвилин' : 'хвилину_хвилини_хвилин',\n    hh: withoutSuffix ? 'година_години_годин' : 'годину_години_годин',\n    dd: 'день_дні_днів',\n    MM: 'місяць_місяці_місяців',\n    yy: 'рік_роки_років'\n  };\n\n  if (key === 'm') {\n    return withoutSuffix ? 'хвилина' : 'хвилину';\n  }\n\n  if (key === 'h') {\n    return withoutSuffix ? 'година' : 'годину';\n  }\n\n  return num + ' ' + plural$4(format[key], +num);\n}\n/**\n * @param {?} date\n * @param {?} format\n * @param {?=} isUTC\n * @return {?}\n */\n\n\nfunction weekdaysCaseReplace(date, format, isUTC) {\n  /** @type {?} */\n  let weekdays = {\n    nominative: 'неділя_понеділок_вівторок_середа_четвер_п’ятниця_субота'.split('_'),\n    accusative: 'неділю_понеділок_вівторок_середу_четвер_п’ятницю_суботу'.split('_'),\n    genitive: 'неділі_понеділка_вівторка_середи_четверга_п’ятниці_суботи'.split('_')\n  };\n\n  if (!date) {\n    return weekdays.nominative;\n  }\n  /** @type {?} */\n\n\n  let nounCase = /(\\[[ВвУу]\\]) ?dddd/.test(format) ? 'accusative' : /\\[?(?:минулої|наступної)? ?\\] ?dddd/.test(format) ? 'genitive' : 'nominative';\n  return weekdays[nounCase][getDayOfWeek(date, isUTC)];\n}\n/**\n * @param {?} str\n * @return {?}\n */\n\n\nfunction processHoursFunction(str) {\n  return (\n    /**\n    * @param {?} date\n    * @return {?}\n    */\n    function (date) {\n      return str + 'о' + (getHours(date) === 11 ? 'б' : '') + '] LT';\n    }\n  );\n}\n/** @type {?} */\n\n\nconst ukLocale = {\n  abbr: 'uk',\n  months: {\n    format: 'січня_лютого_березня_квітня_травня_червня_липня_серпня_вересня_жовтня_листопада_грудня'.split('_'),\n    standalone: 'січень_лютий_березень_квітень_травень_червень_липень_серпень_вересень_жовтень_листопад_грудень'.split('_')\n  },\n  monthsShort: 'січ_лют_бер_квіт_трав_черв_лип_серп_вер_жовт_лист_груд'.split('_'),\n  weekdays: weekdaysCaseReplace,\n  weekdaysShort: 'нд_пн_вт_ср_чт_пт_сб'.split('_'),\n  weekdaysMin: 'нд_пн_вт_ср_чт_пт_сб'.split('_'),\n  longDateFormat: {\n    LT: 'HH:mm',\n    LTS: 'HH:mm:ss',\n    L: 'DD.MM.YYYY',\n    LL: 'D MMMM YYYY р.',\n    LLL: 'D MMMM YYYY р., HH:mm',\n    LLLL: 'dddd, D MMMM YYYY р., HH:mm'\n  },\n  calendar: {\n    sameDay: processHoursFunction('[Сьогодні '),\n    nextDay: processHoursFunction('[Завтра '),\n    lastDay: processHoursFunction('[Вчора '),\n    nextWeek: processHoursFunction('[У] dddd ['),\n\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    lastWeek(date) {\n      switch (getDayOfWeek(date)) {\n        case 0:\n        case 3:\n        case 5:\n        case 6:\n          return processHoursFunction('[Минулої] dddd [')(date);\n\n        case 1:\n        case 2:\n        case 4:\n          return processHoursFunction('[Минулого] dddd [')(date);\n      }\n    },\n\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: 'за %s',\n    past: '%s тому',\n    s: 'декілька секунд',\n    ss: relativeTimeWithPlural$2,\n    m: relativeTimeWithPlural$2,\n    mm: relativeTimeWithPlural$2,\n    h: 'годину',\n    hh: relativeTimeWithPlural$2,\n    d: 'день',\n    dd: relativeTimeWithPlural$2,\n    M: 'місяць',\n    MM: relativeTimeWithPlural$2,\n    y: 'рік',\n    yy: relativeTimeWithPlural$2\n  },\n  // M. E.: those two are virtually unused but a user might want to implement them for his/her website for some reason\n  meridiemParse: /ночі|ранку|дня|вечора/,\n\n  /**\n   * @param {?} input\n   * @return {?}\n   */\n  isPM(input) {\n    return /^(дня|вечора)$/.test(input);\n  },\n\n  /**\n   * @param {?} hour\n   * @param {?} minute\n   * @param {?} isLower\n   * @return {?}\n   */\n  meridiem(hour, minute, isLower) {\n    if (hour < 4) {\n      return 'ночі';\n    } else if (hour < 12) {\n      return 'ранку';\n    } else if (hour < 17) {\n      return 'дня';\n    } else {\n      return 'вечора';\n    }\n  },\n\n  dayOfMonthOrdinalParse: /\\d{1,2}-(й|го)/,\n\n  /**\n   * @param {?} _num\n   * @param {?} period\n   * @return {?}\n   */\n  ordinal(_num, period) {\n    /** @type {?} */\n    const num = Number(_num);\n\n    switch (period) {\n      case 'M':\n      case 'd':\n      case 'DDD':\n      case 'w':\n      case 'W':\n        return num + '-й';\n\n      case 'D':\n        return num + '-го';\n\n      default:\n        return num.toString();\n    }\n  },\n\n  week: {\n    dow: 1,\n    // Monday is the first day of the week.\n    doy: 7 // The week that contains Jan 1st is the first week of the year.\n\n  }\n};\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// tslint:disable:comment-format binary-expression-operand-order max-line-length\n// tslint:disable:no-bitwise prefer-template cyclomatic-complexity\n// tslint:disable:no-shadowed-variable switch-default prefer-const\n// tslint:disable:one-variable-per-declaration newline-before-return\n//! moment.js locale configuration\n//! locale : Việt Nam [vi]\n//! author : Chris Gedrim : https://github.com/chrisgedrim\n\n/** @type {?} */\n\nconst viLocale = {\n  abbr: 'vi',\n  months: 'tháng 1_tháng 2_tháng 3_tháng 4_tháng 5_tháng 6_tháng 7_tháng 8_tháng 9_tháng 10_tháng 11_tháng 12'.split('_'),\n  monthsShort: 'Th01_Th02_Th03_Th04_Th05_Th06_Th07_Th08_Th09_Th10_Th11_Th12'.split('_'),\n  monthsParseExact: true,\n  weekdays: 'chủ nhật_thứ hai_thứ ba_thứ tư_thứ năm_thứ sáu_thứ bảy'.split('_'),\n  weekdaysShort: 'CN_T2_T3_T4_T5_T6_T7'.split('_'),\n  weekdaysMin: 'CN_T2_T3_T4_T5_T6_T7'.split('_'),\n  weekdaysParseExact: true,\n  meridiemParse: /sa|ch/i,\n\n  /**\n   * @param {?} input\n   * @return {?}\n   */\n  isPM(input) {\n    return /^ch$/i.test(input);\n  },\n\n  /**\n   * @param {?} hours\n   * @param {?} minutes\n   * @param {?} isLower\n   * @return {?}\n   */\n  meridiem(hours, minutes, isLower) {\n    if (hours < 12) {\n      return isLower ? 'sa' : 'SA';\n    } else {\n      return isLower ? 'ch' : 'CH';\n    }\n  },\n\n  longDateFormat: {\n    LT: 'HH:mm',\n    LTS: 'HH:mm:ss',\n    L: 'DD/MM/YYYY',\n    LL: 'D MMMM [năm] YYYY',\n    LLL: 'D MMMM [năm] YYYY HH:mm',\n    LLLL: 'dddd, D MMMM [năm] YYYY HH:mm',\n    l: 'DD/M/YYYY',\n    ll: 'D MMM YYYY',\n    lll: 'D MMM YYYY HH:mm',\n    llll: 'ddd, D MMM YYYY HH:mm'\n  },\n  calendar: {\n    sameDay: '[Hôm nay lúc] LT',\n    nextDay: '[Ngày mai lúc] LT',\n    nextWeek: 'dddd [tuần tới lúc] LT',\n    lastDay: '[Hôm qua lúc] LT',\n    lastWeek: 'dddd [tuần trước lúc] LT',\n    sameElse: 'L'\n  },\n  relativeTime: {\n    future: '%s tới',\n    past: '%s trước',\n    s: 'vài giây',\n    ss: '%d giây',\n    m: 'một phút',\n    mm: '%d phút',\n    h: 'một giờ',\n    hh: '%d giờ',\n    d: 'một ngày',\n    dd: '%d ngày',\n    M: 'một tháng',\n    MM: '%d tháng',\n    y: 'một năm',\n    yy: '%d năm'\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}/,\n\n  /**\n   * @param {?} _num\n   * @return {?}\n   */\n  ordinal(_num) {\n    return '' + _num;\n  },\n\n  week: {\n    dow: 1,\n    // Thứ Hai là ngày đầu tuần.\n    doy: 4 // Tuần chứa ngày 4 tháng 1 là tuần đầu tiên trong năm.\n\n  }\n};\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// tslint:disable:comment-format binary-expression-operand-order max-line-length\n// tslint:disable:no-bitwise prefer-template cyclomatic-complexity\n// tslint:disable:no-shadowed-variable switch-default prefer-const\n// tslint:disable:one-variable-per-declaration newline-before-return\n// tslint:disable:no-parameter-reassignment prefer-switch\n//! moment.js locale configuration\n//! locale : Chinese (China) [zh-cn]\n//! author : suupic : https://github.com/suupic\n//! author : Zeno Zeng : https://github.com/zenozeng\n\n/** @type {?} */\n\nconst zhCnLocale = {\n  abbr: 'zh-cn',\n  months: '一月_二月_三月_四月_五月_六月_七月_八月_九月_十月_十一月_十二月'.split('_'),\n  monthsShort: '1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月'.split('_'),\n  weekdays: '星期日_星期一_星期二_星期三_星期四_星期五_星期六'.split('_'),\n  weekdaysShort: '周日_周一_周二_周三_周四_周五_周六'.split('_'),\n  weekdaysMin: '日_一_二_三_四_五_六'.split('_'),\n  longDateFormat: {\n    LT: 'HH:mm',\n    LTS: 'HH:mm:ss',\n    L: 'YYYY/MM/DD',\n    LL: 'YYYY年M月D日',\n    LLL: 'YYYY年M月D日Ah点mm分',\n    LLLL: 'YYYY年M月D日ddddAh点mm分',\n    l: 'YYYY/M/D',\n    ll: 'YYYY年M月D日',\n    lll: 'YYYY年M月D日 HH:mm',\n    llll: 'YYYY年M月D日dddd HH:mm'\n  },\n  meridiemParse: /凌晨|早上|上午|中午|下午|晚上/,\n\n  /**\n   * @param {?} hour\n   * @param {?} meridiem\n   * @return {?}\n   */\n  meridiemHour(hour, meridiem) {\n    if (hour === 12) {\n      hour = 0;\n    }\n\n    if (meridiem === '凌晨' || meridiem === '早上' || meridiem === '上午') {\n      return hour;\n    } else if (meridiem === '下午' || meridiem === '晚上') {\n      return hour + 12;\n    } else {\n      // '中午'\n      return hour >= 11 ? hour : hour + 12;\n    }\n  },\n\n  /**\n   * @param {?} hour\n   * @param {?} minute\n   * @param {?} isLower\n   * @return {?}\n   */\n  meridiem(hour, minute, isLower) {\n    /** @type {?} */\n    let hm = hour * 100 + minute;\n\n    if (hm < 600) {\n      return '凌晨';\n    } else if (hm < 900) {\n      return '早上';\n    } else if (hm < 1130) {\n      return '上午';\n    } else if (hm < 1230) {\n      return '中午';\n    } else if (hm < 1800) {\n      return '下午';\n    } else {\n      return '晚上';\n    }\n  },\n\n  calendar: {\n    sameDay: '[今天]LT',\n    nextDay: '[明天]LT',\n    nextWeek: '[下]ddddLT',\n    lastDay: '[昨天]LT',\n    lastWeek: '[上]ddddLT',\n    sameElse: 'L'\n  },\n  dayOfMonthOrdinalParse: /\\d{1,2}(日|月|周)/,\n\n  /**\n   * @param {?} _num\n   * @param {?} period\n   * @return {?}\n   */\n  ordinal(_num, period) {\n    /** @type {?} */\n    const num = Number(_num);\n\n    switch (period) {\n      case 'd':\n      case 'D':\n      case 'DDD':\n        return num + '日';\n\n      case 'M':\n        return num + '月';\n\n      case 'w':\n      case 'W':\n        return num + '周';\n\n      default:\n        return num.toString();\n    }\n  },\n\n  relativeTime: {\n    future: '%s内',\n    past: '%s前',\n    s: '几秒',\n    ss: '%d 秒',\n    m: '1 分钟',\n    mm: '%d 分钟',\n    h: '1 小时',\n    hh: '%d 小时',\n    d: '1 天',\n    dd: '%d 天',\n    M: '1 个月',\n    MM: '%d 个月',\n    y: '1 年',\n    yy: '%d 年'\n  },\n  week: {\n    // GB/T 7408-1994《数据元和交换格式·信息交换·日期和时间表示法》与ISO 8601:1988等效\n    dow: 1,\n    // Monday is the first day of the week.\n    doy: 4 // The week that contains Jan 4th is the first week of the year.\n\n  }\n};\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { add, arLocale, bgLocale, caLocale, csLocale, daLocale, deLocale, defineLocale, enGbLocale, endOf, esDoLocale, esLocale, esUsLocale, etLocale, fiLocale, formatDate, frLocale, getDay, getFirstDayOfMonth, getFullYear, getLocale, getMonth, getSetGlobalLocale, glLocale, heLocale, hiLocale, hrLocale, huLocale, idLocale, isAfter, isArray, isBefore, isDate, isDateValid, isDisabledDay, isFirstDayOfWeek, isSame, isSameDay, isSameMonth, isSameYear, itLocale, jaLocale, kaLocale, kkLocale, koLocale, listLocales, ltLocale, lvLocale, mnLocale, nbLocale, nlBeLocale, nlLocale, parseDate, plLocale, ptBrLocale, roLocale, ruLocale, setFullDate, shiftDate, skLocale, slLocale, sqLocale, startOf, subtract, svLocale, thBeLocale, thLocale, trLocale, ukLocale, updateLocale, utcAsLocal, viLocale, zhCnLocale, createDate as ɵa };","map":{"version":3,"names":["mod","n","x","absFloor","num","Math","ceil","floor","isString","str","isDate","value","Date","Object","prototype","toString","call","isBoolean","isDateValid","date","getTime","isNaN","isFunction","fn","Function","isNumber","isArray","input","Array","hasOwnProp","a","b","hasOwnProperty","isObject","isObjectEmpty","obj","getOwnPropertyNames","length","k","isUndefined","toInt","argumentForCoercion","coercedNumber","isFinite","aliases","_mapUnits","hour","minute","second","millisecond","addUnitAlias","unit","shorthand","lowerCase","toLowerCase","_unit","normalizeUnits","units","undefined","normalizeObjectUnits","inputObject","normalizedInput","normalizedProp","prop","YEAR","MONTH","DATE","HOUR","MINUTE","SECOND","MILLISECOND","WEEK","WEEKDAY","zeroFill","targetLength","forceSign","absNumber","abs","zerosToFill","sign","_sign","_zeros","pow","max","substr","formatFunctions","formatTokenFunctions","formattingTokens","addFormatToken","token","padded","ordinal","callback","apply","arguments","opts","locale","makeFormatFunction","format","array","match","formatArr","i","removeFormattingTokens","isUTC","offset","output","j","replace","createUTCDate","y","m","d","UTC","getUTCFullYear","setUTCFullYear","createDate","h","M","s","ms","getFullYear","setFullYear","getHours","getUTCHours","getMinutes","getUTCMinutes","getSeconds","getUTCSeconds","getMilliseconds","getUTCMilliseconds","getDay","getUTCDay","getDate","getUTCDate","getMonth","getUTCMonth","getUnixTime","valueOf","unix","getFirstDayOfMonth","daysInMonth","_daysInMonth","year","month","isFirstDayOfWeek","firstDayOfWeek","isSameMonth","date1","date2","isSameYear","isSameDay","match1","match2","match3","match4","match6","match1to2","match3to4","match5to6","match1to3","match1to4","match1to6","matchUnsigned","matchSigned","matchOffset","matchShortOffset","matchTimestamp","matchWord","regexes","addRegexToken","regex","strictRegex","isStrict","getParseRegexForToken","_strict","RegExp","unescapeFormat","regexEscape","matched","p1","p2","p3","p4","tokens","addParseToken","_token","func","config","addWeekParseToken","_w","addTimeToArrayFromToken","_a","priorities","addUnitPriority","priority","initDayOfMonth","_dayOfMonthOrdinalParse","_ordinalParse","defaultParsingFlags","empty","unusedTokens","unusedInput","overflow","charsLeftOver","nullInput","invalidMonth","invalidFormat","userInvalidated","iso","parsedDateParts","meridiem","rfc2822","weekdayMismatch","getParsingFlags","_pf","getYear","initYear","parseTwoDigitYear","parseInt","daysInYear","isLeapYear","daysInMonth$1","NaN","modMonth","_year","initMonth","monthsShort","months","monthsShortRegex","monthsRegex","_locale","monthsParse","defaultTimeUnit","day","seconds","shiftDate","assign","min","setFullDate","getNum","milliseconds","def","_month","_date","setMonth","dayOfMonth","setUTCMonth","setDay","setUTCDate","setDate","setHours","setUTCHours","setMinutes","setUTCMinutes","setSeconds","setUTCSeconds","setMilliseconds","setUTCMilliseconds","setTime","cloneDate","startOf","setLocaleDayOfWeek","setISODayOfWeek","endOf","start","_step","add","res","subtract","initDayOfYear","getDayOfYear","_dayOfYear","someDate","oneDay","round","setDayOfYear","dayOfYear","firstWeekOffset","dow","doy","fwd","fwdlw","dayOfYearFromWeeks","week","weekday","localWeekday","weekOffset","resYear","resDayOfYear","weekOfYear","resWeek","weeksInYear","weekOffsetNext","LocaleOptionsFormat","standalone","isFormat","MONTHS_IN_FORMAT","defaultLocaleMonths","split","defaultLocaleMonthsShort","defaultLocaleWeekdays","defaultLocaleWeekdaysShort","defaultLocaleWeekdaysMin","defaultLongDateFormat","LTS","LT","L","LL","LLL","LLLL","defaultOrdinal","defaultDayOfMonthOrdinalParse","defaultMonthsShortRegex","defaultMonthsRegex","LocaleData","abbr","parentLocale","monthsParseExact","weekdays","weekdaysShort","weekdaysMin","weekdaysParseExact","longDateFormat","calendar","relativeTime","dayOfMonthOrdinalParse","invalidDate","monthsStrictRegex","monthsShortStrictRegex","longMonthsParse","shortMonthsParse","meridiemParse","meridiemHour","preparse","postformat","isLower","isPM","Locale","constructor","set","confKey","key","_config","now","_calendar","sameElse","_longDateFormat","formatUpper","toUpperCase","val","slice","_invalidDate","_ordinal","withoutSuffix","isFuture","_relativeTime","pastFuture","diff","_months","test","_monthsShort","monthName","strict","_monthsParseExact","handleMonthStrictParse","_monthsParse","_longMonthsParse","_shortMonthsParse","_shortMonths","computeMonthsParse","_monthsStrictRegex","_monthsRegex","_monthsShortStrictRegex","_monthsShortRegex","_week","firstDayOfYear","_weekdays","_key","_weekdaysMin","_weekdaysShort","weekdaysParse","weekdayName","_weekdaysParseExact","handleWeekStrictParse","_weekdaysParse","_minWeekdaysParse","_shortWeekdaysParse","_fullWeekdaysParse","setDayOfWeek","weekdaysRegex","computeWeekdaysParse","_weekdaysStrictRegex","_weekdaysRegex","weekdaysShortRegex","_weekdaysShortStrictRegex","_weekdaysShortRegex","weekdaysMinRegex","_weekdaysMinStrictRegex","_weekdaysMinRegex","charAt","hours","minutes","formatLongDate","llc","toLocaleLowerCase","ii","mom","indexOf","shortPieces","longPieces","mixedPieces","push","sort","cmpLenRev","join","minPieces","minp","shortp","longp","_abbr","_meridiemParse","defaultCalendar","sameDay","nextDay","nextWeek","lastDay","lastWeek","defaultInvalidDate","defaultLocaleWeek","defaultLocaleMeridiemParse","defaultRelativeTime","future","past","ss","mm","hh","dd","MM","yy","baseConfig","compareArrays","array1","array2","dontConvert","len","lengthDiff","diffs","initWeek","getWeek","getISOWeek","setWeek","getLocale","setISOWeek","initWeekYear","getWeekYear","getISOWeekYear","addWeekYearFormatToken","_getWeekYearFormatCb","_getISOWeekYearFormatCb","getter","getSetWeekYear","getSetWeekYearHelper","getLocaleDayOfWeek","getSetISOWeekYear","getISODayOfWeek","getISOWeeksInYear","getWeeksInYear","weeksTarget","setWeekAll","weekYear","dayOfYearData","initTimezone","getZoneAbbr","getZoneName","initTimestamp","_d","parseFloat","initSecond","initQuarter","getQuarter","setQuarter","quarter","addOffsetFormatToken","separator","getUTCOffset","_isUTC","_offset","initOffset","_useUTC","_tzm","offsetFromString","chunkOffset","matcher","matches","chunk","parts","_min","cloneWithOffset","offsetDiff","getDateOffset","getTimezoneOffset","setUTCOffset","keepLocalTime","keepMinutes","localAdjust","_input","_changeInProgress","setOffsetToUTC","isDaylightSavingTime","setOffsetToParsedOffset","tZone","hasAlignedHourOffset","initMinute","initMillisecond","parseMs","initHour","hFormat","kFormat","_h","_mm","_ss","_H","lowercase","matchMeridiem","kInput","_isPm","_meridiem","bigHour","pos","pos1","pos2","locales","localeFamilies","globalLocale","normalizeLocale","chooseLocale","names","next","loadLocale","mergeConfigs","parentConfig","childConfig","childProp","parentProp","name","console","error","getSetGlobalLocale","values","data","defineLocale","forEach","updateLocale","tmpLocale","setDefaultLocale","listLocales","keys","initDayOfWeek","ordering","orderingHash","reduce","mem","order","isDurationValid","duration","durationKeys","some","unitHasDecimal","absCeil","number","bubble","dur","_milliseconds","days","_days","_data","monthsToDays","monthsFromDays","daysToMonths","years","thresholds","substituteTimeAgo","posNegDuration","createDuration","as","getSetRelativeTimeRounding","roundingFunction","getSetRelativeTimeThreshold","threshold","limit","Duration","quarters","weeks","_isValid","isValid","humanize","withSuffix","localeData","localeKey","mathAbs","_units","Error","isDuration","flags","parsedParts","isNowValid","invalidWeekday","isFrozen","createInvalid","markInvalid","extendedIsoRegex","basicIsoRegex","tzRegex","isoDates","isoTimes","aspNetJsonRegex","obsOffsets","UT","GMT","EDT","EST","CDT","CST","MDT","MST","PDT","PST","configFromISO","_i","exec","allowTime","dateFormat","timeFormat","tzFormat","l","_f","configFromStringAndFormat","extractFromRFC2822Strings","yearStr","monthStr","dayStr","hourStr","minuteStr","secondStr","result","untruncateYear","preprocessRFC2822","trim","checkWeekday","weekdayStr","parsedInput","weekdayProvided","weekdayActual","calculateOffset","obsOffset","militaryOffset","numOffset","hm","configFromRFC2822","parsedArray","configFromString","formatDate","_format","formatMoment","expandFormat","localFormattingTokens","replaceLongDateFormatTokens","lastIndex","defaults","c","currentDateArray","nowValue","configFromArray","currentDate","expectedWeekday","yearToUse","dayOfYearFromWeekInfo","_overflowDayOfYear","_nextDay","w","temp","weekdayOverflow","GG","W","E","curWeek","gg","e","_overflowWeeks","_overflowWeekday","checkOverflow","ISO_8601","RFC_2822","totalParsedInputLength","inputLength","skipped","meridiemFixWrap","_hour","isPm","configFromStringAndArray","tempConfig","bestMoment","scoreToBeat","currentScore","score","configFromObject","map","createFromConfig","prepareConfig","_l","configFromInput","_arr","createLocalOrUTC","parseDate","utcAsLocal","absRound","isAfter","isBefore","isDisabledDay","daysDisabled","isBetween","from","to","inclusivity","leftBound","rightBound","isSame","inputMs","isSameDay$1","isSameOrAfter","isSameOrBefore","aspNetRegex","isoRegex","convertDuration","parseIso","diffRes","momentsDifference","inp","positiveMomentsDifference","base","other","_basePlus","_other","period","addSubtract","isAdding","parseWeekday","_num","_weekDay","parseIsoWeekday","getSetDayOfWeek","getDayOfWeek","symbolMap","numberMap","pluralForm","plurals","pluralize","u","f","arLocale","bgLocale","Number","lastDigit","last2Digits","monthsShortDot","caLocale","months$1","monthsShort$1","plural","translate","csLocale","daLocale","processRelativeTime","deLocale","enGbLocale","monthsShortDot$1","monthsShort$2","monthsParse$1","monthsRegex$1","esDoLocale","monthsShortDot$2","monthsShort$3","monthsParse$2","monthsRegex$2","esLocale","monthsShortDot$3","monthsShort$4","esUsLocale","processRelativeTime$1","etLocale","numbersPast","numbersFuture","translate$1","verbalNumber","fiLocale","ll","lll","llll","frLocale","monthsShortDot$4","monthsShort$5","monthsParse$3","monthsRegex$3","glLocale","heLocale","symbolMap$1","numberMap$1","hiLocale","weekEndings","translate$2","huLocale","hrLocale","idLocale","itLocale","jaLocale","kaLocale","st","_period","suffixes","kkLocale","koLocale","isUpper","translateSeconds","translateSingular","forms","special","translate$3","ltLocale","lvLocale","translate$4","mnLocale","nbLocale","monthsShortWithDots","monthsShortWithoutDots","monthsParse$4","monthsRegex$4","nlBeLocale","monthsShortWithDots$1","monthsShortWithoutDots$1","monthsParse$5","monthsRegex$5","nlLocale","monthsNominative","monthsSubjective","plural$1","translate$5","plLocale","ptBrLocale","relativeTimeWithPlural","roLocale","plural$2","word","relativeTimeWithPlural$1","monthsParse$6","ruLocale","months$2","monthsShort$6","plural$3","translate$6","skLocale","processRelativeTime$2","slLocale","sqLocale","svLocale","thLocale","thBeLocale","ddMM","yyyy","suffixes$1","trLocale","plural$4","relativeTimeWithPlural$2","weekdaysCaseReplace","nominative","accusative","genitive","nounCase","processHoursFunction","ukLocale","viLocale","zhCnLocale","ɵa"],"sources":["C:/AD/AD.DEV/.net+angular/BookShelf/BookShelf.WebUI/ClientApp/node_modules/ngx-bootstrap/__ivy_ngcc__/chronos/fesm2015/ngx-bootstrap-chronos.js"],"sourcesContent":["/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @param {?} n\n * @param {?} x\n * @return {?}\n */\nfunction mod(n, x) {\n    return (n % x + x) % x;\n}\n/**\n * @param {?} num\n * @return {?}\n */\nfunction absFloor(num) {\n    return num < 0 ? Math.ceil(num) || 0 : Math.floor(num);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @param {?} str\n * @return {?}\n */\nfunction isString(str) {\n    return typeof str === 'string';\n}\n/**\n * @param {?} value\n * @return {?}\n */\nfunction isDate(value) {\n    return value instanceof Date || Object.prototype.toString.call(value) === '[object Date]';\n}\n/**\n * @param {?} value\n * @return {?}\n */\nfunction isBoolean(value) {\n    return value === true || value === false;\n}\n/**\n * @param {?} date\n * @return {?}\n */\nfunction isDateValid(date) {\n    return date && date.getTime && !isNaN(date.getTime());\n}\n/**\n * @param {?} fn\n * @return {?}\n */\nfunction isFunction(fn) {\n    return (fn instanceof Function ||\n        Object.prototype.toString.call(fn) === '[object Function]');\n}\n/**\n * @param {?=} value\n * @return {?}\n */\nfunction isNumber(value) {\n    return typeof value === 'number' || Object.prototype.toString.call(value) === '[object Number]';\n}\n/**\n * @template T\n * @param {?=} input\n * @return {?}\n */\nfunction isArray(input) {\n    return (input instanceof Array ||\n        Object.prototype.toString.call(input) === '[object Array]');\n}\n/**\n * @template T\n * @param {?} a\n * @param {?} b\n * @return {?}\n */\nfunction hasOwnProp(a /*object*/, b) {\n    return Object.prototype.hasOwnProperty.call(a, b);\n}\n/**\n * @template T\n * @param {?} input\n * @return {?}\n */\nfunction isObject(input /*object*/) {\n    // IE8 will treat undefined and null as object if it wasn't for\n    // input != null\n    return (input != null && Object.prototype.toString.call(input) === '[object Object]');\n}\n/**\n * @param {?} obj\n * @return {?}\n */\nfunction isObjectEmpty(obj) {\n    if (Object.getOwnPropertyNames) {\n        return (Object.getOwnPropertyNames(obj).length === 0);\n    }\n    /** @type {?} */\n    let k;\n    for (k in obj) {\n        if (obj.hasOwnProperty(k)) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * @param {?} input\n * @return {?}\n */\nfunction isUndefined(input) {\n    return input === void 0;\n}\n/**\n * @template T\n * @param {?} argumentForCoercion\n * @return {?}\n */\nfunction toInt(argumentForCoercion) {\n    /** @type {?} */\n    const coercedNumber = +argumentForCoercion;\n    /** @type {?} */\n    let value = 0;\n    if (coercedNumber !== 0 && isFinite(coercedNumber)) {\n        value = absFloor(coercedNumber);\n    }\n    return value;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst aliases = {};\n/** @type {?} */\nconst _mapUnits = {\n    date: 'day',\n    hour: 'hours',\n    minute: 'minutes',\n    second: 'seconds',\n    millisecond: 'milliseconds'\n};\n/**\n * @param {?} unit\n * @param {?} shorthand\n * @return {?}\n */\nfunction addUnitAlias(unit, shorthand) {\n    /** @type {?} */\n    const lowerCase = unit.toLowerCase();\n    /** @type {?} */\n    let _unit = unit;\n    if (lowerCase in _mapUnits) {\n        _unit = _mapUnits[lowerCase];\n    }\n    aliases[lowerCase] = aliases[`${lowerCase}s`] = aliases[shorthand] = _unit;\n}\n/**\n * @param {?} units\n * @return {?}\n */\nfunction normalizeUnits(units) {\n    return isString(units) ? aliases[units] || aliases[units.toLowerCase()] : undefined;\n}\n/**\n * @param {?} inputObject\n * @return {?}\n */\nfunction normalizeObjectUnits(inputObject) {\n    /** @type {?} */\n    const normalizedInput = {};\n    /** @type {?} */\n    let normalizedProp;\n    /** @type {?} */\n    let prop;\n    for (prop in inputObject) {\n        if (hasOwnProp(inputObject, prop)) {\n            normalizedProp = normalizeUnits(prop);\n            if (normalizedProp) {\n                normalizedInput[normalizedProp] = inputObject[prop];\n            }\n        }\n    }\n    return (/** @type {?} */ (normalizedInput));\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// place in new Date([array])\n/** @type {?} */\nconst YEAR = 0;\n/** @type {?} */\nconst MONTH = 1;\n/** @type {?} */\nconst DATE = 2;\n/** @type {?} */\nconst HOUR = 3;\n/** @type {?} */\nconst MINUTE = 4;\n/** @type {?} */\nconst SECOND = 5;\n/** @type {?} */\nconst MILLISECOND = 6;\n/** @type {?} */\nconst WEEK = 7;\n/** @type {?} */\nconst WEEKDAY = 8;\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @param {?} num\n * @param {?} targetLength\n * @param {?=} forceSign\n * @return {?}\n */\nfunction zeroFill(num, targetLength, forceSign) {\n    /** @type {?} */\n    const absNumber = `${Math.abs(num)}`;\n    /** @type {?} */\n    const zerosToFill = targetLength - absNumber.length;\n    /** @type {?} */\n    const sign = num >= 0;\n    /** @type {?} */\n    const _sign = sign ? (forceSign ? '+' : '') : '-';\n    // todo: this is crazy slow\n    /** @type {?} */\n    const _zeros = Math.pow(10, Math.max(0, zerosToFill)).toString().substr(1);\n    return (_sign + _zeros + absNumber);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nlet formatFunctions = {};\n/** @type {?} */\nlet formatTokenFunctions = {};\n// tslint:disable-next-line\n/** @type {?} */\nconst formattingTokens = /(\\[[^\\[]*\\])|(\\\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|YYYYYY|YYYYY|YYYY|YY|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g;\n// token:    'M'\n// padded:   ['MM', 2]\n// ordinal:  'Mo'\n// callback: function () { this.month() + 1 }\n/**\n * @param {?} token\n * @param {?} padded\n * @param {?} ordinal\n * @param {?} callback\n * @return {?}\n */\nfunction addFormatToken(token, padded, ordinal, callback) {\n    if (token) {\n        formatTokenFunctions[token] = callback;\n    }\n    if (padded) {\n        formatTokenFunctions[padded[0]] = (/**\n         * @return {?}\n         */\n        function () {\n            return zeroFill(callback.apply(null, arguments), padded[1], padded[2]);\n        });\n    }\n    if (ordinal) {\n        formatTokenFunctions[ordinal] = (/**\n         * @param {?} date\n         * @param {?} opts\n         * @return {?}\n         */\n        function (date, opts) {\n            return opts.locale.ordinal(callback.apply(null, arguments), token);\n        });\n    }\n}\n/**\n * @param {?} format\n * @return {?}\n */\nfunction makeFormatFunction(format) {\n    /** @type {?} */\n    const array = format.match(formattingTokens);\n    /** @type {?} */\n    const length = array.length;\n    /** @type {?} */\n    const formatArr = new Array(length);\n    for (let i = 0; i < length; i++) {\n        formatArr[i] = formatTokenFunctions[array[i]]\n            ? formatTokenFunctions[array[i]]\n            : removeFormattingTokens(array[i]);\n    }\n    return (/**\n     * @param {?} date\n     * @param {?} locale\n     * @param {?} isUTC\n     * @param {?=} offset\n     * @return {?}\n     */\n    function (date, locale, isUTC, offset = 0) {\n        /** @type {?} */\n        let output = '';\n        for (let j = 0; j < length; j++) {\n            output += isFunction(formatArr[j])\n                ? ((/** @type {?} */ (formatArr[j]))).call(null, date, { format, locale, isUTC, offset })\n                : formatArr[j];\n        }\n        return output;\n    });\n}\n/**\n * @param {?} input\n * @return {?}\n */\nfunction removeFormattingTokens(input) {\n    if (input.match(/\\[[\\s\\S]/)) {\n        return input.replace(/^\\[|\\]$/g, '');\n    }\n    return input.replace(/\\\\/g, '');\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @param {?=} y\n * @param {?=} m\n * @param {?=} d\n * @return {?}\n */\nfunction createUTCDate(y, m, d) {\n    /** @type {?} */\n    const date = new Date(Date.UTC.apply(null, arguments));\n    // the Date.UTC function remaps years 0-99 to 1900-1999\n    if (y < 100 && y >= 0 && isFinite(date.getUTCFullYear())) {\n        date.setUTCFullYear(y);\n    }\n    return date;\n}\n/**\n * @param {?=} y\n * @param {?=} m\n * @param {?=} d\n * @param {?=} h\n * @param {?=} M\n * @param {?=} s\n * @param {?=} ms\n * @return {?}\n */\nfunction createDate(y, m = 0, d = 1, h = 0, M = 0, s = 0, ms = 0) {\n    /** @type {?} */\n    const date = new Date(y, m, d, h, M, s, ms);\n    // the date constructor remaps years 0-99 to 1900-1999\n    if (y < 100 && y >= 0 && isFinite(date.getFullYear())) {\n        date.setFullYear(y);\n    }\n    return date;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @param {?} date\n * @param {?=} isUTC\n * @return {?}\n */\nfunction getHours(date, isUTC = false) {\n    return isUTC ? date.getUTCHours() : date.getHours();\n}\n/**\n * @param {?} date\n * @param {?=} isUTC\n * @return {?}\n */\nfunction getMinutes(date, isUTC = false) {\n    return isUTC ? date.getUTCMinutes() : date.getMinutes();\n}\n/**\n * @param {?} date\n * @param {?=} isUTC\n * @return {?}\n */\nfunction getSeconds(date, isUTC = false) {\n    return isUTC ? date.getUTCSeconds() : date.getSeconds();\n}\n/**\n * @param {?} date\n * @param {?=} isUTC\n * @return {?}\n */\nfunction getMilliseconds(date, isUTC = false) {\n    return isUTC ? date.getUTCMilliseconds() : date.getMilliseconds();\n}\n/**\n * @param {?} date\n * @return {?}\n */\nfunction getTime(date) {\n    return date.getTime();\n}\n/**\n * @param {?} date\n * @param {?=} isUTC\n * @return {?}\n */\nfunction getDay(date, isUTC = false) {\n    return isUTC ? date.getUTCDay() : date.getDay();\n}\n/**\n * @param {?} date\n * @param {?=} isUTC\n * @return {?}\n */\nfunction getDate(date, isUTC = false) {\n    return isUTC ? date.getUTCDate() : date.getDate();\n}\n/**\n * @param {?} date\n * @param {?=} isUTC\n * @return {?}\n */\nfunction getMonth(date, isUTC = false) {\n    return isUTC ? date.getUTCMonth() : date.getMonth();\n}\n/**\n * @param {?} date\n * @param {?=} isUTC\n * @return {?}\n */\nfunction getFullYear(date, isUTC = false) {\n    return isUTC ? date.getUTCFullYear() : date.getFullYear();\n}\n/**\n * @param {?} date\n * @return {?}\n */\nfunction getUnixTime(date) {\n    return Math.floor(date.valueOf() / 1000);\n}\n/**\n * @param {?} date\n * @return {?}\n */\nfunction unix(date) {\n    return Math.floor(date.valueOf() / 1000);\n}\n/**\n * @param {?} date\n * @return {?}\n */\nfunction getFirstDayOfMonth(date) {\n    return createDate(date.getFullYear(), date.getMonth(), 1, date.getHours(), date.getMinutes(), date.getSeconds());\n}\n/**\n * @param {?} date\n * @return {?}\n */\nfunction daysInMonth(date) {\n    return _daysInMonth(date.getFullYear(), date.getMonth());\n}\n/**\n * @param {?} year\n * @param {?} month\n * @return {?}\n */\nfunction _daysInMonth(year, month) {\n    return new Date(Date.UTC(year, month + 1, 0)).getUTCDate();\n}\n/**\n * @param {?} date\n * @param {?} firstDayOfWeek\n * @return {?}\n */\nfunction isFirstDayOfWeek(date, firstDayOfWeek) {\n    return date.getDay() === firstDayOfWeek;\n}\n/**\n * @param {?} date1\n * @param {?} date2\n * @return {?}\n */\nfunction isSameMonth(date1, date2) {\n    if (!date1 || !date2) {\n        return false;\n    }\n    return isSameYear(date1, date2) && getMonth(date1) === getMonth(date2);\n}\n/**\n * @param {?} date1\n * @param {?} date2\n * @return {?}\n */\nfunction isSameYear(date1, date2) {\n    if (!date1 || !date2) {\n        return false;\n    }\n    return getFullYear(date1) === getFullYear(date2);\n}\n/**\n * @param {?} date1\n * @param {?} date2\n * @return {?}\n */\nfunction isSameDay(date1, date2) {\n    if (!date1 || !date2) {\n        return false;\n    }\n    return (isSameYear(date1, date2) &&\n        isSameMonth(date1, date2) &&\n        getDate(date1) === getDate(date2));\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst match1 = /\\d/;\n//       0 - 9\n/** @type {?} */\nconst match2 = /\\d\\d/;\n//      00 - 99\n/** @type {?} */\nconst match3 = /\\d{3}/;\n//     000 - 999\n/** @type {?} */\nconst match4 = /\\d{4}/;\n//    0000 - 9999\n/** @type {?} */\nconst match6 = /[+-]?\\d{6}/;\n// -999999 - 999999\n/** @type {?} */\nconst match1to2 = /\\d\\d?/;\n//       0 - 99\n/** @type {?} */\nconst match3to4 = /\\d\\d\\d\\d?/;\n//     999 - 9999\n/** @type {?} */\nconst match5to6 = /\\d\\d\\d\\d\\d\\d?/;\n//   99999 - 999999\n/** @type {?} */\nconst match1to3 = /\\d{1,3}/;\n//       0 - 999\n/** @type {?} */\nconst match1to4 = /\\d{1,4}/;\n//       0 - 9999\n/** @type {?} */\nconst match1to6 = /[+-]?\\d{1,6}/;\n// -999999 - 999999\n/** @type {?} */\nconst matchUnsigned = /\\d+/;\n//       0 - inf\n/** @type {?} */\nconst matchSigned = /[+-]?\\d+/;\n//    -inf - inf\n/** @type {?} */\nconst matchOffset = /Z|[+-]\\d\\d:?\\d\\d/gi;\n// +00:00 -00:00 +0000 -0000 or Z\n/** @type {?} */\nconst matchShortOffset = /Z|[+-]\\d\\d(?::?\\d\\d)?/gi;\n// +00 -00 +00:00 -00:00 +0000 -0000 or Z\n/** @type {?} */\nconst matchTimestamp = /[+-]?\\d+(\\.\\d{1,3})?/;\n// 123456789 123456789.123\n// any word (or two) characters or numbers including two/three word month in arabic.\n// includes scottish gaelic two word and hyphenated months\n// tslint:disable-next-line\n/** @type {?} */\nconst matchWord = /[0-9]{0,256}['a-z\\u00A0-\\u05FF\\u0700-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]{1,256}|[\\u0600-\\u06FF\\/]{1,256}(\\s*?[\\u0600-\\u06FF]{1,256}){1,2}/i;\n/** @type {?} */\nconst regexes = {};\n/**\n * @param {?} token\n * @param {?} regex\n * @param {?=} strictRegex\n * @return {?}\n */\nfunction addRegexToken(token, regex, strictRegex) {\n    if (isFunction(regex)) {\n        regexes[token] = regex;\n        return;\n    }\n    regexes[token] = (/**\n     * @param {?} isStrict\n     * @param {?} locale\n     * @return {?}\n     */\n    function (isStrict, locale) {\n        return (isStrict && strictRegex) ? strictRegex : regex;\n    });\n}\n/**\n * @param {?} token\n * @param {?} locale\n * @return {?}\n */\nfunction getParseRegexForToken(token, locale) {\n    /** @type {?} */\n    const _strict = false;\n    if (!hasOwnProp(regexes, token)) {\n        return new RegExp(unescapeFormat(token));\n    }\n    return regexes[token](_strict, locale);\n}\n// Code from http://stackoverflow.com/questions/3561493/is-there-a-regexp-escape-function-in-javascript\n/**\n * @param {?} str\n * @return {?}\n */\nfunction unescapeFormat(str) {\n    // tslint:disable-next-line\n    return regexEscape(str\n        .replace('\\\\', '')\n        .replace(/\\\\(\\[)|\\\\(\\])|\\[([^\\]\\[]*)\\]|\\\\(.)/g, (/**\n     * @param {?} matched\n     * @param {?} p1\n     * @param {?} p2\n     * @param {?} p3\n     * @param {?} p4\n     * @return {?}\n     */\n    (matched, p1, p2, p3, p4) => p1 || p2 || p3 || p4)));\n}\n/**\n * @param {?} str\n * @return {?}\n */\nfunction regexEscape(str) {\n    return str.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst tokens = {};\n/**\n * @param {?} token\n * @param {?} callback\n * @return {?}\n */\nfunction addParseToken(token, callback) {\n    /** @type {?} */\n    const _token = isString(token) ? [token] : token;\n    /** @type {?} */\n    let func = callback;\n    if (isNumber(callback)) {\n        func = (/**\n         * @param {?} input\n         * @param {?} array\n         * @param {?} config\n         * @return {?}\n         */\n        function (input, array, config) {\n            array[callback] = toInt(input);\n            return config;\n        });\n    }\n    if (isArray(_token) && isFunction(func)) {\n        /** @type {?} */\n        let i;\n        for (i = 0; i < _token.length; i++) {\n            tokens[_token[i]] = func;\n        }\n    }\n}\n/**\n * @param {?} token\n * @param {?} callback\n * @return {?}\n */\nfunction addWeekParseToken(token, callback) {\n    addParseToken(token, (/**\n     * @param {?} input\n     * @param {?} array\n     * @param {?} config\n     * @param {?} _token\n     * @return {?}\n     */\n    function (input, array, config, _token) {\n        config._w = config._w || {};\n        return callback(input, config._w, config, _token);\n    }));\n}\n/**\n * @param {?} token\n * @param {?} input\n * @param {?} config\n * @return {?}\n */\nfunction addTimeToArrayFromToken(token, input, config) {\n    if (input != null && hasOwnProp(tokens, token)) {\n        tokens[token](input, config._a, config, token);\n    }\n    return config;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst priorities = {};\n/**\n * @param {?} unit\n * @param {?} priority\n * @return {?}\n */\nfunction addUnitPriority(unit, priority) {\n    priorities[unit] = priority;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @return {?}\n */\nfunction initDayOfMonth() {\n    // FORMATTING\n    addFormatToken('D', ['DD', 2, false], 'Do', (/**\n     * @param {?} date\n     * @param {?} opts\n     * @return {?}\n     */\n    function (date, opts) {\n        return getDate(date, opts.isUTC)\n            .toString(10);\n    }));\n    // ALIASES\n    addUnitAlias('date', 'D');\n    // PRIOROITY\n    addUnitPriority('date', 9);\n    // PARSING\n    addRegexToken('D', match1to2);\n    addRegexToken('DD', match1to2, match2);\n    addRegexToken('Do', (/**\n     * @param {?} isStrict\n     * @param {?} locale\n     * @return {?}\n     */\n    function (isStrict, locale) {\n        return locale._dayOfMonthOrdinalParse || locale._ordinalParse;\n    }));\n    addParseToken(['D', 'DD'], DATE);\n    addParseToken('Do', (/**\n     * @param {?} input\n     * @param {?} array\n     * @param {?} config\n     * @return {?}\n     */\n    function (input, array, config) {\n        array[DATE] = toInt(input.match(match1to2)[0]);\n        return config;\n    }));\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @return {?}\n */\nfunction defaultParsingFlags() {\n    // We need to deep clone this object.\n    return {\n        empty: false,\n        unusedTokens: [],\n        unusedInput: [],\n        overflow: -2,\n        charsLeftOver: 0,\n        nullInput: false,\n        invalidMonth: null,\n        invalidFormat: false,\n        userInvalidated: false,\n        iso: false,\n        parsedDateParts: [],\n        meridiem: null,\n        rfc2822: false,\n        weekdayMismatch: false\n    };\n}\n/**\n * @param {?} config\n * @return {?}\n */\nfunction getParsingFlags(config) {\n    if (config._pf == null) {\n        config._pf = defaultParsingFlags();\n    }\n    return config._pf;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// FORMATTING\n/**\n * @param {?} date\n * @param {?} opts\n * @return {?}\n */\nfunction getYear(date, opts) {\n    if (opts.locale.getFullYear) {\n        return opts.locale.getFullYear(date, opts.isUTC).toString();\n    }\n    return getFullYear(date, opts.isUTC).toString();\n}\n/**\n * @return {?}\n */\nfunction initYear() {\n    addFormatToken('Y', null, null, (/**\n     * @param {?} date\n     * @param {?} opts\n     * @return {?}\n     */\n    function (date, opts) {\n        /** @type {?} */\n        const y = getFullYear(date, opts.isUTC);\n        return y <= 9999 ? y.toString(10) : `+${y}`;\n    }));\n    addFormatToken(null, ['YY', 2, false], null, (/**\n     * @param {?} date\n     * @param {?} opts\n     * @return {?}\n     */\n    function (date, opts) {\n        return (getFullYear(date, opts.isUTC) % 100).toString(10);\n    }));\n    addFormatToken(null, ['YYYY', 4, false], null, getYear);\n    addFormatToken(null, ['YYYYY', 5, false], null, getYear);\n    addFormatToken(null, ['YYYYYY', 6, true], null, getYear);\n    // ALIASES\n    addUnitAlias('year', 'y');\n    // PRIORITIES\n    addUnitPriority('year', 1);\n    // PARSING\n    addRegexToken('Y', matchSigned);\n    addRegexToken('YY', match1to2, match2);\n    addRegexToken('YYYY', match1to4, match4);\n    addRegexToken('YYYYY', match1to6, match6);\n    addRegexToken('YYYYYY', match1to6, match6);\n    addParseToken(['YYYYY', 'YYYYYY'], YEAR);\n    addParseToken('YYYY', (/**\n     * @param {?} input\n     * @param {?} array\n     * @param {?} config\n     * @return {?}\n     */\n    function (input, array, config) {\n        array[YEAR] = input.length === 2 ? parseTwoDigitYear(input) : toInt(input);\n        return config;\n    }));\n    addParseToken('YY', (/**\n     * @param {?} input\n     * @param {?} array\n     * @param {?} config\n     * @return {?}\n     */\n    function (input, array, config) {\n        array[YEAR] = parseTwoDigitYear(input);\n        return config;\n    }));\n    addParseToken('Y', (/**\n     * @param {?} input\n     * @param {?} array\n     * @param {?} config\n     * @return {?}\n     */\n    function (input, array, config) {\n        array[YEAR] = parseInt(input, 10);\n        return config;\n    }));\n}\n/**\n * @param {?} input\n * @return {?}\n */\nfunction parseTwoDigitYear(input) {\n    return toInt(input) + (toInt(input) > 68 ? 1900 : 2000);\n}\n/**\n * @param {?} year\n * @return {?}\n */\nfunction daysInYear(year) {\n    return isLeapYear(year) ? 366 : 365;\n}\n/**\n * @param {?} year\n * @return {?}\n */\nfunction isLeapYear(year) {\n    return (year % 4 === 0 && year % 100 !== 0) || year % 400 === 0;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// todo: this is duplicate, source in date-getters.ts\n/**\n * @param {?} year\n * @param {?} month\n * @return {?}\n */\nfunction daysInMonth$1(year, month) {\n    if (isNaN(year) || isNaN(month)) {\n        return NaN;\n    }\n    /** @type {?} */\n    const modMonth = mod(month, 12);\n    /** @type {?} */\n    const _year = year + (month - modMonth) / 12;\n    return modMonth === 1\n        ? isLeapYear(_year) ? 29 : 28\n        : (31 - modMonth % 7 % 2);\n}\n/**\n * @return {?}\n */\nfunction initMonth() {\n    // FORMATTING\n    addFormatToken('M', ['MM', 2, false], 'Mo', (/**\n     * @param {?} date\n     * @param {?} opts\n     * @return {?}\n     */\n    function (date, opts) {\n        return (getMonth(date, opts.isUTC) + 1).toString(10);\n    }));\n    addFormatToken('MMM', null, null, (/**\n     * @param {?} date\n     * @param {?} opts\n     * @return {?}\n     */\n    function (date, opts) {\n        return opts.locale.monthsShort(date, opts.format, opts.isUTC);\n    }));\n    addFormatToken('MMMM', null, null, (/**\n     * @param {?} date\n     * @param {?} opts\n     * @return {?}\n     */\n    function (date, opts) {\n        return opts.locale.months(date, opts.format, opts.isUTC);\n    }));\n    // ALIASES\n    addUnitAlias('month', 'M');\n    // PRIORITY\n    addUnitPriority('month', 8);\n    // PARSING\n    addRegexToken('M', match1to2);\n    addRegexToken('MM', match1to2, match2);\n    addRegexToken('MMM', (/**\n     * @param {?} isStrict\n     * @param {?} locale\n     * @return {?}\n     */\n    function (isStrict, locale) {\n        return locale.monthsShortRegex(isStrict);\n    }));\n    addRegexToken('MMMM', (/**\n     * @param {?} isStrict\n     * @param {?} locale\n     * @return {?}\n     */\n    function (isStrict, locale) {\n        return locale.monthsRegex(isStrict);\n    }));\n    addParseToken(['M', 'MM'], (/**\n     * @param {?} input\n     * @param {?} array\n     * @param {?} config\n     * @return {?}\n     */\n    function (input, array, config) {\n        array[MONTH] = toInt(input) - 1;\n        return config;\n    }));\n    addParseToken(['MMM', 'MMMM'], (/**\n     * @param {?} input\n     * @param {?} array\n     * @param {?} config\n     * @param {?} token\n     * @return {?}\n     */\n    function (input, array, config, token) {\n        /** @type {?} */\n        const month = config._locale.monthsParse(input, token, config._strict);\n        // if we didn't find a month name, mark the date as invalid.\n        if (month != null) {\n            array[MONTH] = month;\n        }\n        else {\n            getParsingFlags(config).invalidMonth = !!input;\n        }\n        return config;\n    }));\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst defaultTimeUnit = {\n    year: 0,\n    month: 0,\n    day: 0,\n    hour: 0,\n    minute: 0,\n    seconds: 0\n};\n/**\n * @param {?} date\n * @param {?} unit\n * @return {?}\n */\nfunction shiftDate(date, unit) {\n    /** @type {?} */\n    const _unit = Object.assign({}, defaultTimeUnit, unit);\n    /** @type {?} */\n    const year = date.getFullYear() + (_unit.year || 0);\n    /** @type {?} */\n    const month = date.getMonth() + (_unit.month || 0);\n    /** @type {?} */\n    let day = date.getDate() + (_unit.day || 0);\n    if (_unit.month && !_unit.day) {\n        day = Math.min(day, daysInMonth$1(year, month));\n    }\n    return createDate(year, month, day, date.getHours() + (_unit.hour || 0), date.getMinutes() + (_unit.minute || 0), date.getSeconds() + (_unit.seconds || 0));\n}\n/**\n * @param {?} date\n * @param {?} unit\n * @return {?}\n */\nfunction setFullDate(date, unit) {\n    return createDate(getNum(date.getFullYear(), unit.year), getNum(date.getMonth(), unit.month), 1, // day, to avoid issue with wrong months selection at the end of current month (#5371)\n    getNum(date.getHours(), unit.hour), getNum(date.getMinutes(), unit.minute), getNum(date.getSeconds(), unit.seconds), getNum(date.getMilliseconds(), unit.milliseconds));\n}\n/**\n * @param {?} def\n * @param {?=} num\n * @return {?}\n */\nfunction getNum(def, num) {\n    return isNumber(num) ? num : def;\n}\n/**\n * @param {?} date\n * @param {?} value\n * @param {?=} isUTC\n * @return {?}\n */\nfunction setFullYear(date, value, isUTC) {\n    /** @type {?} */\n    const _month = getMonth(date, isUTC);\n    /** @type {?} */\n    const _date = getDate(date, isUTC);\n    /** @type {?} */\n    const _year = getFullYear(date, isUTC);\n    if (isLeapYear(_year) && _month === 1 && _date === 29) {\n        /** @type {?} */\n        const _daysInMonth = daysInMonth$1(value, _month);\n        isUTC ? date.setUTCFullYear(value, _month, _daysInMonth) : date.setFullYear(value, _month, _daysInMonth);\n    }\n    isUTC ? date.setUTCFullYear(value) : date.setFullYear(value);\n    return date;\n}\n/**\n * @param {?} date\n * @param {?} value\n * @param {?=} isUTC\n * @return {?}\n */\nfunction setMonth(date, value, isUTC) {\n    /** @type {?} */\n    const dayOfMonth = Math.min(getDate(date), daysInMonth$1(getFullYear(date), value));\n    isUTC ? date.setUTCMonth(value, dayOfMonth) : date.setMonth(value, dayOfMonth);\n    return date;\n}\n/**\n * @param {?} date\n * @param {?} value\n * @param {?=} isUTC\n * @return {?}\n */\nfunction setDay(date, value, isUTC) {\n    isUTC ? date.setUTCDate(value) : date.setDate(value);\n    return date;\n}\n/**\n * @param {?} date\n * @param {?} value\n * @param {?=} isUTC\n * @return {?}\n */\nfunction setHours(date, value, isUTC) {\n    isUTC ? date.setUTCHours(value) : date.setHours(value);\n    return date;\n}\n/**\n * @param {?} date\n * @param {?} value\n * @param {?=} isUTC\n * @return {?}\n */\nfunction setMinutes(date, value, isUTC) {\n    isUTC ? date.setUTCMinutes(value) : date.setMinutes(value);\n    return date;\n}\n/**\n * @param {?} date\n * @param {?} value\n * @param {?=} isUTC\n * @return {?}\n */\nfunction setSeconds(date, value, isUTC) {\n    isUTC ? date.setUTCSeconds(value) : date.setSeconds(value);\n    return date;\n}\n/**\n * @param {?} date\n * @param {?} value\n * @param {?=} isUTC\n * @return {?}\n */\nfunction setMilliseconds(date, value, isUTC) {\n    isUTC ? date.setUTCMilliseconds(value) : date.setMilliseconds(value);\n    return date;\n}\n/**\n * @param {?} date\n * @param {?} value\n * @param {?=} isUTC\n * @return {?}\n */\nfunction setDate(date, value, isUTC) {\n    isUTC ? date.setUTCDate(value) : date.setDate(value);\n    return date;\n}\n/**\n * @param {?} date\n * @param {?} value\n * @return {?}\n */\nfunction setTime(date, value) {\n    date.setTime(value);\n    return date;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// fastest way to clone date\n// https://jsperf.com/clone-date-object2\n/**\n * @param {?} date\n * @return {?}\n */\nfunction cloneDate(date) {\n    return new Date(date.getTime());\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @param {?} date\n * @param {?} unit\n * @param {?=} isUTC\n * @return {?}\n */\nfunction startOf(date, unit, isUTC) {\n    /** @type {?} */\n    const _date = cloneDate(date);\n    // the following switch intentionally omits break keywords\n    // to utilize falling through the cases.\n    switch (unit) {\n        case 'year':\n            setMonth(_date, 0, isUTC);\n        /* falls through */\n        case 'quarter':\n        case 'month':\n            setDate(_date, 1, isUTC);\n        /* falls through */\n        case 'week':\n        case 'isoWeek':\n        case 'day':\n        case 'date':\n            setHours(_date, 0, isUTC);\n        /* falls through */\n        case 'hours':\n            setMinutes(_date, 0, isUTC);\n        /* falls through */\n        case 'minutes':\n            setSeconds(_date, 0, isUTC);\n        /* falls through */\n        case 'seconds':\n            setMilliseconds(_date, 0, isUTC);\n    }\n    // weeks are a special case\n    if (unit === 'week') {\n        setLocaleDayOfWeek(_date, 0, { isUTC });\n    }\n    if (unit === 'isoWeek') {\n        setISODayOfWeek(_date, 1);\n    }\n    // quarters are also special\n    if (unit === 'quarter') {\n        setMonth(_date, Math.floor(getMonth(_date, isUTC) / 3) * 3, isUTC);\n    }\n    return _date;\n}\n/**\n * @param {?} date\n * @param {?} unit\n * @param {?=} isUTC\n * @return {?}\n */\nfunction endOf(date, unit, isUTC) {\n    /** @type {?} */\n    let _unit = unit;\n    // 'date' is an alias for 'day', so it should be considered as such.\n    if (_unit === 'date') {\n        _unit = 'day';\n    }\n    /** @type {?} */\n    const start = startOf(date, _unit, isUTC);\n    /** @type {?} */\n    const _step = add(start, 1, _unit === 'isoWeek' ? 'week' : _unit, isUTC);\n    /** @type {?} */\n    const res = subtract(_step, 1, 'milliseconds', isUTC);\n    return res;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @return {?}\n */\nfunction initDayOfYear() {\n    // FORMATTING\n    addFormatToken('DDD', ['DDDD', 3, false], 'DDDo', (/**\n     * @param {?} date\n     * @return {?}\n     */\n    function (date) {\n        return getDayOfYear(date)\n            .toString(10);\n    }));\n    // ALIASES\n    addUnitAlias('dayOfYear', 'DDD');\n    // PRIORITY\n    addUnitPriority('dayOfYear', 4);\n    addRegexToken('DDD', match1to3);\n    addRegexToken('DDDD', match3);\n    addParseToken(['DDD', 'DDDD'], (/**\n     * @param {?} input\n     * @param {?} array\n     * @param {?} config\n     * @return {?}\n     */\n    function (input, array, config) {\n        config._dayOfYear = toInt(input);\n        return config;\n    }));\n}\n/**\n * @param {?} date\n * @param {?=} isUTC\n * @return {?}\n */\nfunction getDayOfYear(date, isUTC) {\n    /** @type {?} */\n    const date1 = +startOf(date, 'day', isUTC);\n    /** @type {?} */\n    const date2 = +startOf(date, 'year', isUTC);\n    /** @type {?} */\n    const someDate = date1 - date2;\n    /** @type {?} */\n    const oneDay = 1000 * 60 * 60 * 24;\n    return Math.round(someDate / oneDay) + 1;\n}\n/**\n * @param {?} date\n * @param {?} input\n * @return {?}\n */\nfunction setDayOfYear(date, input) {\n    /** @type {?} */\n    const dayOfYear = getDayOfYear(date);\n    return add(date, (input - dayOfYear), 'day');\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @param {?} year\n * @param {?} dow\n * @param {?} doy\n * @return {?}\n */\nfunction firstWeekOffset(year, dow, doy) {\n    // first-week day -- which january is always in the first week (4 for iso, 1 for other)\n    /** @type {?} */\n    const fwd = dow - doy + 7;\n    // first-week day local weekday -- which local weekday is fwd\n    /** @type {?} */\n    const fwdlw = (createUTCDate(year, 0, fwd).getUTCDay() - dow + 7) % 7;\n    return -fwdlw + fwd - 1;\n}\n// https://en.wikipedia.org/wiki/ISO_week_date#Calculating_a_date_given_the_year.2C_week_number_and_weekday\n/**\n * @param {?} year\n * @param {?} week\n * @param {?} weekday\n * @param {?} dow\n * @param {?} doy\n * @return {?}\n */\nfunction dayOfYearFromWeeks(year, week, weekday, dow, doy) {\n    /** @type {?} */\n    const localWeekday = (7 + weekday - dow) % 7;\n    /** @type {?} */\n    const weekOffset = firstWeekOffset(year, dow, doy);\n    /** @type {?} */\n    const dayOfYear = 1 + 7 * (week - 1) + localWeekday + weekOffset;\n    /** @type {?} */\n    let resYear;\n    /** @type {?} */\n    let resDayOfYear;\n    if (dayOfYear <= 0) {\n        resYear = year - 1;\n        resDayOfYear = daysInYear(resYear) + dayOfYear;\n    }\n    else if (dayOfYear > daysInYear(year)) {\n        resYear = year + 1;\n        resDayOfYear = dayOfYear - daysInYear(year);\n    }\n    else {\n        resYear = year;\n        resDayOfYear = dayOfYear;\n    }\n    return {\n        year: resYear,\n        dayOfYear: resDayOfYear\n    };\n}\n/**\n * @param {?} date\n * @param {?} dow\n * @param {?} doy\n * @param {?=} isUTC\n * @return {?}\n */\nfunction weekOfYear(date, dow, doy, isUTC) {\n    /** @type {?} */\n    const weekOffset = firstWeekOffset(getFullYear(date, isUTC), dow, doy);\n    /** @type {?} */\n    const week = Math.floor((getDayOfYear(date, isUTC) - weekOffset - 1) / 7) + 1;\n    /** @type {?} */\n    let resWeek;\n    /** @type {?} */\n    let resYear;\n    if (week < 1) {\n        resYear = getFullYear(date, isUTC) - 1;\n        resWeek = week + weeksInYear(resYear, dow, doy);\n    }\n    else if (week > weeksInYear(getFullYear(date, isUTC), dow, doy)) {\n        resWeek = week - weeksInYear(getFullYear(date, isUTC), dow, doy);\n        resYear = getFullYear(date, isUTC) + 1;\n    }\n    else {\n        resYear = getFullYear(date, isUTC);\n        resWeek = week;\n    }\n    return {\n        week: resWeek,\n        year: resYear\n    };\n}\n/**\n * @param {?} year\n * @param {?} dow\n * @param {?} doy\n * @return {?}\n */\nfunction weeksInYear(year, dow, doy) {\n    /** @type {?} */\n    const weekOffset = firstWeekOffset(year, dow, doy);\n    /** @type {?} */\n    const weekOffsetNext = firstWeekOffset(year + 1, dow, doy);\n    return (daysInYear(year) - weekOffset + weekOffsetNext) / 7;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @record\n */\nfunction LocaleOptionsFormat() { }\nif (false) {\n    /** @type {?} */\n    LocaleOptionsFormat.prototype.format;\n    /** @type {?} */\n    LocaleOptionsFormat.prototype.standalone;\n    /** @type {?|undefined} */\n    LocaleOptionsFormat.prototype.isFormat;\n}\n/** @type {?} */\nconst MONTHS_IN_FORMAT = /D[oD]?(\\[[^\\[\\]]*\\]|\\s)+MMMM?/;\n/** @type {?} */\nconst defaultLocaleMonths = 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_');\n/** @type {?} */\nconst defaultLocaleMonthsShort = 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_');\n/** @type {?} */\nconst defaultLocaleWeekdays = 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_');\n/** @type {?} */\nconst defaultLocaleWeekdaysShort = 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_');\n/** @type {?} */\nconst defaultLocaleWeekdaysMin = 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_');\n/** @type {?} */\nconst defaultLongDateFormat = {\n    LTS: 'h:mm:ss A',\n    LT: 'h:mm A',\n    L: 'MM/DD/YYYY',\n    LL: 'MMMM D, YYYY',\n    LLL: 'MMMM D, YYYY h:mm A',\n    LLLL: 'dddd, MMMM D, YYYY h:mm A'\n};\n/** @type {?} */\nconst defaultOrdinal = '%d';\n/** @type {?} */\nconst defaultDayOfMonthOrdinalParse = /\\d{1,2}/;\n/** @type {?} */\nconst defaultMonthsShortRegex = matchWord;\n/** @type {?} */\nconst defaultMonthsRegex = matchWord;\n/**\n * @record\n */\nfunction LocaleData() { }\nif (false) {\n    /** @type {?|undefined} */\n    LocaleData.prototype.abbr;\n    /** @type {?|undefined} */\n    LocaleData.prototype.parentLocale;\n    /** @type {?|undefined} */\n    LocaleData.prototype.months;\n    /** @type {?|undefined} */\n    LocaleData.prototype.monthsShort;\n    /** @type {?|undefined} */\n    LocaleData.prototype.monthsParseExact;\n    /** @type {?|undefined} */\n    LocaleData.prototype.weekdays;\n    /** @type {?|undefined} */\n    LocaleData.prototype.weekdaysShort;\n    /** @type {?|undefined} */\n    LocaleData.prototype.weekdaysMin;\n    /** @type {?|undefined} */\n    LocaleData.prototype.weekdaysParseExact;\n    /** @type {?|undefined} */\n    LocaleData.prototype.longDateFormat;\n    /** @type {?|undefined} */\n    LocaleData.prototype.calendar;\n    /** @type {?|undefined} */\n    LocaleData.prototype.relativeTime;\n    /** @type {?|undefined} */\n    LocaleData.prototype.dayOfMonthOrdinalParse;\n    /** @type {?|undefined} */\n    LocaleData.prototype.ordinal;\n    /** @type {?|undefined} */\n    LocaleData.prototype.week;\n    /** @type {?|undefined} */\n    LocaleData.prototype.invalidDate;\n    /** @type {?|undefined} */\n    LocaleData.prototype.monthsRegex;\n    /** @type {?|undefined} */\n    LocaleData.prototype.monthsParse;\n    /** @type {?|undefined} */\n    LocaleData.prototype.monthsShortRegex;\n    /** @type {?|undefined} */\n    LocaleData.prototype.monthsStrictRegex;\n    /** @type {?|undefined} */\n    LocaleData.prototype.monthsShortStrictRegex;\n    /** @type {?|undefined} */\n    LocaleData.prototype.longMonthsParse;\n    /** @type {?|undefined} */\n    LocaleData.prototype.shortMonthsParse;\n    /** @type {?|undefined} */\n    LocaleData.prototype.meridiemParse;\n    /**\n     * @param {?} hour\n     * @param {?} meridiem\n     * @return {?}\n     */\n    LocaleData.prototype.meridiemHour = function (hour, meridiem) { };\n    /**\n     * @param {?} str\n     * @param {?=} format\n     * @return {?}\n     */\n    LocaleData.prototype.preparse = function (str, format) { };\n    /**\n     * @param {?} str\n     * @return {?}\n     */\n    LocaleData.prototype.postformat = function (str) { };\n    /**\n     * @param {?} hour\n     * @param {?=} minute\n     * @param {?=} isLower\n     * @return {?}\n     */\n    LocaleData.prototype.meridiem = function (hour, minute, isLower) { };\n    /**\n     * @param {?} input\n     * @return {?}\n     */\n    LocaleData.prototype.isPM = function (input) { };\n    /**\n     * @param {?} date\n     * @param {?} isUTC\n     * @return {?}\n     */\n    LocaleData.prototype.getFullYear = function (date, isUTC) { };\n}\nclass Locale {\n    /**\n     * @param {?} config\n     */\n    constructor(config) {\n        if (!!config) {\n            this.set(config);\n        }\n    }\n    /**\n     * @param {?} config\n     * @return {?}\n     */\n    set(config) {\n        /** @type {?} */\n        let confKey;\n        for (confKey in config) {\n            if (!config.hasOwnProperty(confKey)) {\n                continue;\n            }\n            /** @type {?} */\n            const prop = config[(/** @type {?} */ (confKey))];\n            /** @type {?} */\n            const key = (/** @type {?} */ ((isFunction(prop) ? confKey : `_${confKey}`)));\n            this[key] = (/** @type {?} */ (prop));\n        }\n        this._config = config;\n    }\n    /**\n     * @param {?} key\n     * @param {?} date\n     * @param {?} now\n     * @return {?}\n     */\n    calendar(key, date, now) {\n        /** @type {?} */\n        const output = this._calendar[key] || this._calendar.sameElse;\n        return isFunction(output) ? output.call(null, date, now) : output;\n    }\n    /**\n     * @param {?} key\n     * @return {?}\n     */\n    longDateFormat(key) {\n        /** @type {?} */\n        const format = this._longDateFormat[key];\n        /** @type {?} */\n        const formatUpper = this._longDateFormat[key.toUpperCase()];\n        if (format || !formatUpper) {\n            return format;\n        }\n        this._longDateFormat[key] = formatUpper.replace(/MMMM|MM|DD|dddd/g, (/**\n         * @param {?} val\n         * @return {?}\n         */\n        function (val) {\n            return val.slice(1);\n        }));\n        return this._longDateFormat[key];\n    }\n    /**\n     * @return {?}\n     */\n    get invalidDate() {\n        return this._invalidDate;\n    }\n    /**\n     * @param {?} val\n     * @return {?}\n     */\n    set invalidDate(val) {\n        this._invalidDate = val;\n    }\n    /**\n     * @param {?} num\n     * @param {?=} token\n     * @return {?}\n     */\n    ordinal(num, token) {\n        return this._ordinal.replace('%d', num.toString(10));\n    }\n    /**\n     * @param {?} str\n     * @param {?=} format\n     * @return {?}\n     */\n    preparse(str, format) {\n        return str;\n    }\n    /**\n     * @param {?} date\n     * @param {?=} isUTC\n     * @return {?}\n     */\n    getFullYear(date, isUTC = false) {\n        return getFullYear(date, isUTC);\n    }\n    /**\n     * @param {?} str\n     * @return {?}\n     */\n    postformat(str) {\n        return str;\n    }\n    /**\n     * @param {?} num\n     * @param {?} withoutSuffix\n     * @param {?} str\n     * @param {?} isFuture\n     * @return {?}\n     */\n    relativeTime(num, withoutSuffix, str, isFuture) {\n        /** @type {?} */\n        const output = this._relativeTime[str];\n        return (isFunction(output)) ?\n            output(num, withoutSuffix, str, isFuture) :\n            output.replace(/%d/i, num.toString(10));\n    }\n    /**\n     * @param {?} diff\n     * @param {?} output\n     * @return {?}\n     */\n    pastFuture(diff, output) {\n        /** @type {?} */\n        const format = this._relativeTime[diff > 0 ? 'future' : 'past'];\n        return isFunction(format) ? format(output) : format.replace(/%s/i, output);\n    }\n    /**\n     * @param {?=} date\n     * @param {?=} format\n     * @param {?=} isUTC\n     * @return {?}\n     */\n    months(date, format, isUTC = false) {\n        if (!date) {\n            return isArray(this._months)\n                ? this._months\n                : this._months.standalone;\n        }\n        if (isArray(this._months)) {\n            return this._months[getMonth(date, isUTC)];\n        }\n        /** @type {?} */\n        const key = (this._months.isFormat || MONTHS_IN_FORMAT).test(format)\n            ? 'format'\n            : 'standalone';\n        return this._months[key][getMonth(date, isUTC)];\n    }\n    /**\n     * @param {?=} date\n     * @param {?=} format\n     * @param {?=} isUTC\n     * @return {?}\n     */\n    monthsShort(date, format, isUTC = false) {\n        if (!date) {\n            return isArray(this._monthsShort)\n                ? this._monthsShort\n                : this._monthsShort.standalone;\n        }\n        if (isArray(this._monthsShort)) {\n            return this._monthsShort[getMonth(date, isUTC)];\n        }\n        /** @type {?} */\n        const key = MONTHS_IN_FORMAT.test(format) ? 'format' : 'standalone';\n        return this._monthsShort[key][getMonth(date, isUTC)];\n    }\n    /**\n     * @param {?} monthName\n     * @param {?=} format\n     * @param {?=} strict\n     * @return {?}\n     */\n    monthsParse(monthName, format, strict) {\n        /** @type {?} */\n        let date;\n        /** @type {?} */\n        let regex;\n        if (this._monthsParseExact) {\n            return this.handleMonthStrictParse(monthName, format, strict);\n        }\n        if (!this._monthsParse) {\n            this._monthsParse = [];\n            this._longMonthsParse = [];\n            this._shortMonthsParse = [];\n        }\n        // TODO: add sorting\n        // Sorting makes sure if one month (or abbr) is a prefix of another\n        // see sorting in computeMonthsParse\n        /** @type {?} */\n        let i;\n        for (i = 0; i < 12; i++) {\n            // make the regex if we don't have it already\n            date = new Date(Date.UTC(2000, i));\n            if (strict && !this._longMonthsParse[i]) {\n                /** @type {?} */\n                const _months = this.months(date, '', true).replace('.', '');\n                /** @type {?} */\n                const _shortMonths = this.monthsShort(date, '', true).replace('.', '');\n                this._longMonthsParse[i] = new RegExp(`^${_months}$`, 'i');\n                this._shortMonthsParse[i] = new RegExp(`^${_shortMonths}$`, 'i');\n            }\n            if (!strict && !this._monthsParse[i]) {\n                regex = `^${this.months(date, '', true)}|^${this.monthsShort(date, '', true)}`;\n                this._monthsParse[i] = new RegExp(regex.replace('.', ''), 'i');\n            }\n            // test the regex\n            if (strict && format === 'MMMM' && ((/** @type {?} */ (this._longMonthsParse[i]))).test(monthName)) {\n                return i;\n            }\n            if (strict && format === 'MMM' && ((/** @type {?} */ (this._shortMonthsParse[i]))).test(monthName)) {\n                return i;\n            }\n            if (!strict && this._monthsParse[i].test(monthName)) {\n                return i;\n            }\n        }\n    }\n    /**\n     * @param {?} isStrict\n     * @return {?}\n     */\n    monthsRegex(isStrict) {\n        if (this._monthsParseExact) {\n            if (!hasOwnProp(this, '_monthsRegex')) {\n                this.computeMonthsParse();\n            }\n            if (isStrict) {\n                return this._monthsStrictRegex;\n            }\n            return this._monthsRegex;\n        }\n        if (!hasOwnProp(this, '_monthsRegex')) {\n            this._monthsRegex = defaultMonthsRegex;\n        }\n        return this._monthsStrictRegex && isStrict ?\n            this._monthsStrictRegex : this._monthsRegex;\n    }\n    /**\n     * @param {?} isStrict\n     * @return {?}\n     */\n    monthsShortRegex(isStrict) {\n        if (this._monthsParseExact) {\n            if (!hasOwnProp(this, '_monthsRegex')) {\n                this.computeMonthsParse();\n            }\n            if (isStrict) {\n                return this._monthsShortStrictRegex;\n            }\n            return this._monthsShortRegex;\n        }\n        if (!hasOwnProp(this, '_monthsShortRegex')) {\n            this._monthsShortRegex = defaultMonthsShortRegex;\n        }\n        return this._monthsShortStrictRegex && isStrict ?\n            this._monthsShortStrictRegex : this._monthsShortRegex;\n    }\n    /**\n     * Week\n     * @param {?} date\n     * @param {?=} isUTC\n     * @return {?}\n     */\n    week(date, isUTC) {\n        return weekOfYear(date, this._week.dow, this._week.doy, isUTC).week;\n    }\n    /**\n     * @return {?}\n     */\n    firstDayOfWeek() {\n        return this._week.dow;\n    }\n    /**\n     * @return {?}\n     */\n    firstDayOfYear() {\n        return this._week.doy;\n    }\n    /**\n     * @param {?=} date\n     * @param {?=} format\n     * @param {?=} isUTC\n     * @return {?}\n     */\n    weekdays(date, format, isUTC) {\n        if (!date) {\n            return isArray(this._weekdays)\n                ? this._weekdays\n                : this._weekdays.standalone;\n        }\n        if (isArray(this._weekdays)) {\n            return this._weekdays[getDay(date, isUTC)];\n        }\n        /** @type {?} */\n        const _key = this._weekdays.isFormat.test(format)\n            ? 'format'\n            : 'standalone';\n        return this._weekdays[_key][getDay(date, isUTC)];\n    }\n    /**\n     * @param {?=} date\n     * @param {?=} format\n     * @param {?=} isUTC\n     * @return {?}\n     */\n    weekdaysMin(date, format, isUTC) {\n        return date ? this._weekdaysMin[getDay(date, isUTC)] : this._weekdaysMin;\n    }\n    /**\n     * @param {?=} date\n     * @param {?=} format\n     * @param {?=} isUTC\n     * @return {?}\n     */\n    weekdaysShort(date, format, isUTC) {\n        return date ? this._weekdaysShort[getDay(date, isUTC)] : this._weekdaysShort;\n    }\n    // proto.weekdaysParse  =        localeWeekdaysParse;\n    /**\n     * @param {?=} weekdayName\n     * @param {?=} format\n     * @param {?=} strict\n     * @return {?}\n     */\n    weekdaysParse(weekdayName, format, strict) {\n        /** @type {?} */\n        let i;\n        /** @type {?} */\n        let regex;\n        if (this._weekdaysParseExact) {\n            return this.handleWeekStrictParse(weekdayName, format, strict);\n        }\n        if (!this._weekdaysParse) {\n            this._weekdaysParse = [];\n            this._minWeekdaysParse = [];\n            this._shortWeekdaysParse = [];\n            this._fullWeekdaysParse = [];\n        }\n        for (i = 0; i < 7; i++) {\n            // make the regex if we don't have it already\n            // fix: here is the issue\n            /** @type {?} */\n            const date = setDayOfWeek(new Date(Date.UTC(2000, 1)), i, null, true);\n            if (strict && !this._fullWeekdaysParse[i]) {\n                this._fullWeekdaysParse[i] = new RegExp(`^${this.weekdays(date, '', true).replace('.', '\\.?')}$`, 'i');\n                this._shortWeekdaysParse[i] = new RegExp(`^${this.weekdaysShort(date, '', true).replace('.', '\\.?')}$`, 'i');\n                this._minWeekdaysParse[i] = new RegExp(`^${this.weekdaysMin(date, '', true).replace('.', '\\.?')}$`, 'i');\n            }\n            if (!this._weekdaysParse[i]) {\n                regex = `^${this.weekdays(date, '', true)}|^${this.weekdaysShort(date, '', true)}|^${this.weekdaysMin(date, '', true)}`;\n                this._weekdaysParse[i] = new RegExp(regex.replace('.', ''), 'i');\n            }\n            if (!isArray(this._fullWeekdaysParse)\n                || !isArray(this._shortWeekdaysParse)\n                || !isArray(this._minWeekdaysParse)\n                || !isArray(this._weekdaysParse)) {\n                return;\n            }\n            // test the regex\n            if (strict && format === 'dddd' && this._fullWeekdaysParse[i].test(weekdayName)) {\n                return i;\n            }\n            else if (strict && format === 'ddd' && this._shortWeekdaysParse[i].test(weekdayName)) {\n                return i;\n            }\n            else if (strict && format === 'dd' && this._minWeekdaysParse[i].test(weekdayName)) {\n                return i;\n            }\n            else if (!strict && this._weekdaysParse[i].test(weekdayName)) {\n                return i;\n            }\n        }\n    }\n    // proto.weekdaysRegex       =        weekdaysRegex;\n    /**\n     * @param {?} isStrict\n     * @return {?}\n     */\n    weekdaysRegex(isStrict) {\n        if (this._weekdaysParseExact) {\n            if (!hasOwnProp(this, '_weekdaysRegex')) {\n                this.computeWeekdaysParse();\n            }\n            if (isStrict) {\n                return this._weekdaysStrictRegex;\n            }\n            else {\n                return this._weekdaysRegex;\n            }\n        }\n        else {\n            if (!hasOwnProp(this, '_weekdaysRegex')) {\n                this._weekdaysRegex = matchWord;\n            }\n            return this._weekdaysStrictRegex && isStrict ?\n                this._weekdaysStrictRegex : this._weekdaysRegex;\n        }\n    }\n    // proto.weekdaysShortRegex  =        weekdaysShortRegex;\n    // proto.weekdaysMinRegex    =        weekdaysMinRegex;\n    /**\n     * @param {?=} isStrict\n     * @return {?}\n     */\n    weekdaysShortRegex(isStrict) {\n        if (this._weekdaysParseExact) {\n            if (!hasOwnProp(this, '_weekdaysRegex')) {\n                this.computeWeekdaysParse();\n            }\n            if (isStrict) {\n                return this._weekdaysShortStrictRegex;\n            }\n            else {\n                return this._weekdaysShortRegex;\n            }\n        }\n        else {\n            if (!hasOwnProp(this, '_weekdaysShortRegex')) {\n                this._weekdaysShortRegex = matchWord;\n            }\n            return this._weekdaysShortStrictRegex && isStrict ?\n                this._weekdaysShortStrictRegex : this._weekdaysShortRegex;\n        }\n    }\n    /**\n     * @param {?=} isStrict\n     * @return {?}\n     */\n    weekdaysMinRegex(isStrict) {\n        if (this._weekdaysParseExact) {\n            if (!hasOwnProp(this, '_weekdaysRegex')) {\n                this.computeWeekdaysParse();\n            }\n            if (isStrict) {\n                return this._weekdaysMinStrictRegex;\n            }\n            else {\n                return this._weekdaysMinRegex;\n            }\n        }\n        else {\n            if (!hasOwnProp(this, '_weekdaysMinRegex')) {\n                this._weekdaysMinRegex = matchWord;\n            }\n            return this._weekdaysMinStrictRegex && isStrict ?\n                this._weekdaysMinStrictRegex : this._weekdaysMinRegex;\n        }\n    }\n    /**\n     * @param {?} input\n     * @return {?}\n     */\n    isPM(input) {\n        // IE8 Quirks Mode & IE7 Standards Mode do not allow accessing strings like arrays\n        // Using charAt should be more compatible.\n        return input.toLowerCase().charAt(0) === 'p';\n    }\n    /**\n     * @param {?} hours\n     * @param {?} minutes\n     * @param {?} isLower\n     * @return {?}\n     */\n    meridiem(hours, minutes, isLower) {\n        if (hours > 11) {\n            return isLower ? 'pm' : 'PM';\n        }\n        return isLower ? 'am' : 'AM';\n    }\n    /**\n     * @param {?} key\n     * @return {?}\n     */\n    formatLongDate(key) {\n        this._longDateFormat = this._longDateFormat ? this._longDateFormat : defaultLongDateFormat;\n        /** @type {?} */\n        const format = this._longDateFormat[key];\n        /** @type {?} */\n        const formatUpper = this._longDateFormat[key.toUpperCase()];\n        if (format || !formatUpper) {\n            return format;\n        }\n        this._longDateFormat[key] = formatUpper.replace(/MMMM|MM|DD|dddd/g, (/**\n         * @param {?} val\n         * @return {?}\n         */\n        (val) => {\n            return val.slice(1);\n        }));\n        return this._longDateFormat[key];\n    }\n    /**\n     * @private\n     * @param {?} monthName\n     * @param {?} format\n     * @param {?=} strict\n     * @return {?}\n     */\n    handleMonthStrictParse(monthName, format, strict) {\n        /** @type {?} */\n        const llc = monthName.toLocaleLowerCase();\n        /** @type {?} */\n        let i;\n        /** @type {?} */\n        let ii;\n        /** @type {?} */\n        let mom;\n        if (!this._monthsParse) {\n            // this is not used\n            this._monthsParse = [];\n            this._longMonthsParse = [];\n            this._shortMonthsParse = [];\n            for (i = 0; i < 12; ++i) {\n                mom = new Date(2000, i);\n                this._shortMonthsParse[i] = this.monthsShort(mom, '').toLocaleLowerCase();\n                this._longMonthsParse[i] = this.months(mom, '').toLocaleLowerCase();\n            }\n        }\n        if (strict) {\n            if (format === 'MMM') {\n                ii = ((/** @type {?} */ (this._shortMonthsParse))).indexOf(llc);\n                return ii !== -1 ? ii : null;\n            }\n            ii = ((/** @type {?} */ (this._longMonthsParse))).indexOf(llc);\n            return ii !== -1 ? ii : null;\n        }\n        if (format === 'MMM') {\n            ii = ((/** @type {?} */ (this._shortMonthsParse))).indexOf(llc);\n            if (ii !== -1) {\n                return ii;\n            }\n            ii = ((/** @type {?} */ (this._longMonthsParse))).indexOf(llc);\n            return ii !== -1 ? ii : null;\n        }\n        ii = ((/** @type {?} */ (this._longMonthsParse))).indexOf(llc);\n        if (ii !== -1) {\n            return ii;\n        }\n        ii = ((/** @type {?} */ (this._shortMonthsParse))).indexOf(llc);\n        return ii !== -1 ? ii : null;\n    }\n    /**\n     * @private\n     * @param {?} weekdayName\n     * @param {?} format\n     * @param {?} strict\n     * @return {?}\n     */\n    handleWeekStrictParse(weekdayName, format, strict) {\n        /** @type {?} */\n        let ii;\n        /** @type {?} */\n        const llc = weekdayName.toLocaleLowerCase();\n        if (!this._weekdaysParse) {\n            this._weekdaysParse = [];\n            this._shortWeekdaysParse = [];\n            this._minWeekdaysParse = [];\n            /** @type {?} */\n            let i;\n            for (i = 0; i < 7; ++i) {\n                /** @type {?} */\n                const date = setDayOfWeek(new Date(Date.UTC(2000, 1)), i, null, true);\n                this._minWeekdaysParse[i] = this.weekdaysMin(date).toLocaleLowerCase();\n                this._shortWeekdaysParse[i] = this.weekdaysShort(date).toLocaleLowerCase();\n                this._weekdaysParse[i] = this.weekdays(date, '').toLocaleLowerCase();\n            }\n        }\n        if (!isArray(this._weekdaysParse)\n            || !isArray(this._shortWeekdaysParse)\n            || !isArray(this._minWeekdaysParse)) {\n            return;\n        }\n        if (strict) {\n            if (format === 'dddd') {\n                ii = this._weekdaysParse.indexOf(llc);\n                return ii !== -1 ? ii : null;\n            }\n            else if (format === 'ddd') {\n                ii = this._shortWeekdaysParse.indexOf(llc);\n                return ii !== -1 ? ii : null;\n            }\n            else {\n                ii = this._minWeekdaysParse.indexOf(llc);\n                return ii !== -1 ? ii : null;\n            }\n        }\n        else {\n            if (format === 'dddd') {\n                ii = this._weekdaysParse.indexOf(llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = this._shortWeekdaysParse.indexOf(llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = this._minWeekdaysParse.indexOf(llc);\n                return ii !== -1 ? ii : null;\n            }\n            else if (format === 'ddd') {\n                ii = this._shortWeekdaysParse.indexOf(llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = this._weekdaysParse.indexOf(llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = this._minWeekdaysParse.indexOf(llc);\n                return ii !== -1 ? ii : null;\n            }\n            else {\n                ii = this._minWeekdaysParse.indexOf(llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = this._weekdaysParse.indexOf(llc);\n                if (ii !== -1) {\n                    return ii;\n                }\n                ii = this._shortWeekdaysParse.indexOf(llc);\n                return ii !== -1 ? ii : null;\n            }\n        }\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    computeMonthsParse() {\n        /** @type {?} */\n        const shortPieces = [];\n        /** @type {?} */\n        const longPieces = [];\n        /** @type {?} */\n        const mixedPieces = [];\n        /** @type {?} */\n        let date;\n        /** @type {?} */\n        let i;\n        for (i = 0; i < 12; i++) {\n            // make the regex if we don't have it already\n            date = new Date(2000, i);\n            shortPieces.push(this.monthsShort(date, ''));\n            longPieces.push(this.months(date, ''));\n            mixedPieces.push(this.months(date, ''));\n            mixedPieces.push(this.monthsShort(date, ''));\n        }\n        // Sorting makes sure if one month (or abbr) is a prefix of another it\n        // will match the longer piece.\n        shortPieces.sort(cmpLenRev);\n        longPieces.sort(cmpLenRev);\n        mixedPieces.sort(cmpLenRev);\n        for (i = 0; i < 12; i++) {\n            shortPieces[i] = regexEscape(shortPieces[i]);\n            longPieces[i] = regexEscape(longPieces[i]);\n        }\n        for (i = 0; i < 24; i++) {\n            mixedPieces[i] = regexEscape(mixedPieces[i]);\n        }\n        this._monthsRegex = new RegExp(`^(${mixedPieces.join('|')})`, 'i');\n        this._monthsShortRegex = this._monthsRegex;\n        this._monthsStrictRegex = new RegExp(`^(${longPieces.join('|')})`, 'i');\n        this._monthsShortStrictRegex = new RegExp(`^(${shortPieces.join('|')})`, 'i');\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    computeWeekdaysParse() {\n        /** @type {?} */\n        const minPieces = [];\n        /** @type {?} */\n        const shortPieces = [];\n        /** @type {?} */\n        const longPieces = [];\n        /** @type {?} */\n        const mixedPieces = [];\n        /** @type {?} */\n        let i;\n        for (i = 0; i < 7; i++) {\n            // make the regex if we don't have it already\n            // let mom = createUTC([2000, 1]).day(i);\n            /** @type {?} */\n            const date = setDayOfWeek(new Date(Date.UTC(2000, 1)), i, null, true);\n            /** @type {?} */\n            const minp = this.weekdaysMin(date);\n            /** @type {?} */\n            const shortp = this.weekdaysShort(date);\n            /** @type {?} */\n            const longp = this.weekdays(date);\n            minPieces.push(minp);\n            shortPieces.push(shortp);\n            longPieces.push(longp);\n            mixedPieces.push(minp);\n            mixedPieces.push(shortp);\n            mixedPieces.push(longp);\n        }\n        // Sorting makes sure if one weekday (or abbr) is a prefix of another it\n        // will match the longer piece.\n        minPieces.sort(cmpLenRev);\n        shortPieces.sort(cmpLenRev);\n        longPieces.sort(cmpLenRev);\n        mixedPieces.sort(cmpLenRev);\n        for (i = 0; i < 7; i++) {\n            shortPieces[i] = regexEscape(shortPieces[i]);\n            longPieces[i] = regexEscape(longPieces[i]);\n            mixedPieces[i] = regexEscape(mixedPieces[i]);\n        }\n        this._weekdaysRegex = new RegExp(`^(${mixedPieces.join('|')})`, 'i');\n        this._weekdaysShortRegex = this._weekdaysRegex;\n        this._weekdaysMinRegex = this._weekdaysRegex;\n        this._weekdaysStrictRegex = new RegExp(`^(${longPieces.join('|')})`, 'i');\n        this._weekdaysShortStrictRegex = new RegExp(`^(${shortPieces.join('|')})`, 'i');\n        this._weekdaysMinStrictRegex = new RegExp(`^(${minPieces.join('|')})`, 'i');\n    }\n}\nif (false) {\n    /** @type {?} */\n    Locale.prototype.parentLocale;\n    /** @type {?} */\n    Locale.prototype._abbr;\n    /** @type {?} */\n    Locale.prototype._config;\n    /** @type {?} */\n    Locale.prototype.meridiemHour;\n    /** @type {?} */\n    Locale.prototype._invalidDate;\n    /** @type {?} */\n    Locale.prototype._week;\n    /** @type {?} */\n    Locale.prototype._dayOfMonthOrdinalParse;\n    /** @type {?} */\n    Locale.prototype._ordinalParse;\n    /** @type {?} */\n    Locale.prototype._meridiemParse;\n    /**\n     * @type {?}\n     * @private\n     */\n    Locale.prototype._calendar;\n    /**\n     * @type {?}\n     * @private\n     */\n    Locale.prototype._relativeTime;\n    /**\n     * @type {?}\n     * @private\n     */\n    Locale.prototype._months;\n    /**\n     * @type {?}\n     * @private\n     */\n    Locale.prototype._monthsShort;\n    /**\n     * @type {?}\n     * @private\n     */\n    Locale.prototype._monthsRegex;\n    /**\n     * @type {?}\n     * @private\n     */\n    Locale.prototype._monthsShortRegex;\n    /**\n     * @type {?}\n     * @private\n     */\n    Locale.prototype._monthsStrictRegex;\n    /**\n     * @type {?}\n     * @private\n     */\n    Locale.prototype._monthsShortStrictRegex;\n    /**\n     * @type {?}\n     * @private\n     */\n    Locale.prototype._monthsParse;\n    /**\n     * @type {?}\n     * @private\n     */\n    Locale.prototype._longMonthsParse;\n    /**\n     * @type {?}\n     * @private\n     */\n    Locale.prototype._shortMonthsParse;\n    /**\n     * @type {?}\n     * @private\n     */\n    Locale.prototype._monthsParseExact;\n    /**\n     * @type {?}\n     * @private\n     */\n    Locale.prototype._weekdaysParseExact;\n    /**\n     * @type {?}\n     * @private\n     */\n    Locale.prototype._weekdaysRegex;\n    /**\n     * @type {?}\n     * @private\n     */\n    Locale.prototype._weekdaysShortRegex;\n    /**\n     * @type {?}\n     * @private\n     */\n    Locale.prototype._weekdaysMinRegex;\n    /**\n     * @type {?}\n     * @private\n     */\n    Locale.prototype._weekdaysStrictRegex;\n    /**\n     * @type {?}\n     * @private\n     */\n    Locale.prototype._weekdaysShortStrictRegex;\n    /**\n     * @type {?}\n     * @private\n     */\n    Locale.prototype._weekdaysMinStrictRegex;\n    /**\n     * @type {?}\n     * @private\n     */\n    Locale.prototype._weekdays;\n    /**\n     * @type {?}\n     * @private\n     */\n    Locale.prototype._weekdaysShort;\n    /**\n     * @type {?}\n     * @private\n     */\n    Locale.prototype._weekdaysMin;\n    /**\n     * @type {?}\n     * @private\n     */\n    Locale.prototype._weekdaysParse;\n    /**\n     * @type {?}\n     * @private\n     */\n    Locale.prototype._minWeekdaysParse;\n    /**\n     * @type {?}\n     * @private\n     */\n    Locale.prototype._shortWeekdaysParse;\n    /**\n     * @type {?}\n     * @private\n     */\n    Locale.prototype._fullWeekdaysParse;\n    /**\n     * @type {?}\n     * @private\n     */\n    Locale.prototype._longDateFormat;\n    /**\n     * @type {?}\n     * @private\n     */\n    Locale.prototype._ordinal;\n}\n/**\n * @param {?} a\n * @param {?} b\n * @return {?}\n */\nfunction cmpLenRev(a, b) {\n    return b.length - a.length;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst defaultCalendar = {\n    sameDay: '[Today at] LT',\n    nextDay: '[Tomorrow at] LT',\n    nextWeek: 'dddd [at] LT',\n    lastDay: '[Yesterday at] LT',\n    lastWeek: '[Last] dddd [at] LT',\n    sameElse: 'L'\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst defaultInvalidDate = 'Invalid date';\n/** @type {?} */\nconst defaultLocaleWeek = {\n    dow: 0,\n    // Sunday is the first day of the week.\n    doy: 6 // The week that contains Jan 1st is the first week of the year.\n};\n/** @type {?} */\nconst defaultLocaleMeridiemParse = /[ap]\\.?m?\\.?/i;\n/** @type {?} */\nconst defaultRelativeTime = {\n    future: 'in %s',\n    past: '%s ago',\n    s: 'a few seconds',\n    ss: '%d seconds',\n    m: 'a minute',\n    mm: '%d minutes',\n    h: 'an hour',\n    hh: '%d hours',\n    d: 'a day',\n    dd: '%d days',\n    M: 'a month',\n    MM: '%d months',\n    y: 'a year',\n    yy: '%d years'\n};\n/** @type {?} */\nconst baseConfig = {\n    calendar: defaultCalendar,\n    longDateFormat: defaultLongDateFormat,\n    invalidDate: defaultInvalidDate,\n    ordinal: defaultOrdinal,\n    dayOfMonthOrdinalParse: defaultDayOfMonthOrdinalParse,\n    relativeTime: defaultRelativeTime,\n    months: defaultLocaleMonths,\n    monthsShort: defaultLocaleMonthsShort,\n    week: defaultLocaleWeek,\n    weekdays: defaultLocaleWeekdays,\n    weekdaysMin: defaultLocaleWeekdaysMin,\n    weekdaysShort: defaultLocaleWeekdaysShort,\n    meridiemParse: defaultLocaleMeridiemParse\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @template T\n * @param {?} array1\n * @param {?} array2\n * @param {?} dontConvert\n * @return {?}\n */\nfunction compareArrays(array1, array2, dontConvert) {\n    /** @type {?} */\n    const len = Math.min(array1.length, array2.length);\n    /** @type {?} */\n    const lengthDiff = Math.abs(array1.length - array2.length);\n    /** @type {?} */\n    let diffs = 0;\n    /** @type {?} */\n    let i;\n    for (i = 0; i < len; i++) {\n        if ((dontConvert && array1[i] !== array2[i])\n            || (!dontConvert && toInt(array1[i]) !== toInt(array2[i]))) {\n            diffs++;\n        }\n    }\n    return diffs + lengthDiff;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// FORMATTING\n/**\n * @return {?}\n */\nfunction initWeek() {\n    addFormatToken('w', ['ww', 2, false], 'wo', (/**\n     * @param {?} date\n     * @param {?} opts\n     * @return {?}\n     */\n    function (date, opts) {\n        return getWeek(date, opts.locale)\n            .toString(10);\n    }));\n    addFormatToken('W', ['WW', 2, false], 'Wo', (/**\n     * @param {?} date\n     * @return {?}\n     */\n    function (date) {\n        return getISOWeek(date)\n            .toString(10);\n    }));\n    // ALIASES\n    addUnitAlias('week', 'w');\n    addUnitAlias('isoWeek', 'W');\n    // PRIORITIES\n    addUnitPriority('week', 5);\n    addUnitPriority('isoWeek', 5);\n    // PARSING\n    addRegexToken('w', match1to2);\n    addRegexToken('ww', match1to2, match2);\n    addRegexToken('W', match1to2);\n    addRegexToken('WW', match1to2, match2);\n    addWeekParseToken(['w', 'ww', 'W', 'WW'], (/**\n     * @param {?} input\n     * @param {?} week\n     * @param {?} config\n     * @param {?} token\n     * @return {?}\n     */\n    function (input, week, config, token) {\n        week[token.substr(0, 1)] = toInt(input);\n        return config;\n    }));\n    // export function getSetWeek (input) {\n    //   var week = this.localeData().week(this);\n    //   return input == null ? week : this.add((input - week) * 7, 'd');\n    // }\n}\n/**\n * @param {?} date\n * @param {?} input\n * @param {?=} locale\n * @return {?}\n */\nfunction setWeek(date, input, locale = getLocale()) {\n    /** @type {?} */\n    const week = getWeek(date, locale);\n    return add(date, (input - week) * 7, 'day');\n}\n/**\n * @param {?} date\n * @param {?=} locale\n * @param {?=} isUTC\n * @return {?}\n */\nfunction getWeek(date, locale = getLocale(), isUTC) {\n    return locale.week(date, isUTC);\n}\n// export function getSetISOWeek (input) {\n//   var week = weekOfYear(this, 1, 4).week;\n//   return input == null ? week : this.add((input - week) * 7, 'd');\n// }\n/**\n * @param {?} date\n * @param {?} input\n * @return {?}\n */\nfunction setISOWeek(date, input) {\n    /** @type {?} */\n    const week = getISOWeek(date);\n    return add(date, (input - week) * 7, 'day');\n}\n/**\n * @param {?} date\n * @param {?=} isUTC\n * @return {?}\n */\nfunction getISOWeek(date, isUTC) {\n    return weekOfYear(date, 1, 4, isUTC).week;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// FORMATTING\n/**\n * @return {?}\n */\nfunction initWeekYear() {\n    addFormatToken(null, ['gg', 2, false], null, (/**\n     * @param {?} date\n     * @param {?} opts\n     * @return {?}\n     */\n    function (date, opts) {\n        // return this.weekYear() % 100;\n        return (getWeekYear(date, opts.locale) % 100).toString();\n    }));\n    addFormatToken(null, ['GG', 2, false], null, (/**\n     * @param {?} date\n     * @return {?}\n     */\n    function (date) {\n        // return this.isoWeekYear() % 100;\n        return (getISOWeekYear(date) % 100).toString();\n    }));\n    addWeekYearFormatToken('gggg', _getWeekYearFormatCb);\n    addWeekYearFormatToken('ggggg', _getWeekYearFormatCb);\n    addWeekYearFormatToken('GGGG', _getISOWeekYearFormatCb);\n    addWeekYearFormatToken('GGGGG', _getISOWeekYearFormatCb);\n    // ALIASES\n    addUnitAlias('weekYear', 'gg');\n    addUnitAlias('isoWeekYear', 'GG');\n    // PRIORITY\n    addUnitPriority('weekYear', 1);\n    addUnitPriority('isoWeekYear', 1);\n    // PARSING\n    addRegexToken('G', matchSigned);\n    addRegexToken('g', matchSigned);\n    addRegexToken('GG', match1to2, match2);\n    addRegexToken('gg', match1to2, match2);\n    addRegexToken('GGGG', match1to4, match4);\n    addRegexToken('gggg', match1to4, match4);\n    addRegexToken('GGGGG', match1to6, match6);\n    addRegexToken('ggggg', match1to6, match6);\n    addWeekParseToken(['gggg', 'ggggg', 'GGGG', 'GGGGG'], (/**\n     * @param {?} input\n     * @param {?} week\n     * @param {?} config\n     * @param {?} token\n     * @return {?}\n     */\n    function (input, week, config, token) {\n        week[token.substr(0, 2)] = toInt(input);\n        return config;\n    }));\n    addWeekParseToken(['gg', 'GG'], (/**\n     * @param {?} input\n     * @param {?} week\n     * @param {?} config\n     * @param {?} token\n     * @return {?}\n     */\n    function (input, week, config, token) {\n        week[token] = parseTwoDigitYear(input);\n        return config;\n    }));\n}\n/**\n * @param {?} token\n * @param {?} getter\n * @return {?}\n */\nfunction addWeekYearFormatToken(token, getter) {\n    addFormatToken(null, [token, token.length, false], null, getter);\n}\n/**\n * @param {?} date\n * @param {?} opts\n * @return {?}\n */\nfunction _getWeekYearFormatCb(date, opts) {\n    return getWeekYear(date, opts.locale).toString();\n}\n/**\n * @param {?} date\n * @return {?}\n */\nfunction _getISOWeekYearFormatCb(date) {\n    return getISOWeekYear(date).toString();\n}\n// MOMENTS\n/**\n * @param {?} date\n * @param {?} input\n * @param {?=} locale\n * @param {?=} isUTC\n * @return {?}\n */\nfunction getSetWeekYear(date, input, locale = getLocale(), isUTC) {\n    return getSetWeekYearHelper(date, input, \n    // this.week(),\n    getWeek(date, locale, isUTC), \n    // this.weekday(),\n    getLocaleDayOfWeek(date, locale, isUTC), locale.firstDayOfWeek(), locale.firstDayOfYear(), isUTC);\n}\n/**\n * @param {?} date\n * @param {?=} locale\n * @param {?=} isUTC\n * @return {?}\n */\nfunction getWeekYear(date, locale = getLocale(), isUTC) {\n    return weekOfYear(date, locale.firstDayOfWeek(), locale.firstDayOfYear(), isUTC).year;\n}\n/**\n * @param {?} date\n * @param {?} input\n * @param {?=} isUTC\n * @return {?}\n */\nfunction getSetISOWeekYear(date, input, isUTC) {\n    return getSetWeekYearHelper(date, input, getISOWeek(date, isUTC), getISODayOfWeek(date, isUTC), 1, 4);\n}\n/**\n * @param {?} date\n * @param {?=} isUTC\n * @return {?}\n */\nfunction getISOWeekYear(date, isUTC) {\n    return weekOfYear(date, 1, 4, isUTC).year;\n}\n/**\n * @param {?} date\n * @param {?=} isUTC\n * @return {?}\n */\nfunction getISOWeeksInYear(date, isUTC) {\n    return weeksInYear(getFullYear(date, isUTC), 1, 4);\n}\n/**\n * @param {?} date\n * @param {?=} isUTC\n * @param {?=} locale\n * @return {?}\n */\nfunction getWeeksInYear(date, isUTC, locale = getLocale()) {\n    return weeksInYear(getFullYear(date, isUTC), locale.firstDayOfWeek(), locale.firstDayOfYear());\n}\n/**\n * @param {?} date\n * @param {?} input\n * @param {?} week\n * @param {?} weekday\n * @param {?} dow\n * @param {?} doy\n * @param {?=} isUTC\n * @return {?}\n */\nfunction getSetWeekYearHelper(date, input, week, weekday, dow, doy, isUTC) {\n    if (!input) {\n        return getWeekYear(date, void 0, isUTC);\n    }\n    /** @type {?} */\n    const weeksTarget = weeksInYear(input, dow, doy);\n    /** @type {?} */\n    const _week = week > weeksTarget ? weeksTarget : week;\n    return setWeekAll(date, input, _week, weekday, dow, doy);\n}\n/**\n * @param {?} date\n * @param {?} weekYear\n * @param {?} week\n * @param {?} weekday\n * @param {?} dow\n * @param {?} doy\n * @return {?}\n */\nfunction setWeekAll(date, weekYear, week, weekday, dow, doy) {\n    /** @type {?} */\n    const dayOfYearData = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy);\n    /** @type {?} */\n    const _date = createUTCDate(dayOfYearData.year, 0, dayOfYearData.dayOfYear);\n    setFullYear(date, getFullYear(_date, true), true);\n    setMonth(date, getMonth(_date, true), true);\n    setDate(date, getDate(_date, true), true);\n    return date;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// todo: add support for timezones\n/**\n * @return {?}\n */\nfunction initTimezone() {\n    // FORMATTING\n    addFormatToken('z', null, null, (/**\n     * @param {?} date\n     * @param {?} opts\n     * @return {?}\n     */\n    function (date, opts) {\n        return opts.isUTC ? 'UTC' : '';\n    }));\n    addFormatToken('zz', null, null, (/**\n     * @param {?} date\n     * @param {?} opts\n     * @return {?}\n     */\n    function (date, opts) {\n        return opts.isUTC ? 'Coordinated Universal Time' : '';\n    }));\n}\n// MOMENTS\n/**\n * @param {?} isUTC\n * @return {?}\n */\nfunction getZoneAbbr(isUTC) {\n    return isUTC ? 'UTC' : '';\n}\n/**\n * @param {?} isUTC\n * @return {?}\n */\nfunction getZoneName(isUTC) {\n    return isUTC ? 'Coordinated Universal Time' : '';\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @return {?}\n */\nfunction initTimestamp() {\n    // FORMATTING\n    addFormatToken('X', null, null, (/**\n     * @param {?} date\n     * @return {?}\n     */\n    function (date) {\n        return unix(date)\n            .toString(10);\n    }));\n    addFormatToken('x', null, null, (/**\n     * @param {?} date\n     * @return {?}\n     */\n    function (date) {\n        return date.valueOf()\n            .toString(10);\n    }));\n    // PARSING\n    addRegexToken('x', matchSigned);\n    addRegexToken('X', matchTimestamp);\n    addParseToken('X', (/**\n     * @param {?} input\n     * @param {?} array\n     * @param {?} config\n     * @return {?}\n     */\n    function (input, array, config) {\n        config._d = new Date(parseFloat(input) * 1000);\n        return config;\n    }));\n    addParseToken('x', (/**\n     * @param {?} input\n     * @param {?} array\n     * @param {?} config\n     * @return {?}\n     */\n    function (input, array, config) {\n        config._d = new Date(toInt(input));\n        return config;\n    }));\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @return {?}\n */\nfunction initSecond() {\n    // FORMATTING\n    addFormatToken('s', ['ss', 2, false], null, (/**\n     * @param {?} date\n     * @param {?} opts\n     * @return {?}\n     */\n    function (date, opts) {\n        return getSeconds(date, opts.isUTC)\n            .toString(10);\n    }));\n    // ALIASES\n    addUnitAlias('second', 's');\n    // PRIORITY\n    addUnitPriority('second', 15);\n    // PARSING\n    addRegexToken('s', match1to2);\n    addRegexToken('ss', match1to2, match2);\n    addParseToken(['s', 'ss'], SECOND);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @return {?}\n */\nfunction initQuarter() {\n    // FORMATTING\n    addFormatToken('Q', null, 'Qo', (/**\n     * @param {?} date\n     * @param {?} opts\n     * @return {?}\n     */\n    function (date, opts) {\n        return getQuarter(date, opts.isUTC)\n            .toString(10);\n    }));\n    // ALIASES\n    addUnitAlias('quarter', 'Q');\n    // PRIORITY\n    addUnitPriority('quarter', 7);\n    // PARSING\n    addRegexToken('Q', match1);\n    addParseToken('Q', (/**\n     * @param {?} input\n     * @param {?} array\n     * @param {?} config\n     * @return {?}\n     */\n    function (input, array, config) {\n        array[MONTH] = (toInt(input) - 1) * 3;\n        return config;\n    }));\n}\n// MOMENTS\n/**\n * @param {?} date\n * @param {?=} isUTC\n * @return {?}\n */\nfunction getQuarter(date, isUTC = false) {\n    return Math.ceil((getMonth(date, isUTC) + 1) / 3);\n}\n/**\n * @param {?} date\n * @param {?} quarter\n * @param {?=} isUTC\n * @return {?}\n */\nfunction setQuarter(date, quarter, isUTC) {\n    return setMonth(date, (quarter - 1) * 3 + getMonth(date, isUTC) % 3, isUTC);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @param {?} token\n * @param {?} separator\n * @return {?}\n */\nfunction addOffsetFormatToken(token, separator) {\n    addFormatToken(token, null, null, (/**\n     * @param {?} date\n     * @param {?} config\n     * @return {?}\n     */\n    function (date, config) {\n        /** @type {?} */\n        let offset = getUTCOffset(date, { _isUTC: config.isUTC, _offset: config.offset });\n        /** @type {?} */\n        let sign = '+';\n        if (offset < 0) {\n            offset = -offset;\n            sign = '-';\n        }\n        return sign + zeroFill(~~(offset / 60), 2) + separator + zeroFill(~~(offset) % 60, 2);\n    }));\n}\n/**\n * @return {?}\n */\nfunction initOffset() {\n    addOffsetFormatToken('Z', ':');\n    addOffsetFormatToken('ZZ', '');\n    // PARSING\n    addRegexToken('Z', matchShortOffset);\n    addRegexToken('ZZ', matchShortOffset);\n    addParseToken(['Z', 'ZZ'], (/**\n     * @param {?} input\n     * @param {?} array\n     * @param {?} config\n     * @return {?}\n     */\n    function (input, array, config) {\n        config._useUTC = true;\n        config._tzm = offsetFromString(matchShortOffset, input);\n        return config;\n    }));\n}\n// HELPERS\n// timezone chunker\n// '+10:00' > ['10',  '00']\n// '-1530'  > ['-15', '30']\n/** @type {?} */\nconst chunkOffset = /([\\+\\-]|\\d\\d)/gi;\n/**\n * @param {?} matcher\n * @param {?} str\n * @return {?}\n */\nfunction offsetFromString(matcher, str) {\n    /** @type {?} */\n    const matches = (str || '').match(matcher);\n    if (matches === null) {\n        return null;\n    }\n    /** @type {?} */\n    const chunk = matches[matches.length - 1];\n    /** @type {?} */\n    const parts = chunk.match(chunkOffset) || ['-', '0', '0'];\n    /** @type {?} */\n    const minutes = parseInt(parts[1], 10) * 60 + toInt(parts[2]);\n    /** @type {?} */\n    const _min = parts[0] === '+' ? minutes : -minutes;\n    return minutes === 0 ? 0 : _min;\n}\n// Return a moment from input, that is local/utc/zone equivalent to model.\n/**\n * @param {?} input\n * @param {?} date\n * @param {?=} config\n * @return {?}\n */\nfunction cloneWithOffset(input, date, config = {}) {\n    if (!config._isUTC) {\n        return input;\n    }\n    /** @type {?} */\n    const res = cloneDate(date);\n    // todo: input._d - res._d + ((res._offset || 0) - (input._offset || 0))*60000\n    /** @type {?} */\n    const offsetDiff = (config._offset || 0) * 60000;\n    /** @type {?} */\n    const diff = input.valueOf() - res.valueOf() + offsetDiff;\n    // Use low-level api, because this fn is low-level api.\n    res.setTime(res.valueOf() + diff);\n    // todo: add timezone handling\n    // hooks.updateOffset(res, false);\n    return res;\n}\n/**\n * @param {?} date\n * @return {?}\n */\nfunction getDateOffset(date) {\n    // On Firefox.24 Date#getTimezoneOffset returns a floating point.\n    // https://github.com/moment/moment/pull/1871\n    return -Math.round(date.getTimezoneOffset() / 15) * 15;\n}\n// HOOKS\n// This function will be called whenever a moment is mutated.\n// It is intended to keep the offset in sync with the timezone.\n// todo: it's from moment timezones\n// hooks.updateOffset = function () {\n// };\n// MOMENTS\n// keepLocalTime = true means only change the timezone, without\n// affecting the local hour. So 5:31:26 +0300 --[utcOffset(2, true)]-->\n// 5:31:26 +0200 It is possible that 5:31:26 doesn't exist with offset\n// +0200, so we adjust the time as needed, to be valid.\n//\n// Keeping the time actually adds/subtracts (one hour)\n// from the actual represented time. That is why we call updateOffset\n// a second time. In case it wants us to change the offset again\n// _changeInProgress == true case, then we have to adjust, because\n// there is no such time in the given timezone.\n/**\n * @param {?} date\n * @param {?=} config\n * @return {?}\n */\nfunction getUTCOffset(date, config = {}) {\n    /** @type {?} */\n    const _offset = config._offset || 0;\n    return config._isUTC ? _offset : getDateOffset(date);\n}\n/**\n * @param {?} date\n * @param {?} input\n * @param {?=} keepLocalTime\n * @param {?=} keepMinutes\n * @param {?=} config\n * @return {?}\n */\nfunction setUTCOffset(date, input, keepLocalTime, keepMinutes, config = {}) {\n    /** @type {?} */\n    const offset = config._offset || 0;\n    /** @type {?} */\n    let localAdjust;\n    /** @type {?} */\n    let _input = input;\n    /** @type {?} */\n    let _date = date;\n    if (isString(_input)) {\n        _input = offsetFromString(matchShortOffset, _input);\n        if (_input === null) {\n            return _date;\n        }\n    }\n    else if (isNumber(_input) && Math.abs(_input) < 16 && !keepMinutes) {\n        _input = _input * 60;\n    }\n    if (!config._isUTC && keepLocalTime) {\n        localAdjust = getDateOffset(_date);\n    }\n    config._offset = _input;\n    config._isUTC = true;\n    if (localAdjust != null) {\n        _date = add(_date, localAdjust, 'minutes');\n    }\n    if (offset !== _input) {\n        if (!keepLocalTime || config._changeInProgress) {\n            _date = add(_date, _input - offset, 'minutes', config._isUTC);\n            // addSubtract(this, createDuration(_input - offset, 'm'), 1, false);\n        }\n        else if (!config._changeInProgress) {\n            config._changeInProgress = true;\n            // todo: add timezone handling\n            // hooks.updateOffset(this, true);\n            config._changeInProgress = null;\n        }\n    }\n    return _date;\n}\n/*\nexport function getSetZone(input, keepLocalTime) {\n  if (input != null) {\n    if (typeof input !== 'string') {\n      input = -input;\n    }\n\n    this.utcOffset(input, keepLocalTime);\n\n    return this;\n  } else {\n    return -this.utcOffset();\n  }\n}\n*/\n/**\n * @param {?} date\n * @param {?=} keepLocalTime\n * @return {?}\n */\nfunction setOffsetToUTC(date, keepLocalTime) {\n    return setUTCOffset(date, 0, keepLocalTime);\n}\n/**\n * @param {?} date\n * @return {?}\n */\nfunction isDaylightSavingTime(date) {\n    return (getUTCOffset(date) > getUTCOffset(setMonth(cloneDate(date), 0))\n        || getUTCOffset(date) > getUTCOffset(setMonth(cloneDate(date), 5)));\n}\n/*export function setOffsetToLocal(date: Date, isUTC?: boolean, keepLocalTime?: boolean) {\n  if (this._isUTC) {\n    this.utcOffset(0, keepLocalTime);\n    this._isUTC = false;\n\n    if (keepLocalTime) {\n      this.subtract(getDateOffset(this), 'm');\n    }\n  }\n  return this;\n}*/\n/**\n * @param {?} date\n * @param {?} input\n * @param {?=} config\n * @return {?}\n */\nfunction setOffsetToParsedOffset(date, input, config = {}) {\n    if (config._tzm != null) {\n        return setUTCOffset(date, config._tzm, false, true, config);\n    }\n    if (isString(input)) {\n        /** @type {?} */\n        const tZone = offsetFromString(matchOffset, input);\n        if (tZone != null) {\n            return setUTCOffset(date, tZone, false, false, config);\n        }\n        return setUTCOffset(date, 0, true, false, config);\n    }\n    return date;\n}\n/**\n * @param {?} date\n * @param {?=} input\n * @return {?}\n */\nfunction hasAlignedHourOffset(date, input) {\n    /** @type {?} */\n    const _input = input ? getUTCOffset(input, { _isUTC: false }) : 0;\n    return (getUTCOffset(date) - _input) % 60 === 0;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @return {?}\n */\nfunction initMinute() {\n    // FORMATTING\n    addFormatToken('m', ['mm', 2, false], null, (/**\n     * @param {?} date\n     * @param {?} opts\n     * @return {?}\n     */\n    function (date, opts) {\n        return getMinutes(date, opts.isUTC)\n            .toString(10);\n    }));\n    // ALIASES\n    addUnitAlias('minute', 'm');\n    // PRIORITY\n    addUnitPriority('minute', 14);\n    // PARSING\n    addRegexToken('m', match1to2);\n    addRegexToken('mm', match1to2, match2);\n    addParseToken(['m', 'mm'], MINUTE);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @return {?}\n */\nfunction initMillisecond() {\n    addFormatToken('S', null, null, (/**\n     * @param {?} date\n     * @param {?} opts\n     * @return {?}\n     */\n    function (date, opts) {\n        return (~~(getMilliseconds(date, opts.isUTC) / 100)).toString(10);\n    }));\n    addFormatToken(null, ['SS', 2, false], null, (/**\n     * @param {?} date\n     * @param {?} opts\n     * @return {?}\n     */\n    function (date, opts) {\n        return (~~(getMilliseconds(date, opts.isUTC) / 10)).toString(10);\n    }));\n    addFormatToken(null, ['SSS', 3, false], null, (/**\n     * @param {?} date\n     * @param {?} opts\n     * @return {?}\n     */\n    function (date, opts) {\n        return (getMilliseconds(date, opts.isUTC)).toString(10);\n    }));\n    addFormatToken(null, ['SSSS', 4, false], null, (/**\n     * @param {?} date\n     * @param {?} opts\n     * @return {?}\n     */\n    function (date, opts) {\n        return (getMilliseconds(date, opts.isUTC) * 10).toString(10);\n    }));\n    addFormatToken(null, ['SSSSS', 5, false], null, (/**\n     * @param {?} date\n     * @param {?} opts\n     * @return {?}\n     */\n    function (date, opts) {\n        return (getMilliseconds(date, opts.isUTC) * 100).toString(10);\n    }));\n    addFormatToken(null, ['SSSSSS', 6, false], null, (/**\n     * @param {?} date\n     * @param {?} opts\n     * @return {?}\n     */\n    function (date, opts) {\n        return (getMilliseconds(date, opts.isUTC) * 1000).toString(10);\n    }));\n    addFormatToken(null, ['SSSSSSS', 7, false], null, (/**\n     * @param {?} date\n     * @param {?} opts\n     * @return {?}\n     */\n    function (date, opts) {\n        return (getMilliseconds(date, opts.isUTC) * 10000).toString(10);\n    }));\n    addFormatToken(null, ['SSSSSSSS', 8, false], null, (/**\n     * @param {?} date\n     * @param {?} opts\n     * @return {?}\n     */\n    function (date, opts) {\n        return (getMilliseconds(date, opts.isUTC) * 100000).toString(10);\n    }));\n    addFormatToken(null, ['SSSSSSSSS', 9, false], null, (/**\n     * @param {?} date\n     * @param {?} opts\n     * @return {?}\n     */\n    function (date, opts) {\n        return (getMilliseconds(date, opts.isUTC) * 1000000).toString(10);\n    }));\n    // ALIASES\n    addUnitAlias('millisecond', 'ms');\n    // PRIORITY\n    addUnitPriority('millisecond', 16);\n    // PARSING\n    addRegexToken('S', match1to3, match1);\n    addRegexToken('SS', match1to3, match2);\n    addRegexToken('SSS', match1to3, match3);\n    /** @type {?} */\n    let token;\n    for (token = 'SSSS'; token.length <= 9; token += 'S') {\n        addRegexToken(token, matchUnsigned);\n    }\n    /**\n     * @param {?} input\n     * @param {?} array\n     * @param {?} config\n     * @return {?}\n     */\n    function parseMs(input, array, config) {\n        array[MILLISECOND] = toInt(parseFloat(`0.${input}`) * 1000);\n        return config;\n    }\n    for (token = 'S'; token.length <= 9; token += 'S') {\n        addParseToken(token, parseMs);\n    }\n    // MOMENTS\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @return {?}\n */\nfunction initHour() {\n    // FORMATTING\n    // FORMATTING\n    /**\n     * @param {?} date\n     * @param {?} isUTC\n     * @return {?}\n     */\n    function hFormat(date, isUTC) {\n        return getHours(date, isUTC) % 12 || 12;\n    }\n    /**\n     * @param {?} date\n     * @param {?} isUTC\n     * @return {?}\n     */\n    function kFormat(date, isUTC) {\n        return getHours(date, isUTC) || 24;\n    }\n    addFormatToken('H', ['HH', 2, false], null, (/**\n     * @param {?} date\n     * @param {?} opts\n     * @return {?}\n     */\n    function (date, opts) {\n        return getHours(date, opts.isUTC)\n            .toString(10);\n    }));\n    addFormatToken('h', ['hh', 2, false], null, (/**\n     * @param {?} date\n     * @param {?} opts\n     * @return {?}\n     */\n    function (date, opts) {\n        return hFormat(date, opts.isUTC)\n            .toString(10);\n    }));\n    addFormatToken('k', ['kk', 2, false], null, (/**\n     * @param {?} date\n     * @param {?} opts\n     * @return {?}\n     */\n    function (date, opts) {\n        return kFormat(date, opts.isUTC)\n            .toString(10);\n    }));\n    addFormatToken('hmm', null, null, (/**\n     * @param {?} date\n     * @param {?} opts\n     * @return {?}\n     */\n    function (date, opts) {\n        /** @type {?} */\n        const _h = hFormat(date, opts.isUTC);\n        /** @type {?} */\n        const _mm = zeroFill(getMinutes(date, opts.isUTC), 2);\n        return `${_h}${_mm}`;\n    }));\n    addFormatToken('hmmss', null, null, (/**\n     * @param {?} date\n     * @param {?} opts\n     * @return {?}\n     */\n    function (date, opts) {\n        /** @type {?} */\n        const _h = hFormat(date, opts.isUTC);\n        /** @type {?} */\n        const _mm = zeroFill(getMinutes(date, opts.isUTC), 2);\n        /** @type {?} */\n        const _ss = zeroFill(getSeconds(date, opts.isUTC), 2);\n        return `${_h}${_mm}${_ss}`;\n    }));\n    addFormatToken('Hmm', null, null, (/**\n     * @param {?} date\n     * @param {?} opts\n     * @return {?}\n     */\n    function (date, opts) {\n        /** @type {?} */\n        const _H = getHours(date, opts.isUTC);\n        /** @type {?} */\n        const _mm = zeroFill(getMinutes(date, opts.isUTC), 2);\n        return `${_H}${_mm}`;\n    }));\n    addFormatToken('Hmmss', null, null, (/**\n     * @param {?} date\n     * @param {?} opts\n     * @return {?}\n     */\n    function (date, opts) {\n        /** @type {?} */\n        const _H = getHours(date, opts.isUTC);\n        /** @type {?} */\n        const _mm = zeroFill(getMinutes(date, opts.isUTC), 2);\n        /** @type {?} */\n        const _ss = zeroFill(getSeconds(date, opts.isUTC), 2);\n        return `${_H}${_mm}${_ss}`;\n    }));\n    /**\n     * @param {?} token\n     * @param {?} lowercase\n     * @return {?}\n     */\n    function meridiem(token, lowercase) {\n        addFormatToken(token, null, null, (/**\n         * @param {?} date\n         * @param {?} opts\n         * @return {?}\n         */\n        function (date, opts) {\n            return opts.locale.meridiem(getHours(date, opts.isUTC), getMinutes(date, opts.isUTC), lowercase);\n        }));\n    }\n    meridiem('a', true);\n    meridiem('A', false);\n    // ALIASES\n    addUnitAlias('hour', 'h');\n    // PRIORITY\n    addUnitPriority('hour', 13);\n    // PARSING\n    /**\n     * @param {?} isStrict\n     * @param {?} locale\n     * @return {?}\n     */\n    function matchMeridiem(isStrict, locale) {\n        return locale._meridiemParse;\n    }\n    addRegexToken('a', matchMeridiem);\n    addRegexToken('A', matchMeridiem);\n    addRegexToken('H', match1to2);\n    addRegexToken('h', match1to2);\n    addRegexToken('k', match1to2);\n    addRegexToken('HH', match1to2, match2);\n    addRegexToken('hh', match1to2, match2);\n    addRegexToken('kk', match1to2, match2);\n    addRegexToken('hmm', match3to4);\n    addRegexToken('hmmss', match5to6);\n    addRegexToken('Hmm', match3to4);\n    addRegexToken('Hmmss', match5to6);\n    addParseToken(['H', 'HH'], HOUR);\n    addParseToken(['k', 'kk'], (/**\n     * @param {?} input\n     * @param {?} array\n     * @param {?} config\n     * @return {?}\n     */\n    function (input, array, config) {\n        /** @type {?} */\n        const kInput = toInt(input);\n        array[HOUR] = kInput === 24 ? 0 : kInput;\n        return config;\n    }));\n    addParseToken(['a', 'A'], (/**\n     * @param {?} input\n     * @param {?} array\n     * @param {?} config\n     * @return {?}\n     */\n    function (input, array, config) {\n        config._isPm = config._locale.isPM(input);\n        config._meridiem = input;\n        return config;\n    }));\n    addParseToken(['h', 'hh'], (/**\n     * @param {?} input\n     * @param {?} array\n     * @param {?} config\n     * @return {?}\n     */\n    function (input, array, config) {\n        array[HOUR] = toInt(input);\n        getParsingFlags(config).bigHour = true;\n        return config;\n    }));\n    addParseToken('hmm', (/**\n     * @param {?} input\n     * @param {?} array\n     * @param {?} config\n     * @return {?}\n     */\n    function (input, array, config) {\n        /** @type {?} */\n        const pos = input.length - 2;\n        array[HOUR] = toInt(input.substr(0, pos));\n        array[MINUTE] = toInt(input.substr(pos));\n        getParsingFlags(config).bigHour = true;\n        return config;\n    }));\n    addParseToken('hmmss', (/**\n     * @param {?} input\n     * @param {?} array\n     * @param {?} config\n     * @return {?}\n     */\n    function (input, array, config) {\n        /** @type {?} */\n        const pos1 = input.length - 4;\n        /** @type {?} */\n        const pos2 = input.length - 2;\n        array[HOUR] = toInt(input.substr(0, pos1));\n        array[MINUTE] = toInt(input.substr(pos1, 2));\n        array[SECOND] = toInt(input.substr(pos2));\n        getParsingFlags(config).bigHour = true;\n        return config;\n    }));\n    addParseToken('Hmm', (/**\n     * @param {?} input\n     * @param {?} array\n     * @param {?} config\n     * @return {?}\n     */\n    function (input, array, config) {\n        /** @type {?} */\n        const pos = input.length - 2;\n        array[HOUR] = toInt(input.substr(0, pos));\n        array[MINUTE] = toInt(input.substr(pos));\n        return config;\n    }));\n    addParseToken('Hmmss', (/**\n     * @param {?} input\n     * @param {?} array\n     * @param {?} config\n     * @return {?}\n     */\n    function (input, array, config) {\n        /** @type {?} */\n        const pos1 = input.length - 4;\n        /** @type {?} */\n        const pos2 = input.length - 2;\n        array[HOUR] = toInt(input.substr(0, pos1));\n        array[MINUTE] = toInt(input.substr(pos1, 2));\n        array[SECOND] = toInt(input.substr(pos2));\n        return config;\n    }));\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst locales = {};\n/** @type {?} */\nconst localeFamilies = {};\n/** @type {?} */\nlet globalLocale;\n/**\n * @param {?} key\n * @return {?}\n */\nfunction normalizeLocale(key) {\n    return key ? key.toLowerCase().replace('_', '-') : key;\n}\n// pick the locale from the array\n// try ['en-au', 'en-gb'] as 'en-au', 'en-gb', 'en', as in move through the list trying each\n// substring from most specific to least,\n// but move to the next array item if it's a more specific variant than the current root\n/**\n * @param {?} names\n * @return {?}\n */\nfunction chooseLocale(names) {\n    /** @type {?} */\n    let next;\n    /** @type {?} */\n    let locale;\n    /** @type {?} */\n    let i = 0;\n    while (i < names.length) {\n        /** @type {?} */\n        const split = normalizeLocale(names[i]).split('-');\n        /** @type {?} */\n        let j = split.length;\n        next = normalizeLocale(names[i + 1]);\n        next = next ? next.split('-') : null;\n        while (j > 0) {\n            locale = loadLocale(split.slice(0, j).join('-'));\n            if (locale) {\n                return locale;\n            }\n            if (next && next.length >= j && compareArrays(split, next, true) >= j - 1) {\n                // the next array item is better than a shallower substring of this one\n                break;\n            }\n            j--;\n        }\n        i++;\n    }\n    return null;\n}\n/**\n * @param {?} parentConfig\n * @param {?} childConfig\n * @return {?}\n */\nfunction mergeConfigs(parentConfig, childConfig) {\n    /** @type {?} */\n    const res = Object.assign({}, parentConfig);\n    for (const childProp in childConfig) {\n        if (!hasOwnProp(childConfig, childProp)) {\n            continue;\n        }\n        if (isObject(parentConfig[childProp]) && isObject(childConfig[childProp])) {\n            res[(/** @type {?} */ (childProp))] = {};\n            Object.assign(res[childProp], parentConfig[childProp]);\n            Object.assign(res[childProp], childConfig[childProp]);\n        }\n        else if (childConfig[childProp] != null) {\n            res[(/** @type {?} */ (childProp))] = childConfig[childProp];\n        }\n        else {\n            delete res[(/** @type {?} */ (childProp))];\n        }\n    }\n    for (const parentProp in parentConfig) {\n        if (hasOwnProp(parentConfig, parentProp) &&\n            !hasOwnProp(childConfig, parentProp) &&\n            isObject(parentConfig[(/** @type {?} */ (parentProp))])) {\n            // make sure changes to properties don't modify parent config\n            res[(/** @type {?} */ (parentProp))] = Object.assign({}, res[(/** @type {?} */ (parentProp))]);\n        }\n    }\n    return res;\n}\n/**\n * @param {?} name\n * @return {?}\n */\nfunction loadLocale(name) {\n    // no way!\n    /* var oldLocale = null;\n     // TODO: Find a better way to register and load all the locales in Node\n     if (!locales[name] && (typeof module !== 'undefined') &&\n       module && module.exports) {\n       try {\n         oldLocale = globalLocale._abbr;\n         var aliasedRequire = require;\n         aliasedRequire('./locale/' + name);\n         getSetGlobalLocale(oldLocale);\n       } catch (e) {}\n     }*/\n    if (!locales[name]) {\n        // tslint:disable-next-line\n        console.error(`Khronos locale error: please load locale \"${name}\" before using it`);\n        // throw new Error(`Khronos locale error: please load locale \"${name}\" before using it`);\n    }\n    return locales[name];\n}\n// This function will load locale and then set the global locale.  If\n// no arguments are passed in, it will simply return the current global\n// locale key.\n/**\n * @param {?=} key\n * @param {?=} values\n * @return {?}\n */\nfunction getSetGlobalLocale(key, values) {\n    /** @type {?} */\n    let data;\n    if (key) {\n        if (isUndefined(values)) {\n            data = getLocale(key);\n        }\n        else if (isString(key)) {\n            data = defineLocale(key, values);\n        }\n        if (data) {\n            globalLocale = data;\n        }\n    }\n    return globalLocale && globalLocale._abbr;\n}\n/**\n * @param {?} name\n * @param {?=} config\n * @return {?}\n */\nfunction defineLocale(name, config) {\n    if (config === null) {\n        // useful for testing\n        delete locales[name];\n        globalLocale = getLocale('en');\n        return null;\n    }\n    if (!config) {\n        return;\n    }\n    /** @type {?} */\n    let parentConfig = baseConfig;\n    config.abbr = name;\n    if (config.parentLocale != null) {\n        if (locales[config.parentLocale] != null) {\n            parentConfig = locales[config.parentLocale]._config;\n        }\n        else {\n            if (!localeFamilies[config.parentLocale]) {\n                localeFamilies[config.parentLocale] = [];\n            }\n            localeFamilies[config.parentLocale].push({ name, config });\n            return null;\n        }\n    }\n    locales[name] = new Locale(mergeConfigs(parentConfig, config));\n    if (localeFamilies[name]) {\n        localeFamilies[name].forEach((/**\n         * @param {?} x\n         * @return {?}\n         */\n        function (x) {\n            defineLocale(x.name, x.config);\n        }));\n    }\n    // backwards compat for now: also set the locale\n    // make sure we set the locale AFTER all child locales have been\n    // created, so we won't end up with the child locale set.\n    getSetGlobalLocale(name);\n    return locales[name];\n}\n/**\n * @param {?} name\n * @param {?=} config\n * @return {?}\n */\nfunction updateLocale(name, config) {\n    /** @type {?} */\n    let _config = config;\n    if (_config != null) {\n        /** @type {?} */\n        let parentConfig = baseConfig;\n        // MERGE\n        /** @type {?} */\n        const tmpLocale = loadLocale(name);\n        if (tmpLocale != null) {\n            parentConfig = tmpLocale._config;\n        }\n        _config = mergeConfigs(parentConfig, _config);\n        /** @type {?} */\n        const locale = new Locale(_config);\n        locale.parentLocale = locales[name];\n        locales[name] = locale;\n        // backwards compat for now: also set the locale\n        getSetGlobalLocale(name);\n    }\n    else {\n        // pass null for config to unupdate, useful for tests\n        if (locales[name] != null) {\n            if (locales[name].parentLocale != null) {\n                locales[name] = locales[name].parentLocale;\n            }\n            else if (locales[name] != null) {\n                delete locales[name];\n            }\n        }\n    }\n    return locales[name];\n}\n// returns locale data\n/**\n * @param {?=} key\n * @return {?}\n */\nfunction getLocale(key) {\n    setDefaultLocale();\n    if (!key) {\n        return globalLocale;\n    }\n    // let locale;\n    /** @type {?} */\n    const _key = isArray(key) ? key : [key];\n    return chooseLocale(_key);\n}\n/**\n * @return {?}\n */\nfunction listLocales() {\n    return Object.keys(locales);\n}\n/**\n * @return {?}\n */\nfunction setDefaultLocale() {\n    if (locales[`en`]) {\n        return undefined;\n    }\n    getSetGlobalLocale('en', {\n        dayOfMonthOrdinalParse: /\\d{1,2}(th|st|nd|rd)/,\n        /**\n         * @param {?} num\n         * @return {?}\n         */\n        ordinal(num) {\n            /** @type {?} */\n            const b = num % 10;\n            /** @type {?} */\n            const output = toInt((num % 100) / 10) === 1\n                ? 'th'\n                : b === 1 ? 'st' : b === 2 ? 'nd' : b === 3 ? 'rd' : 'th';\n            return num + output;\n        }\n    });\n    initWeek();\n    initWeekYear();\n    initYear();\n    initTimezone();\n    initTimestamp();\n    initSecond();\n    initQuarter();\n    initOffset();\n    initMonth();\n    initMinute();\n    initMillisecond();\n    initHour();\n    initDayOfYear();\n    initDayOfWeek();\n    initDayOfMonth();\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst ordering = ['year', 'quarter', 'month', 'week', 'day', 'hours', 'minutes', 'seconds', 'milliseconds'];\n/** @type {?} */\nconst orderingHash = ordering.reduce((/**\n * @param {?} mem\n * @param {?} order\n * @return {?}\n */\n(mem, order) => {\n    mem[order] = true;\n    return mem;\n}), {});\n/**\n * @param {?} duration\n * @return {?}\n */\nfunction isDurationValid(duration) {\n    /** @type {?} */\n    const durationKeys = Object.keys(duration);\n    if (durationKeys\n        .some((/**\n     * @param {?} key\n     * @return {?}\n     */\n    (key) => {\n        return (key in orderingHash)\n            && duration[key] === null\n            || isNaN(duration[key]);\n    }))) {\n        return false;\n    }\n    // for (let key in duration) {\n    //   if (!(indexOf.call(ordering, key) !== -1 && (duration[key] == null || !isNaN(duration[key])))) {\n    //     return false;\n    //   }\n    // }\n    /** @type {?} */\n    let unitHasDecimal = false;\n    for (let i = 0; i < ordering.length; ++i) {\n        if (duration[ordering[i]]) {\n            // only allow non-integers for smallest unit\n            if (unitHasDecimal) {\n                return false;\n            }\n            if (duration[ordering[i]] !== toInt(duration[ordering[i]])) {\n                unitHasDecimal = true;\n            }\n        }\n    }\n    return true;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @param {?} number\n * @return {?}\n */\nfunction absCeil(number) {\n    return number < 0 ? Math.floor(number) : Math.ceil(number);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @param {?} dur\n * @return {?}\n */\nfunction bubble(dur) {\n    /** @type {?} */\n    let milliseconds = dur._milliseconds;\n    /** @type {?} */\n    let days = dur._days;\n    /** @type {?} */\n    let months = dur._months;\n    /** @type {?} */\n    const data = dur._data;\n    // if we have a mix of positive and negative values, bubble down first\n    // check: https://github.com/moment/moment/issues/2166\n    if (!((milliseconds >= 0 && days >= 0 && months >= 0) ||\n        (milliseconds <= 0 && days <= 0 && months <= 0))) {\n        milliseconds += absCeil(monthsToDays(months) + days) * 864e5;\n        days = 0;\n        months = 0;\n    }\n    // The following code bubbles up values, see the tests for\n    // examples of what that means.\n    data.milliseconds = milliseconds % 1000;\n    /** @type {?} */\n    const seconds = absFloor(milliseconds / 1000);\n    data.seconds = seconds % 60;\n    /** @type {?} */\n    const minutes = absFloor(seconds / 60);\n    data.minutes = minutes % 60;\n    /** @type {?} */\n    const hours = absFloor(minutes / 60);\n    data.hours = hours % 24;\n    days += absFloor(hours / 24);\n    // convert days to months\n    /** @type {?} */\n    const monthsFromDays = absFloor(daysToMonths(days));\n    months += monthsFromDays;\n    days -= absCeil(monthsToDays(monthsFromDays));\n    // 12 months -> 1 year\n    /** @type {?} */\n    const years = absFloor(months / 12);\n    months %= 12;\n    data.day = days;\n    data.month = months;\n    data.year = years;\n    return dur;\n}\n/**\n * @param {?} day\n * @return {?}\n */\nfunction daysToMonths(day) {\n    // 400 years have 146097 days (taking into account leap year rules)\n    // 400 years have 12 months === 4800\n    return day * 4800 / 146097;\n}\n/**\n * @param {?} month\n * @return {?}\n */\nfunction monthsToDays(month) {\n    // the reverse of daysToMonths\n    return month * 146097 / 4800;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nlet round = Math.round;\n/** @type {?} */\nconst thresholds = {\n    ss: 44,\n    // a few seconds to seconds\n    s: 45,\n    // seconds to minute\n    m: 45,\n    // minutes to hour\n    h: 22,\n    // hours to day\n    d: 26,\n    // days to month\n    M: 11 // months to year\n};\n// helper function for moment.fn.from, moment.fn.fromNow, and moment.duration.fn.humanize\n/**\n * @param {?} str\n * @param {?} num\n * @param {?} withoutSuffix\n * @param {?} isFuture\n * @param {?} locale\n * @return {?}\n */\nfunction substituteTimeAgo(str, num, withoutSuffix, isFuture, locale) {\n    return locale.relativeTime(num || 1, !!withoutSuffix, str, isFuture);\n}\n/**\n * @param {?} posNegDuration\n * @param {?} withoutSuffix\n * @param {?} locale\n * @return {?}\n */\nfunction relativeTime(posNegDuration, withoutSuffix, locale) {\n    /** @type {?} */\n    const duration = createDuration(posNegDuration).abs();\n    /** @type {?} */\n    const seconds = round(duration.as('s'));\n    /** @type {?} */\n    const minutes = round(duration.as('m'));\n    /** @type {?} */\n    const hours = round(duration.as('h'));\n    /** @type {?} */\n    const days = round(duration.as('d'));\n    /** @type {?} */\n    const months = round(duration.as('M'));\n    /** @type {?} */\n    const years = round(duration.as('y'));\n    /** @type {?} */\n    const a = seconds <= thresholds.ss && ['s', seconds] ||\n        seconds < thresholds.s && ['ss', seconds] ||\n        minutes <= 1 && ['m'] ||\n        minutes < thresholds.m && ['mm', minutes] ||\n        hours <= 1 && ['h'] ||\n        hours < thresholds.h && ['hh', hours] ||\n        days <= 1 && ['d'] ||\n        days < thresholds.d && ['dd', days] ||\n        months <= 1 && ['M'] ||\n        months < thresholds.M && ['MM', months] ||\n        years <= 1 && ['y'] || ['yy', years];\n    /** @type {?} */\n    const b = [a[0], a[1], withoutSuffix, +posNegDuration > 0, locale];\n    // a[2] = withoutSuffix;\n    // a[3] = +posNegDuration > 0;\n    // a[4] = locale;\n    return substituteTimeAgo.apply(null, b);\n}\n// This function allows you to set the rounding function for relative time strings\n/**\n * @param {?} roundingFunction\n * @return {?}\n */\nfunction getSetRelativeTimeRounding(roundingFunction) {\n    if (roundingFunction === undefined) {\n        return round;\n    }\n    if (typeof (roundingFunction) === 'function') {\n        round = roundingFunction;\n        return true;\n    }\n    return false;\n}\n// This function allows you to set a threshold for relative time strings\n/**\n * @param {?} threshold\n * @param {?} limit\n * @return {?}\n */\nfunction getSetRelativeTimeThreshold(threshold, limit) {\n    if (thresholds[threshold] === undefined) {\n        return false;\n    }\n    if (limit === undefined) {\n        return thresholds[threshold];\n    }\n    thresholds[threshold] = limit;\n    if (threshold === 's') {\n        thresholds.ss = limit - 1;\n    }\n    return true;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass Duration {\n    /**\n     * @param {?} duration\n     * @param {?=} config\n     */\n    constructor(duration, config = {}) {\n        this._data = {};\n        this._locale = getLocale();\n        this._locale = config && config._locale || getLocale();\n        // const normalizedInput = normalizeObjectUnits(duration);\n        /** @type {?} */\n        const normalizedInput = duration;\n        /** @type {?} */\n        const years = normalizedInput.year || 0;\n        /** @type {?} */\n        const quarters = normalizedInput.quarter || 0;\n        /** @type {?} */\n        const months = normalizedInput.month || 0;\n        /** @type {?} */\n        const weeks = normalizedInput.week || 0;\n        /** @type {?} */\n        const days = normalizedInput.day || 0;\n        /** @type {?} */\n        const hours = normalizedInput.hours || 0;\n        /** @type {?} */\n        const minutes = normalizedInput.minutes || 0;\n        /** @type {?} */\n        const seconds = normalizedInput.seconds || 0;\n        /** @type {?} */\n        const milliseconds = normalizedInput.milliseconds || 0;\n        this._isValid = isDurationValid(normalizedInput);\n        // representation for dateAddRemove\n        this._milliseconds = +milliseconds +\n            seconds * 1000 +\n            minutes * 60 * 1000 + // 1000 * 60\n            hours * 1000 * 60 * 60; // using 1000 * 60 * 60\n        // instead of 36e5 to avoid floating point rounding errors https://github.com/moment/moment/issues/2978\n        // Because of dateAddRemove treats 24 hours as different from a\n        // day when working around DST, we need to store them separately\n        this._days = +days +\n            weeks * 7;\n        // It is impossible to translate months into days without knowing\n        // which months you are are talking about, so we have to store\n        // it separately.\n        this._months = +months +\n            quarters * 3 +\n            years * 12;\n        // this._data = {};\n        // this._locale = getLocale();\n        // this._bubble();\n        return bubble(this);\n    }\n    /**\n     * @return {?}\n     */\n    isValid() {\n        return this._isValid;\n    }\n    /**\n     * @param {?=} withSuffix\n     * @return {?}\n     */\n    humanize(withSuffix) {\n        // throw new Error(`TODO: implement`);\n        if (!this.isValid()) {\n            return this.localeData().invalidDate;\n        }\n        /** @type {?} */\n        const locale = this.localeData();\n        /** @type {?} */\n        let output = relativeTime(this, !withSuffix, locale);\n        if (withSuffix) {\n            output = locale.pastFuture(+this, output);\n        }\n        return locale.postformat(output);\n    }\n    /**\n     * @return {?}\n     */\n    localeData() {\n        return this._locale;\n    }\n    /**\n     * @param {?=} localeKey\n     * @return {?}\n     */\n    locale(localeKey) {\n        if (!localeKey) {\n            return this._locale._abbr;\n        }\n        this._locale = getLocale(localeKey) || this._locale;\n        return this;\n    }\n    /**\n     * @return {?}\n     */\n    abs() {\n        /** @type {?} */\n        const mathAbs = Math.abs;\n        /** @type {?} */\n        const data = this._data;\n        this._milliseconds = mathAbs(this._milliseconds);\n        this._days = mathAbs(this._days);\n        this._months = mathAbs(this._months);\n        data.milliseconds = mathAbs(data.milliseconds);\n        data.seconds = mathAbs(data.seconds);\n        data.minutes = mathAbs(data.minutes);\n        data.hours = mathAbs(data.hours);\n        data.month = mathAbs(data.month);\n        data.year = mathAbs(data.year);\n        return this;\n    }\n    /**\n     * @param {?} _units\n     * @return {?}\n     */\n    as(_units) {\n        if (!this.isValid()) {\n            return NaN;\n        }\n        /** @type {?} */\n        let days;\n        /** @type {?} */\n        let months;\n        /** @type {?} */\n        const milliseconds = this._milliseconds;\n        /** @type {?} */\n        const units = normalizeUnits(_units);\n        if (units === 'month' || units === 'year') {\n            days = this._days + milliseconds / 864e5;\n            months = this._months + daysToMonths(days);\n            return units === 'month' ? months : months / 12;\n        }\n        // handle milliseconds separately because of floating point math errors (issue #1867)\n        days = this._days + Math.round(monthsToDays(this._months));\n        switch (units) {\n            case 'week':\n                return days / 7 + milliseconds / 6048e5;\n            case 'day':\n                return days + milliseconds / 864e5;\n            case 'hours':\n                return days * 24 + milliseconds / 36e5;\n            case 'minutes':\n                return days * 1440 + milliseconds / 6e4;\n            case 'seconds':\n                return days * 86400 + milliseconds / 1000;\n            // Math.floor prevents floating point math errors here\n            case 'milliseconds':\n                return Math.floor(days * 864e5) + milliseconds;\n            default:\n                throw new Error(`Unknown unit ${units}`);\n        }\n    }\n    /**\n     * @return {?}\n     */\n    valueOf() {\n        if (!this.isValid()) {\n            return NaN;\n        }\n        return (this._milliseconds +\n            this._days * 864e5 +\n            (this._months % 12) * 2592e6 +\n            toInt(this._months / 12) * 31536e6);\n    }\n}\nif (false) {\n    /** @type {?} */\n    Duration.prototype._milliseconds;\n    /** @type {?} */\n    Duration.prototype._days;\n    /** @type {?} */\n    Duration.prototype._months;\n    /** @type {?} */\n    Duration.prototype._data;\n    /** @type {?} */\n    Duration.prototype._locale;\n    /** @type {?} */\n    Duration.prototype._isValid;\n}\n/**\n * @param {?} obj\n * @return {?}\n */\nfunction isDuration(obj) {\n    return obj instanceof Duration;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @param {?} config\n * @return {?}\n */\nfunction isValid(config) {\n    if (config._isValid == null) {\n        /** @type {?} */\n        const flags = getParsingFlags(config);\n        /** @type {?} */\n        const parsedParts = Array.prototype.some.call(flags.parsedDateParts, (/**\n         * @param {?} i\n         * @return {?}\n         */\n        function (i) {\n            return i != null;\n        }));\n        /** @type {?} */\n        let isNowValid = !isNaN(config._d && config._d.getTime()) &&\n            flags.overflow < 0 &&\n            !flags.empty &&\n            !flags.invalidMonth &&\n            !flags.invalidWeekday &&\n            !flags.weekdayMismatch &&\n            !flags.nullInput &&\n            !flags.invalidFormat &&\n            !flags.userInvalidated &&\n            (!flags.meridiem || (flags.meridiem && parsedParts));\n        if (config._strict) {\n            isNowValid = isNowValid &&\n                flags.charsLeftOver === 0 &&\n                flags.unusedTokens.length === 0 &&\n                flags.bigHour === undefined;\n        }\n        if (Object.isFrozen == null || !Object.isFrozen(config)) {\n            config._isValid = isNowValid;\n        }\n        else {\n            return isNowValid;\n        }\n    }\n    return config._isValid;\n}\n/**\n * @param {?} config\n * @param {?=} flags\n * @return {?}\n */\nfunction createInvalid(config, flags) {\n    config._d = new Date(NaN);\n    Object.assign(getParsingFlags(config), flags || { userInvalidated: true });\n    return config;\n}\n/**\n * @param {?} config\n * @return {?}\n */\nfunction markInvalid(config) {\n    config._isValid = false;\n    return config;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// iso 8601 regex\n// 0000-00-00 0000-W00 or 0000-W00-0 + T + 00 or 00:00 or 00:00:00 or 00:00:00.000 + +00:00 or +0000 or +00)\n// tslint:disable-next-line\n/** @type {?} */\nconst extendedIsoRegex = /^\\s*((?:[+-]\\d{6}|\\d{4})-(?:\\d\\d-\\d\\d|W\\d\\d-\\d|W\\d\\d|\\d\\d\\d|\\d\\d))(?:(T| )(\\d\\d(?::\\d\\d(?::\\d\\d(?:[.,]\\d+)?)?)?)([\\+\\-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/;\n// tslint:disable-next-line\n/** @type {?} */\nconst basicIsoRegex = /^\\s*((?:[+-]\\d{6}|\\d{4})(?:\\d\\d\\d\\d|W\\d\\d\\d|W\\d\\d|\\d\\d\\d|\\d\\d))(?:(T| )(\\d\\d(?:\\d\\d(?:\\d\\d(?:[.,]\\d+)?)?)?)([\\+\\-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/;\n/** @type {?} */\nconst tzRegex = /Z|[+-]\\d\\d(?::?\\d\\d)?/;\n/** @type {?} */\nconst isoDates = [\n    ['YYYYYY-MM-DD', /[+-]\\d{6}-\\d\\d-\\d\\d/, true],\n    ['YYYY-MM-DD', /\\d{4}-\\d\\d-\\d\\d/, true],\n    ['GGGG-[W]WW-E', /\\d{4}-W\\d\\d-\\d/, true],\n    ['GGGG-[W]WW', /\\d{4}-W\\d\\d/, false],\n    ['YYYY-DDD', /\\d{4}-\\d{3}/, true],\n    ['YYYY-MM', /\\d{4}-\\d\\d/, false],\n    ['YYYYYYMMDD', /[+-]\\d{10}/, true],\n    ['YYYYMMDD', /\\d{8}/, true],\n    // YYYYMM is NOT allowed by the standard\n    ['GGGG[W]WWE', /\\d{4}W\\d{3}/, true],\n    ['GGGG[W]WW', /\\d{4}W\\d{2}/, false],\n    ['YYYYDDD', /\\d{7}/, true]\n];\n// iso time formats and regexes\n/** @type {?} */\nconst isoTimes = [\n    ['HH:mm:ss.SSSS', /\\d\\d:\\d\\d:\\d\\d\\.\\d+/],\n    ['HH:mm:ss,SSSS', /\\d\\d:\\d\\d:\\d\\d,\\d+/],\n    ['HH:mm:ss', /\\d\\d:\\d\\d:\\d\\d/],\n    ['HH:mm', /\\d\\d:\\d\\d/],\n    ['HHmmss.SSSS', /\\d\\d\\d\\d\\d\\d\\.\\d+/],\n    ['HHmmss,SSSS', /\\d\\d\\d\\d\\d\\d,\\d+/],\n    ['HHmmss', /\\d\\d\\d\\d\\d\\d/],\n    ['HHmm', /\\d\\d\\d\\d/],\n    ['HH', /\\d\\d/]\n];\n/** @type {?} */\nconst aspNetJsonRegex = /^\\/?Date\\((\\-?\\d+)/i;\n/** @type {?} */\nconst obsOffsets = {\n    UT: 0,\n    GMT: 0,\n    EDT: -4 * 60,\n    EST: -5 * 60,\n    CDT: -5 * 60,\n    CST: -6 * 60,\n    MDT: -6 * 60,\n    MST: -7 * 60,\n    PDT: -7 * 60,\n    PST: -8 * 60\n};\n// RFC 2822 regex: For details see https://tools.ietf.org/html/rfc2822#section-3.3\n// tslint:disable-next-line\n/** @type {?} */\nconst rfc2822 = /^(?:(Mon|Tue|Wed|Thu|Fri|Sat|Sun),?\\s)?(\\d{1,2})\\s(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\\s(\\d{2,4})\\s(\\d\\d):(\\d\\d)(?::(\\d\\d))?\\s(?:(UT|GMT|[ECMP][SD]T)|([Zz])|([+-]\\d{4}))$/;\n// date from iso format\n/**\n * @param {?} config\n * @return {?}\n */\nfunction configFromISO(config) {\n    if (!isString(config._i)) {\n        return config;\n    }\n    /** @type {?} */\n    const input = config._i;\n    /** @type {?} */\n    const match = extendedIsoRegex.exec(input) || basicIsoRegex.exec(input);\n    /** @type {?} */\n    let allowTime;\n    /** @type {?} */\n    let dateFormat;\n    /** @type {?} */\n    let timeFormat;\n    /** @type {?} */\n    let tzFormat;\n    if (!match) {\n        config._isValid = false;\n        return config;\n    }\n    // getParsingFlags(config).iso = true;\n    /** @type {?} */\n    let i;\n    /** @type {?} */\n    let l;\n    for (i = 0, l = isoDates.length; i < l; i++) {\n        if (isoDates[i][1].exec(match[1])) {\n            dateFormat = isoDates[i][0];\n            allowTime = isoDates[i][2] !== false;\n            break;\n        }\n    }\n    if (dateFormat == null) {\n        config._isValid = false;\n        return config;\n    }\n    if (match[3]) {\n        for (i = 0, l = isoTimes.length; i < l; i++) {\n            if (isoTimes[i][1].exec(match[3])) {\n                // match[2] should be 'T' or space\n                timeFormat = (match[2] || ' ') + isoTimes[i][0];\n                break;\n            }\n        }\n        if (timeFormat == null) {\n            config._isValid = false;\n            return config;\n        }\n    }\n    if (!allowTime && timeFormat != null) {\n        config._isValid = false;\n        return config;\n    }\n    if (match[4]) {\n        if (tzRegex.exec(match[4])) {\n            tzFormat = 'Z';\n        }\n        else {\n            config._isValid = false;\n            return config;\n        }\n    }\n    config._f = dateFormat + (timeFormat || '') + (tzFormat || '');\n    return configFromStringAndFormat(config);\n}\n// tslint:disable-next-line\n/**\n * @param {?} yearStr\n * @param {?} monthStr\n * @param {?} dayStr\n * @param {?} hourStr\n * @param {?} minuteStr\n * @param {?} secondStr\n * @return {?}\n */\nfunction extractFromRFC2822Strings(yearStr, monthStr, dayStr, hourStr, minuteStr, secondStr) {\n    /** @type {?} */\n    const result = [\n        untruncateYear(yearStr),\n        defaultLocaleMonthsShort.indexOf(monthStr),\n        parseInt(dayStr, 10),\n        parseInt(hourStr, 10),\n        parseInt(minuteStr, 10)\n    ];\n    if (secondStr) {\n        result.push(parseInt(secondStr, 10));\n    }\n    return result;\n}\n/**\n * @param {?} yearStr\n * @return {?}\n */\nfunction untruncateYear(yearStr) {\n    /** @type {?} */\n    const year = parseInt(yearStr, 10);\n    return year <= 49 ? year + 2000 : year;\n}\n/**\n * @param {?} str\n * @return {?}\n */\nfunction preprocessRFC2822(str) {\n    // Remove comments and folding whitespace and replace multiple-spaces with a single space\n    return str\n        .replace(/\\([^)]*\\)|[\\n\\t]/g, ' ')\n        .replace(/(\\s\\s+)/g, ' ').trim();\n}\n/**\n * @param {?} weekdayStr\n * @param {?} parsedInput\n * @param {?} config\n * @return {?}\n */\nfunction checkWeekday(weekdayStr, parsedInput, config) {\n    if (weekdayStr) {\n        // TODO: Replace the vanilla JS Date object with an indepentent day-of-week check.\n        /** @type {?} */\n        const weekdayProvided = defaultLocaleWeekdaysShort.indexOf(weekdayStr);\n        /** @type {?} */\n        const weekdayActual = new Date(parsedInput[0], parsedInput[1], parsedInput[2]).getDay();\n        if (weekdayProvided !== weekdayActual) {\n            getParsingFlags(config).weekdayMismatch = true;\n            config._isValid = false;\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * @param {?} obsOffset\n * @param {?} militaryOffset\n * @param {?} numOffset\n * @return {?}\n */\nfunction calculateOffset(obsOffset, militaryOffset, numOffset) {\n    if (obsOffset) {\n        return obsOffsets[obsOffset];\n    }\n    else if (militaryOffset) {\n        // the only allowed military tz is Z\n        return 0;\n    }\n    else {\n        /** @type {?} */\n        const hm = parseInt(numOffset, 10);\n        /** @type {?} */\n        const m = hm % 100;\n        /** @type {?} */\n        const h = (hm - m) / 100;\n        return h * 60 + m;\n    }\n}\n// date and time from ref 2822 format\n/**\n * @param {?} config\n * @return {?}\n */\nfunction configFromRFC2822(config) {\n    if (!isString(config._i)) {\n        return config;\n    }\n    /** @type {?} */\n    const match = rfc2822.exec(preprocessRFC2822(config._i));\n    if (!match) {\n        return markInvalid(config);\n    }\n    /** @type {?} */\n    const parsedArray = extractFromRFC2822Strings(match[4], match[3], match[2], match[5], match[6], match[7]);\n    if (!checkWeekday(match[1], parsedArray, config)) {\n        return config;\n    }\n    config._a = parsedArray;\n    config._tzm = calculateOffset(match[8], match[9], match[10]);\n    config._d = createUTCDate.apply(null, config._a);\n    config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);\n    getParsingFlags(config).rfc2822 = true;\n    return config;\n}\n// date from iso format or fallback\n/**\n * @param {?} config\n * @return {?}\n */\nfunction configFromString(config) {\n    if (!isString(config._i)) {\n        return config;\n    }\n    /** @type {?} */\n    const matched = aspNetJsonRegex.exec(config._i);\n    if (matched !== null) {\n        config._d = new Date(+matched[1]);\n        return config;\n    }\n    // todo: update logic processing\n    // isISO -> configFromISO\n    // isRFC -> configFromRFC\n    configFromISO(config);\n    if (config._isValid === false) {\n        delete config._isValid;\n    }\n    else {\n        return config;\n    }\n    configFromRFC2822(config);\n    if (config._isValid === false) {\n        delete config._isValid;\n    }\n    else {\n        return config;\n    }\n    // Final attempt, use Input Fallback\n    // hooks.createFromInputFallback(config);\n    return createInvalid(config);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @param {?} date\n * @param {?} format\n * @param {?=} locale\n * @param {?=} isUTC\n * @param {?=} offset\n * @return {?}\n */\nfunction formatDate(date, format, locale, isUTC, offset = 0) {\n    /** @type {?} */\n    const _locale = getLocale(locale || 'en');\n    if (!_locale) {\n        throw new Error(`Locale \"${locale}\" is not defined, please add it with \"defineLocale(...)\"`);\n    }\n    /** @type {?} */\n    const _format = format || (isUTC ? 'YYYY-MM-DDTHH:mm:ss[Z]' : 'YYYY-MM-DDTHH:mm:ssZ');\n    /** @type {?} */\n    const output = formatMoment(date, _format, _locale, isUTC, offset);\n    if (!output) {\n        return output;\n    }\n    return _locale.postformat(output);\n}\n// format date using native date object\n/**\n * @param {?} date\n * @param {?} _format\n * @param {?} locale\n * @param {?=} isUTC\n * @param {?=} offset\n * @return {?}\n */\nfunction formatMoment(date, _format, locale, isUTC, offset = 0) {\n    if (!isDateValid(date)) {\n        return locale.invalidDate;\n    }\n    /** @type {?} */\n    const format = expandFormat(_format, locale);\n    formatFunctions[format] = formatFunctions[format] || makeFormatFunction(format);\n    return formatFunctions[format](date, locale, isUTC, offset);\n}\n/**\n * @param {?} _format\n * @param {?} locale\n * @return {?}\n */\nfunction expandFormat(_format, locale) {\n    /** @type {?} */\n    let format = _format;\n    /** @type {?} */\n    let i = 5;\n    /** @type {?} */\n    const localFormattingTokens = /(\\[[^\\[]*\\])|(\\\\)?(LTS|LT|LL?L?L?|l{1,4})/g;\n    /** @type {?} */\n    const replaceLongDateFormatTokens = (/**\n     * @param {?} input\n     * @return {?}\n     */\n    (input) => {\n        return locale.formatLongDate(input) || input;\n    });\n    localFormattingTokens.lastIndex = 0;\n    while (i >= 0 && localFormattingTokens.test(format)) {\n        format = format.replace(localFormattingTokens, replaceLongDateFormatTokens);\n        localFormattingTokens.lastIndex = 0;\n        i -= 1;\n    }\n    return format;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// Pick the first defined of two or three arguments.\n/**\n * @template T\n * @param {?=} a\n * @param {?=} b\n * @param {?=} c\n * @return {?}\n */\nfunction defaults(a, b, c) {\n    if (a != null) {\n        return a;\n    }\n    if (b != null) {\n        return b;\n    }\n    return c;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @param {?} config\n * @return {?}\n */\nfunction currentDateArray(config) {\n    /** @type {?} */\n    const nowValue = new Date();\n    if (config._useUTC) {\n        return [nowValue.getUTCFullYear(), nowValue.getUTCMonth(), nowValue.getUTCDate()];\n    }\n    return [nowValue.getFullYear(), nowValue.getMonth(), nowValue.getDate()];\n}\n// convert an array to a date.\n// the array should mirror the parameters below\n// note: all values past the year are optional and will default to the lowest possible value.\n// [year, month, day , hour, minute, second, millisecond]\n/**\n * @param {?} config\n * @return {?}\n */\nfunction configFromArray(config) {\n    /** @type {?} */\n    const input = [];\n    /** @type {?} */\n    let i;\n    /** @type {?} */\n    let date;\n    /** @type {?} */\n    let currentDate;\n    /** @type {?} */\n    let expectedWeekday;\n    /** @type {?} */\n    let yearToUse;\n    if (config._d) {\n        return config;\n    }\n    currentDate = currentDateArray(config);\n    // compute day of the year from weeks and weekdays\n    if (config._w && config._a[DATE] == null && config._a[MONTH] == null) {\n        dayOfYearFromWeekInfo(config);\n    }\n    // if the day of the year is set, figure out what it is\n    if (config._dayOfYear != null) {\n        yearToUse = defaults(config._a[YEAR], currentDate[YEAR]);\n        if (config._dayOfYear > daysInYear(yearToUse) || config._dayOfYear === 0) {\n            getParsingFlags(config)._overflowDayOfYear = true;\n        }\n        date = new Date(Date.UTC(yearToUse, 0, config._dayOfYear));\n        config._a[MONTH] = date.getUTCMonth();\n        config._a[DATE] = date.getUTCDate();\n    }\n    // Default to current date.\n    // * if no year, month, day of month are given, default to today\n    // * if day of month is given, default month and year\n    // * if month is given, default only year\n    // * if year is given, don't default anything\n    for (i = 0; i < 3 && config._a[i] == null; ++i) {\n        config._a[i] = input[i] = currentDate[i];\n    }\n    // Zero out whatever was not defaulted, including time\n    for (; i < 7; i++) {\n        config._a[i] = input[i] = (config._a[i] == null) ? (i === 2 ? 1 : 0) : config._a[i];\n    }\n    // Check for 24:00:00.000\n    if (config._a[HOUR] === 24 &&\n        config._a[MINUTE] === 0 &&\n        config._a[SECOND] === 0 &&\n        config._a[MILLISECOND] === 0) {\n        config._nextDay = true;\n        config._a[HOUR] = 0;\n    }\n    config._d = (config._useUTC ? createUTCDate : createDate).apply(null, input);\n    expectedWeekday = config._useUTC ? config._d.getUTCDay() : config._d.getDay();\n    // Apply timezone offset from input. The actual utcOffset can be changed\n    // with parseZone.\n    if (config._tzm != null) {\n        config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);\n    }\n    if (config._nextDay) {\n        config._a[HOUR] = 24;\n    }\n    // check for mismatching day of week\n    if (config._w && typeof config._w.d !== 'undefined' && config._w.d !== expectedWeekday) {\n        getParsingFlags(config).weekdayMismatch = true;\n    }\n    return config;\n}\n/**\n * @param {?} config\n * @return {?}\n */\nfunction dayOfYearFromWeekInfo(config) {\n    /** @type {?} */\n    let w;\n    /** @type {?} */\n    let weekYear;\n    /** @type {?} */\n    let week;\n    /** @type {?} */\n    let weekday;\n    /** @type {?} */\n    let dow;\n    /** @type {?} */\n    let doy;\n    /** @type {?} */\n    let temp;\n    /** @type {?} */\n    let weekdayOverflow;\n    w = config._w;\n    if (w.GG != null || w.W != null || w.E != null) {\n        dow = 1;\n        doy = 4;\n        // TODO: We need to take the current isoWeekYear, but that depends on\n        // how we interpret now (local, utc, fixed offset). So create\n        // a now version of current config (take local/utc/offset flags, and\n        // create now).\n        weekYear = defaults(w.GG, config._a[YEAR], weekOfYear(new Date(), 1, 4).year);\n        week = defaults(w.W, 1);\n        weekday = defaults(w.E, 1);\n        if (weekday < 1 || weekday > 7) {\n            weekdayOverflow = true;\n        }\n    }\n    else {\n        dow = config._locale._week.dow;\n        doy = config._locale._week.doy;\n        /** @type {?} */\n        const curWeek = weekOfYear(new Date(), dow, doy);\n        weekYear = defaults(w.gg, config._a[YEAR], curWeek.year);\n        // Default to current week.\n        week = defaults(w.w, curWeek.week);\n        if (w.d != null) {\n            // weekday -- low day numbers are considered next week\n            weekday = w.d;\n            if (weekday < 0 || weekday > 6) {\n                weekdayOverflow = true;\n            }\n        }\n        else if (w.e != null) {\n            // local weekday -- counting starts from begining of week\n            weekday = w.e + dow;\n            if (w.e < 0 || w.e > 6) {\n                weekdayOverflow = true;\n            }\n        }\n        else {\n            // default to begining of week\n            weekday = dow;\n        }\n    }\n    if (week < 1 || week > weeksInYear(weekYear, dow, doy)) {\n        getParsingFlags(config)._overflowWeeks = true;\n    }\n    else if (weekdayOverflow != null) {\n        getParsingFlags(config)._overflowWeekday = true;\n    }\n    else {\n        temp = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy);\n        config._a[YEAR] = temp.year;\n        config._dayOfYear = temp.dayOfYear;\n    }\n    return config;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @param {?} config\n * @return {?}\n */\nfunction checkOverflow(config) {\n    /** @type {?} */\n    let overflow;\n    /** @type {?} */\n    const a = config._a;\n    if (a && getParsingFlags(config).overflow === -2) {\n        // todo: fix this sh*t\n        overflow =\n            a[MONTH] < 0 || a[MONTH] > 11 ? MONTH :\n                a[DATE] < 1 || a[DATE] > daysInMonth$1(a[YEAR], a[MONTH]) ? DATE :\n                    a[HOUR] < 0 || a[HOUR] > 24 || (a[HOUR] === 24 && (a[MINUTE] !== 0 || a[SECOND] !== 0 || a[MILLISECOND] !== 0)) ? HOUR :\n                        a[MINUTE] < 0 || a[MINUTE] > 59 ? MINUTE :\n                            a[SECOND] < 0 || a[SECOND] > 59 ? SECOND :\n                                a[MILLISECOND] < 0 || a[MILLISECOND] > 999 ? MILLISECOND :\n                                    -1;\n        if (getParsingFlags(config)._overflowDayOfYear && (overflow < YEAR || overflow > DATE)) {\n            overflow = DATE;\n        }\n        if (getParsingFlags(config)._overflowWeeks && overflow === -1) {\n            overflow = WEEK;\n        }\n        if (getParsingFlags(config)._overflowWeekday && overflow === -1) {\n            overflow = WEEKDAY;\n        }\n        getParsingFlags(config).overflow = overflow;\n    }\n    return config;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// constant that refers to the ISO standard\n// hooks.ISO_8601 = function () {};\n/** @type {?} */\nconst ISO_8601 = 'ISO_8601';\n// constant that refers to the RFC 2822 form\n// hooks.RFC_2822 = function () {};\n/** @type {?} */\nconst RFC_2822 = 'RFC_2822';\n// date from string and format string\n/**\n * @param {?} config\n * @return {?}\n */\nfunction configFromStringAndFormat(config) {\n    // TODO: Move this to another part of the creation flow to prevent circular deps\n    if (config._f === ISO_8601) {\n        return configFromISO(config);\n    }\n    if (config._f === RFC_2822) {\n        return configFromRFC2822(config);\n    }\n    config._a = [];\n    getParsingFlags(config).empty = true;\n    if (isArray(config._f) || (!config._i && config._i !== 0)) {\n        return config;\n    }\n    // This array is used to make a Date, either with `new Date` or `Date.UTC`\n    /** @type {?} */\n    let input = config._i.toString();\n    /** @type {?} */\n    let totalParsedInputLength = 0;\n    /** @type {?} */\n    const inputLength = input.length;\n    /** @type {?} */\n    const tokens = expandFormat(config._f, config._locale).match(formattingTokens) || [];\n    /** @type {?} */\n    let i;\n    /** @type {?} */\n    let token;\n    /** @type {?} */\n    let parsedInput;\n    /** @type {?} */\n    let skipped;\n    for (i = 0; i < tokens.length; i++) {\n        token = tokens[i];\n        parsedInput = (input.match(getParseRegexForToken(token, config._locale)) || [])[0];\n        if (parsedInput) {\n            skipped = input.substr(0, input.indexOf(parsedInput));\n            if (skipped.length > 0) {\n                getParsingFlags(config).unusedInput.push(skipped);\n            }\n            input = input.slice(input.indexOf(parsedInput) + parsedInput.length);\n            totalParsedInputLength += parsedInput.length;\n        }\n        // don't parse if it's not a known token\n        if (formatTokenFunctions[token]) {\n            if (parsedInput) {\n                getParsingFlags(config).empty = false;\n            }\n            else {\n                getParsingFlags(config).unusedTokens.push(token);\n            }\n            addTimeToArrayFromToken(token, parsedInput, config);\n        }\n        else if (config._strict && !parsedInput) {\n            getParsingFlags(config).unusedTokens.push(token);\n        }\n    }\n    // add remaining unparsed input length to the string\n    getParsingFlags(config).charsLeftOver = inputLength - totalParsedInputLength;\n    if (input.length > 0) {\n        getParsingFlags(config).unusedInput.push(input);\n    }\n    // clear _12h flag if hour is <= 12\n    if (config._a[HOUR] <= 12 &&\n        getParsingFlags(config).bigHour === true &&\n        config._a[HOUR] > 0) {\n        getParsingFlags(config).bigHour = void 0;\n    }\n    getParsingFlags(config).parsedDateParts = config._a.slice(0);\n    getParsingFlags(config).meridiem = config._meridiem;\n    // handle meridiem\n    config._a[HOUR] = meridiemFixWrap(config._locale, config._a[HOUR], config._meridiem);\n    configFromArray(config);\n    return checkOverflow(config);\n}\n/**\n * @param {?} locale\n * @param {?} _hour\n * @param {?} meridiem\n * @return {?}\n */\nfunction meridiemFixWrap(locale, _hour, meridiem) {\n    /** @type {?} */\n    let hour = _hour;\n    if (meridiem == null) {\n        // nothing to do\n        return hour;\n    }\n    if (locale.meridiemHour != null) {\n        return locale.meridiemHour(hour, meridiem);\n    }\n    if (locale.isPM == null) {\n        // this is not supposed to happen\n        return hour;\n    }\n    // Fallback\n    /** @type {?} */\n    const isPm = locale.isPM(meridiem);\n    if (isPm && hour < 12) {\n        hour += 12;\n    }\n    if (!isPm && hour === 12) {\n        hour = 0;\n    }\n    return hour;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// date from string and array of format strings\n/**\n * @param {?} config\n * @return {?}\n */\nfunction configFromStringAndArray(config) {\n    /** @type {?} */\n    let tempConfig;\n    /** @type {?} */\n    let bestMoment;\n    /** @type {?} */\n    let scoreToBeat;\n    /** @type {?} */\n    let currentScore;\n    if (!config._f || config._f.length === 0) {\n        getParsingFlags(config).invalidFormat = true;\n        return createInvalid(config);\n    }\n    /** @type {?} */\n    let i;\n    for (i = 0; i < config._f.length; i++) {\n        currentScore = 0;\n        tempConfig = Object.assign({}, config);\n        if (config._useUTC != null) {\n            tempConfig._useUTC = config._useUTC;\n        }\n        tempConfig._f = config._f[i];\n        configFromStringAndFormat(tempConfig);\n        if (!isValid(tempConfig)) {\n            continue;\n        }\n        // if there is any input that was not parsed add a penalty for that format\n        currentScore += getParsingFlags(tempConfig).charsLeftOver;\n        // or tokens\n        currentScore += getParsingFlags(tempConfig).unusedTokens.length * 10;\n        getParsingFlags(tempConfig).score = currentScore;\n        if (scoreToBeat == null || currentScore < scoreToBeat) {\n            scoreToBeat = currentScore;\n            bestMoment = tempConfig;\n        }\n    }\n    return Object.assign(config, bestMoment || tempConfig);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @param {?} config\n * @return {?}\n */\nfunction configFromObject(config) {\n    if (config._d) {\n        return config;\n    }\n    /** @type {?} */\n    const input = config._i;\n    if (isObject(input)) {\n        /** @type {?} */\n        const i = normalizeObjectUnits((/** @type {?} */ (input)));\n        config._a = [i.year, i.month, i.day, i.hours, i.minutes, i.seconds, i.milliseconds]\n            // todo: obsolete -> remove it\n            .map((/**\n         * @param {?} obj\n         * @return {?}\n         */\n        obj => isString(obj) ? parseInt(obj, 10) : obj));\n    }\n    return configFromArray(config);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @param {?} config\n * @return {?}\n */\nfunction createFromConfig(config) {\n    /** @type {?} */\n    const res = checkOverflow(prepareConfig(config));\n    // todo: remove, in moment.js it's never called cuz of moment constructor\n    res._d = new Date(res._d != null ? res._d.getTime() : NaN);\n    if (!isValid(Object.assign({}, res, { _isValid: null }))) {\n        res._d = new Date(NaN);\n    }\n    // todo: update offset\n    /*if (res._nextDay) {\n      // Adding is smart enough around DST\n      res._d = add(res._d, 1, 'day');\n      res._nextDay = undefined;\n    }*/\n    return res;\n}\n/**\n * @param {?} config\n * @return {?}\n */\nfunction prepareConfig(config) {\n    /** @type {?} */\n    let input = config._i;\n    /** @type {?} */\n    const format = config._f;\n    config._locale = config._locale || getLocale(config._l);\n    if (input === null || (format === undefined && input === '')) {\n        return createInvalid(config, { nullInput: true });\n    }\n    if (isString(input)) {\n        config._i = input = config._locale.preparse(input, format);\n    }\n    if (isDate(input)) {\n        config._d = cloneDate(input);\n        return config;\n    }\n    // todo: add check for recursion\n    if (isArray(format)) {\n        configFromStringAndArray(config);\n    }\n    else if (format) {\n        configFromStringAndFormat(config);\n    }\n    else {\n        configFromInput(config);\n    }\n    if (!isValid(config)) {\n        config._d = null;\n    }\n    return config;\n}\n/**\n * @param {?} config\n * @return {?}\n */\nfunction configFromInput(config) {\n    /** @type {?} */\n    const input = config._i;\n    if (isUndefined(input)) {\n        config._d = new Date();\n    }\n    else if (isDate(input)) {\n        config._d = cloneDate(input);\n    }\n    else if (isString(input)) {\n        configFromString(config);\n    }\n    else if (isArray(input) && input.length) {\n        /** @type {?} */\n        const _arr = input.slice(0);\n        config._a = _arr.map((/**\n         * @param {?} obj\n         * @return {?}\n         */\n        obj => isString(obj) ? parseInt(obj, 10) : obj));\n        configFromArray(config);\n    }\n    else if (isObject(input)) {\n        configFromObject(config);\n    }\n    else if (isNumber(input)) {\n        // from milliseconds\n        config._d = new Date(input);\n    }\n    else {\n        //   hooks.createFromInputFallback(config);\n        return createInvalid(config);\n    }\n    return config;\n}\n/**\n * @param {?} input\n * @param {?=} format\n * @param {?=} localeKey\n * @param {?=} strict\n * @param {?=} isUTC\n * @return {?}\n */\nfunction createLocalOrUTC(input, format, localeKey, strict, isUTC) {\n    /** @type {?} */\n    const config = {};\n    /** @type {?} */\n    let _input = input;\n    // params switch -> skip; test it well\n    // if (localeKey === true || localeKey === false) {\n    //     strict = localeKey;\n    //     localeKey = undefined;\n    // }\n    // todo: fail fast and return not valid date\n    if ((isObject(_input) && isObjectEmpty(_input)) || (isArray(_input) && _input.length === 0)) {\n        _input = undefined;\n    }\n    // object construction must be done this way.\n    // https://github.com/moment/moment/issues/1423\n    // config._isAMomentObject = true;\n    config._useUTC = config._isUTC = isUTC;\n    config._l = localeKey;\n    config._i = _input;\n    config._f = format;\n    config._strict = strict;\n    return createFromConfig(config);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @param {?} input\n * @param {?=} format\n * @param {?=} localeKey\n * @param {?=} strict\n * @param {?=} isUTC\n * @return {?}\n */\nfunction parseDate(input, format, localeKey, strict, isUTC) {\n    if (isDate(input)) {\n        return input;\n    }\n    /** @type {?} */\n    const config = createLocalOrUTC(input, format, localeKey, strict, isUTC);\n    return config._d;\n}\n/**\n * @param {?} date\n * @return {?}\n */\nfunction utcAsLocal(date) {\n    if (!(date instanceof Date)) {\n        return null;\n    }\n    return new Date(date.getUTCFullYear(), date.getUTCMonth(), date.getUTCDate(), date.getUTCHours(), date.getUTCMinutes(), date.getUTCSeconds(), date.getUTCMilliseconds());\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @param {?} num\n * @return {?}\n */\nfunction absRound(num) {\n    return num < 0 ? Math.round(num * -1) * -1 : Math.round(num);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @param {?} date1\n * @param {?} date2\n * @param {?=} units\n * @return {?}\n */\nfunction isAfter(date1, date2, units = 'milliseconds') {\n    if (!date1 || !date2) {\n        return false;\n    }\n    if (units === 'milliseconds') {\n        return date1.valueOf() > date2.valueOf();\n    }\n    return date2.valueOf() < startOf(date1, units).valueOf();\n}\n/**\n * @param {?} date1\n * @param {?} date2\n * @param {?=} units\n * @return {?}\n */\nfunction isBefore(date1, date2, units = 'milliseconds') {\n    if (!date1 || !date2) {\n        return false;\n    }\n    if (units === 'milliseconds') {\n        return date1.valueOf() < date2.valueOf();\n    }\n    return endOf(date1, units).valueOf() < date2.valueOf();\n}\n/**\n * @param {?} date\n * @param {?} daysDisabled\n * @return {?}\n */\nfunction isDisabledDay(date, daysDisabled) {\n    if (daysDisabled === undefined || !daysDisabled || !daysDisabled.length) {\n        return false;\n    }\n    return daysDisabled.some((/**\n     * @param {?} day\n     * @return {?}\n     */\n    (day) => day === date.getDay()));\n}\n/**\n * @param {?} date\n * @param {?} from\n * @param {?} to\n * @param {?} units\n * @param {?=} inclusivity\n * @return {?}\n */\nfunction isBetween(date, from, to, units, inclusivity = '()') {\n    /** @type {?} */\n    const leftBound = inclusivity[0] === '('\n        ? isAfter(date, from, units)\n        : !isBefore(date, from, units);\n    /** @type {?} */\n    const rightBound = inclusivity[1] === ')'\n        ? isBefore(date, to, units)\n        : !isAfter(date, to, units);\n    return leftBound && rightBound;\n}\n/**\n * @param {?} date1\n * @param {?} date2\n * @param {?=} units\n * @return {?}\n */\nfunction isSame(date1, date2, units = 'milliseconds') {\n    if (!date1 || !date2) {\n        return false;\n    }\n    if (units === 'milliseconds') {\n        return date1.valueOf() === date2.valueOf();\n    }\n    /** @type {?} */\n    const inputMs = date2.valueOf();\n    return (startOf(date1, units).valueOf() <= inputMs &&\n        inputMs <= endOf(date1, units).valueOf());\n}\n/**\n * @param {?} date1\n * @param {?} date2\n * @return {?}\n */\nfunction isSameDay$1(date1, date2) {\n    return (date1.getDay() == date2.getDay());\n}\n/**\n * @param {?} date1\n * @param {?} date2\n * @param {?=} units\n * @return {?}\n */\nfunction isSameOrAfter(date1, date2, units) {\n    return isSame(date1, date2, units) || isAfter(date1, date2, units);\n}\n/**\n * @param {?} date1\n * @param {?} date2\n * @param {?=} units\n * @return {?}\n */\nfunction isSameOrBefore(date1, date2, units) {\n    return isSame(date1, date2, units) || isBefore(date1, date2, units);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst aspNetRegex = /^(\\-|\\+)?(?:(\\d*)[. ])?(\\d+)\\:(\\d+)(?:\\:(\\d+)(\\.\\d*)?)?$/;\n// from http://docs.closure-library.googlecode.com/git/closure_goog_date_date.js.source.html\n// somewhat more in line with 4.4.3.2 2004 spec, but allows decimal anywhere\n// and further modified to allow for strings containing both week and day\n// tslint:disable-next-line\n/** @type {?} */\nconst isoRegex = /^(-|\\+)?P(?:([-+]?[0-9,.]*)Y)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)W)?(?:([-+]?[0-9,.]*)D)?(?:T(?:([-+]?[0-9,.]*)H)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)S)?)?$/;\n/**\n * @param {?=} input\n * @param {?=} key\n * @param {?=} config\n * @return {?}\n */\nfunction createDuration(input, key, config = {}) {\n    /** @type {?} */\n    const duration = convertDuration(input, key);\n    // matching against regexp is expensive, do it on demand\n    return new Duration(duration, config);\n}\n/**\n * @param {?} input\n * @param {?} key\n * @return {?}\n */\nfunction convertDuration(input, key) {\n    // checks for null or undefined\n    if (input == null) {\n        return {};\n    }\n    if (isDuration(input)) {\n        return {\n            milliseconds: input._milliseconds,\n            day: input._days,\n            month: input._months\n        };\n    }\n    if (isNumber(input)) {\n        // duration = {};\n        return key ? { [key]: input } : { milliseconds: input };\n    }\n    if (isString(input)) {\n        /** @type {?} */\n        let match = aspNetRegex.exec(input);\n        if (match) {\n            /** @type {?} */\n            const sign = (match[1] === '-') ? -1 : 1;\n            return {\n                year: 0,\n                day: toInt(match[DATE]) * sign,\n                hours: toInt(match[HOUR]) * sign,\n                minutes: toInt(match[MINUTE]) * sign,\n                seconds: toInt(match[SECOND]) * sign,\n                // the millisecond decimal point is included in the match\n                milliseconds: toInt(absRound(toInt(match[MILLISECOND]) * 1000)) * sign\n            };\n        }\n        match = isoRegex.exec(input);\n        if (match) {\n            /** @type {?} */\n            const sign = (match[1] === '-') ? -1 : (match[1] === '+') ? 1 : 1;\n            return {\n                year: parseIso(match[2], sign),\n                month: parseIso(match[3], sign),\n                week: parseIso(match[4], sign),\n                day: parseIso(match[5], sign),\n                hours: parseIso(match[6], sign),\n                minutes: parseIso(match[7], sign),\n                seconds: parseIso(match[8], sign)\n            };\n        }\n    }\n    if (isObject(input) && ('from' in input || 'to' in input)) {\n        /** @type {?} */\n        const diffRes = momentsDifference(parseDate(input.from), parseDate(input.to));\n        return {\n            milliseconds: diffRes.milliseconds,\n            month: diffRes.months\n        };\n    }\n    return input;\n}\n// createDuration.fn = Duration.prototype;\n// createDuration.invalid = invalid;\n/**\n * @param {?} inp\n * @param {?} sign\n * @return {?}\n */\nfunction parseIso(inp, sign) {\n    // We'd normally use ~~inp for this, but unfortunately it also\n    // converts floats to ints.\n    // inp may be undefined, so careful calling replace on it.\n    /** @type {?} */\n    const res = inp && parseFloat(inp.replace(',', '.'));\n    // apply sign while we're at it\n    return (isNaN(res) ? 0 : res) * sign;\n}\n/**\n * @param {?} base\n * @param {?} other\n * @return {?}\n */\nfunction positiveMomentsDifference(base, other) {\n    /** @type {?} */\n    const res = { milliseconds: 0, months: 0 };\n    res.months = getMonth(other) - getMonth(base) +\n        (getFullYear(other) - getFullYear(base)) * 12;\n    /** @type {?} */\n    const _basePlus = add(cloneDate(base), res.months, 'month');\n    if (isAfter(_basePlus, other)) {\n        --res.months;\n    }\n    res.milliseconds = +other - +(add(cloneDate(base), res.months, 'month'));\n    return res;\n}\n/**\n * @param {?} base\n * @param {?} other\n * @return {?}\n */\nfunction momentsDifference(base, other) {\n    if (!(isDateValid(base) && isDateValid(other))) {\n        return { milliseconds: 0, months: 0 };\n    }\n    /** @type {?} */\n    let res;\n    /** @type {?} */\n    const _other = cloneWithOffset(other, base, { _offset: base.getTimezoneOffset() });\n    if (isBefore(base, _other)) {\n        res = positiveMomentsDifference(base, _other);\n    }\n    else {\n        res = positiveMomentsDifference(_other, base);\n        res.milliseconds = -res.milliseconds;\n        res.months = -res.months;\n    }\n    return res;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @param {?} date\n * @param {?} val\n * @param {?} period\n * @param {?=} isUTC\n * @return {?}\n */\nfunction add(date, val, period, isUTC) {\n    /** @type {?} */\n    const dur = createDuration(val, period);\n    return addSubtract(date, dur, 1, isUTC);\n}\n/**\n * @param {?} date\n * @param {?} val\n * @param {?} period\n * @param {?=} isUTC\n * @return {?}\n */\nfunction subtract(date, val, period, isUTC) {\n    /** @type {?} */\n    const dur = createDuration(val, period);\n    return addSubtract(date, dur, -1, isUTC);\n}\n/**\n * @param {?} date\n * @param {?} duration\n * @param {?} isAdding\n * @param {?=} isUTC\n * @return {?}\n */\nfunction addSubtract(date, duration, isAdding, isUTC) {\n    /** @type {?} */\n    const milliseconds = duration._milliseconds;\n    /** @type {?} */\n    const days = absRound(duration._days);\n    /** @type {?} */\n    const months = absRound(duration._months);\n    // todo: add timezones support\n    // const _updateOffset = updateOffset == null ? true : updateOffset;\n    if (months) {\n        setMonth(date, getMonth(date, isUTC) + months * isAdding, isUTC);\n    }\n    if (days) {\n        setDate(date, getDate(date, isUTC) + days * isAdding, isUTC);\n    }\n    if (milliseconds) {\n        setTime(date, getTime(date) + milliseconds * isAdding);\n    }\n    return cloneDate(date);\n    // todo: add timezones support\n    // if (_updateOffset) {\n    //   hooks.updateOffset(date, days || months);\n    // }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @return {?}\n */\nfunction initDayOfWeek() {\n    // FORMATTING\n    addFormatToken('d', null, 'do', (/**\n     * @param {?} date\n     * @param {?} opts\n     * @return {?}\n     */\n    function (date, opts) {\n        return getDay(date, opts.isUTC)\n            .toString(10);\n    }));\n    addFormatToken('dd', null, null, (/**\n     * @param {?} date\n     * @param {?} opts\n     * @return {?}\n     */\n    function (date, opts) {\n        return opts.locale.weekdaysMin(date, opts.format, opts.isUTC);\n    }));\n    addFormatToken('ddd', null, null, (/**\n     * @param {?} date\n     * @param {?} opts\n     * @return {?}\n     */\n    function (date, opts) {\n        return opts.locale.weekdaysShort(date, opts.format, opts.isUTC);\n    }));\n    addFormatToken('dddd', null, null, (/**\n     * @param {?} date\n     * @param {?} opts\n     * @return {?}\n     */\n    function (date, opts) {\n        return opts.locale.weekdays(date, opts.format, opts.isUTC);\n    }));\n    addFormatToken('e', null, null, (/**\n     * @param {?} date\n     * @param {?} opts\n     * @return {?}\n     */\n    function (date, opts) {\n        return getLocaleDayOfWeek(date, opts.locale, opts.isUTC)\n            .toString(10);\n        // return getDay(date, opts.isUTC).toString(10);\n    }));\n    addFormatToken('E', null, null, (/**\n     * @param {?} date\n     * @param {?} opts\n     * @return {?}\n     */\n    function (date, opts) {\n        return getISODayOfWeek(date, opts.isUTC)\n            .toString(10);\n    }));\n    // ALIASES\n    addUnitAlias('day', 'd');\n    addUnitAlias('weekday', 'e');\n    addUnitAlias('isoWeekday', 'E');\n    // PRIORITY\n    addUnitPriority('day', 11);\n    addUnitPriority('weekday', 11);\n    addUnitPriority('isoWeekday', 11);\n    // PARSING\n    addRegexToken('d', match1to2);\n    addRegexToken('e', match1to2);\n    addRegexToken('E', match1to2);\n    addRegexToken('dd', (/**\n     * @param {?} isStrict\n     * @param {?} locale\n     * @return {?}\n     */\n    function (isStrict, locale) {\n        return locale.weekdaysMinRegex(isStrict);\n    }));\n    addRegexToken('ddd', (/**\n     * @param {?} isStrict\n     * @param {?} locale\n     * @return {?}\n     */\n    function (isStrict, locale) {\n        return locale.weekdaysShortRegex(isStrict);\n    }));\n    addRegexToken('dddd', (/**\n     * @param {?} isStrict\n     * @param {?} locale\n     * @return {?}\n     */\n    function (isStrict, locale) {\n        return locale.weekdaysRegex(isStrict);\n    }));\n    addWeekParseToken(['dd', 'ddd', 'dddd'], (/**\n     * @param {?} input\n     * @param {?} week\n     * @param {?} config\n     * @param {?} token\n     * @return {?}\n     */\n    function (input, week, config, token) {\n        /** @type {?} */\n        const weekday = config._locale.weekdaysParse(input, token, config._strict);\n        // if we didn't get a weekday name, mark the date as invalid\n        if (weekday != null) {\n            week.d = weekday;\n        }\n        else {\n            getParsingFlags(config).invalidWeekday = !!input;\n        }\n        return config;\n    }));\n    addWeekParseToken(['d', 'e', 'E'], (/**\n     * @param {?} input\n     * @param {?} week\n     * @param {?} config\n     * @param {?} token\n     * @return {?}\n     */\n    function (input, week, config, token) {\n        week[token] = toInt(input);\n        return config;\n    }));\n}\n// HELPERS\n/**\n * @param {?} input\n * @param {?} locale\n * @return {?}\n */\nfunction parseWeekday(input, locale) {\n    if (!isString(input)) {\n        return input;\n    }\n    /** @type {?} */\n    const _num = parseInt(input, 10);\n    if (!isNaN(_num)) {\n        return _num;\n    }\n    /** @type {?} */\n    const _weekDay = locale.weekdaysParse(input);\n    if (isNumber(_weekDay)) {\n        return _weekDay;\n    }\n    return null;\n}\n/**\n * @param {?} input\n * @param {?=} locale\n * @return {?}\n */\nfunction parseIsoWeekday(input, locale = getLocale()) {\n    if (isString(input)) {\n        return locale.weekdaysParse(input) % 7 || 7;\n    }\n    return isNumber(input) && isNaN(input) ? null : input;\n}\n// MOMENTS\n/**\n * @param {?} date\n * @param {?} input\n * @param {?} opts\n * @return {?}\n */\nfunction getSetDayOfWeek(date, input, opts) {\n    if (!input) {\n        return getDayOfWeek(date, opts.isUTC);\n    }\n    return setDayOfWeek(date, input, opts.locale, opts.isUTC);\n}\n/**\n * @param {?} date\n * @param {?} input\n * @param {?=} locale\n * @param {?=} isUTC\n * @return {?}\n */\nfunction setDayOfWeek(date, input, locale = getLocale(), isUTC) {\n    /** @type {?} */\n    const day = getDay(date, isUTC);\n    /** @type {?} */\n    const _input = parseWeekday(input, locale);\n    return add(date, _input - day, 'day');\n}\n/**\n * @param {?} date\n * @param {?=} isUTC\n * @return {?}\n */\nfunction getDayOfWeek(date, isUTC) {\n    return getDay(date, isUTC);\n}\n/**\n * ****************************************\n * @param {?} date\n * @param {?=} locale\n * @param {?=} isUTC\n * @return {?}\n */\n// todo: utc\n// getSetLocaleDayOfWeek\nfunction getLocaleDayOfWeek(date, locale = getLocale(), isUTC) {\n    return (getDay(date, isUTC) + 7 - locale.firstDayOfWeek()) % 7;\n}\n/**\n * @param {?} date\n * @param {?} input\n * @param {?=} opts\n * @return {?}\n */\nfunction setLocaleDayOfWeek(date, input, opts = {}) {\n    /** @type {?} */\n    const weekday = getLocaleDayOfWeek(date, opts.locale, opts.isUTC);\n    return add(date, input - weekday, 'day');\n}\n// getSetISODayOfWeek\n/**\n * @param {?} date\n * @param {?=} isUTC\n * @return {?}\n */\nfunction getISODayOfWeek(date, isUTC) {\n    return getDay(date, isUTC) || 7;\n}\n/**\n * @param {?} date\n * @param {?} input\n * @param {?=} opts\n * @return {?}\n */\nfunction setISODayOfWeek(date, input, opts = {}) {\n    // behaves the same as moment#day except\n    // as a getter, returns 7 instead of 0 (1-7 range instead of 0-6)\n    // as a setter, sunday should belong to the previous week.\n    // behaves the same as moment#day except\n    // as a getter, returns 7 instead of 0 (1-7 range instead of 0-6)\n    // as a setter, sunday should belong to the previous week.\n    /** @type {?} */\n    const weekday = parseIsoWeekday(input, opts.locale);\n    return setDayOfWeek(date, getDayOfWeek(date) % 7 ? weekday : weekday - 7);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// tslint:disable:comment-format binary-expression-operand-order max-line-length\n//! moment.js locale configuration\n//! locale : Arabic [ar]\n//! author : Abdel Said: https://github.com/abdelsaid\n//! author : Ahmed Elkhatib\n//! author : forabi https://github.com/forabi\n/** @type {?} */\nconst symbolMap = {\n    1: '١',\n    2: '٢',\n    3: '٣',\n    4: '٤',\n    5: '٥',\n    6: '٦',\n    7: '٧',\n    8: '٨',\n    9: '٩',\n    0: '٠'\n};\n/** @type {?} */\nconst numberMap = {\n    '١': '1',\n    '٢': '2',\n    '٣': '3',\n    '٤': '4',\n    '٥': '5',\n    '٦': '6',\n    '٧': '7',\n    '٨': '8',\n    '٩': '9',\n    '٠': '0'\n};\n/** @type {?} */\nconst pluralForm = (/**\n * @param {?} num\n * @return {?}\n */\nfunction (num) {\n    return num === 0 ? 0 : num === 1 ? 1 : num === 2 ? 2 : num % 100 >= 3 && num % 100 <= 10 ? 3 : num % 100 >= 11 ? 4 : 5;\n});\n/** @type {?} */\nconst plurals = {\n    s: ['أقل من ثانية', 'ثانية واحدة', ['ثانيتان', 'ثانيتين'], '%d ثوان', '%d ثانية', '%d ثانية'],\n    m: ['أقل من دقيقة', 'دقيقة واحدة', ['دقيقتان', 'دقيقتين'], '%d دقائق', '%d دقيقة', '%d دقيقة'],\n    h: ['أقل من ساعة', 'ساعة واحدة', ['ساعتان', 'ساعتين'], '%d ساعات', '%d ساعة', '%d ساعة'],\n    d: ['أقل من يوم', 'يوم واحد', ['يومان', 'يومين'], '%d أيام', '%d يومًا', '%d يوم'],\n    M: ['أقل من شهر', 'شهر واحد', ['شهران', 'شهرين'], '%d أشهر', '%d شهرا', '%d شهر'],\n    y: ['أقل من عام', 'عام واحد', ['عامان', 'عامين'], '%d أعوام', '%d عامًا', '%d عام']\n};\n/** @type {?} */\nconst pluralize = (/**\n * @param {?} u\n * @return {?}\n */\nfunction (u) {\n    return (/**\n     * @param {?} num\n     * @param {?} withoutSuffix\n     * @return {?}\n     */\n    function (num, withoutSuffix) {\n        /** @type {?} */\n        const f = pluralForm(num);\n        /** @type {?} */\n        let str = plurals[u][pluralForm(num)];\n        if (f === 2) {\n            str = str[withoutSuffix ? 0 : 1];\n        }\n        return ((/** @type {?} */ (str))).replace(/%d/i, num.toString());\n    });\n});\n/** @type {?} */\nconst months = [\n    'يناير',\n    'فبراير',\n    'مارس',\n    'أبريل',\n    'مايو',\n    'يونيو',\n    'يوليو',\n    'أغسطس',\n    'سبتمبر',\n    'أكتوبر',\n    'نوفمبر',\n    'ديسمبر'\n];\n/** @type {?} */\nconst arLocale = {\n    abbr: 'ar',\n    months,\n    monthsShort: months,\n    weekdays: 'الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت'.split('_'),\n    weekdaysShort: 'أحد_إثنين_ثلاثاء_أربعاء_خميس_جمعة_سبت'.split('_'),\n    weekdaysMin: 'ح_ن_ث_ر_خ_ج_س'.split('_'),\n    weekdaysParseExact: true,\n    longDateFormat: {\n        LT: 'HH:mm',\n        LTS: 'HH:mm:ss',\n        L: 'D/\\u200FM/\\u200FYYYY',\n        LL: 'D MMMM YYYY',\n        LLL: 'D MMMM YYYY HH:mm',\n        LLLL: 'dddd D MMMM YYYY HH:mm'\n    },\n    meridiemParse: /ص|م/,\n    /**\n     * @param {?} input\n     * @return {?}\n     */\n    isPM(input) {\n        return 'م' === input;\n    },\n    /**\n     * @param {?} hour\n     * @param {?} minute\n     * @param {?} isLower\n     * @return {?}\n     */\n    meridiem(hour, minute, isLower) {\n        if (hour < 12) {\n            return 'ص';\n        }\n        else {\n            return 'م';\n        }\n    },\n    calendar: {\n        sameDay: '[اليوم عند الساعة] LT',\n        nextDay: '[غدًا عند الساعة] LT',\n        nextWeek: 'dddd [عند الساعة] LT',\n        lastDay: '[أمس عند الساعة] LT',\n        lastWeek: 'dddd [عند الساعة] LT',\n        sameElse: 'L'\n    },\n    relativeTime: {\n        future: 'بعد %s',\n        past: 'منذ %s',\n        s: pluralize('s'),\n        ss: pluralize('s'),\n        m: pluralize('m'),\n        mm: pluralize('m'),\n        h: pluralize('h'),\n        hh: pluralize('h'),\n        d: pluralize('d'),\n        dd: pluralize('d'),\n        M: pluralize('M'),\n        MM: pluralize('M'),\n        y: pluralize('y'),\n        yy: pluralize('y')\n    },\n    /**\n     * @param {?} str\n     * @return {?}\n     */\n    preparse(str) {\n        return str.replace(/[١٢٣٤٥٦٧٨٩٠]/g, (/**\n         * @param {?} match\n         * @return {?}\n         */\n        function (match) {\n            return numberMap[match];\n        })).replace(/،/g, ',');\n    },\n    /**\n     * @param {?} str\n     * @return {?}\n     */\n    postformat(str) {\n        return str.replace(/\\d/g, (/**\n         * @param {?} match\n         * @return {?}\n         */\n        function (match) {\n            return symbolMap[match];\n        })).replace(/,/g, '،');\n    },\n    week: {\n        dow: 6,\n        // Saturday is the first day of the week.\n        doy: 12 // The week that contains Jan 1st is the first week of the year.\n    }\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// tslint:disable:comment-format binary-expression-operand-order max-line-length\n// tslint:disable:no-bitwise prefer-template cyclomatic-complexity\n// tslint:disable:no-shadowed-variable switch-default prefer-const\n// tslint:disable:one-variable-per-declaration newline-before-return\n//! moment.js locale configuration\n//! locale : Bulgarian [bg]\n//! author : Iskren Ivov Chernev : https://github.com/ichernev\n//! author : Kunal Marwaha : https://github.com/marwahaha\n//! author : Matt Grande : https://github.com/mattgrande\n//! author : Isaac Cambron : https://github.com/icambron\n//! author : Venelin Manchev : https://github.com/vmanchev\n/** @type {?} */\nconst bgLocale = {\n    abbr: 'bg',\n    months: 'януари_февруари_март_април_май_юни_юли_август_септември_октомври_ноември_декември'.split('_'),\n    monthsShort: 'янр_фев_мар_апр_май_юни_юли_авг_сеп_окт_ное_дек'.split('_'),\n    weekdays: 'неделя_понеделник_вторник_сряда_четвъртък_петък_събота'.split('_'),\n    weekdaysShort: 'нед_пон_вто_сря_чет_пет_съб'.split('_'),\n    weekdaysMin: 'нд_пн_вт_ср_чт_пт_сб'.split('_'),\n    longDateFormat: {\n        LT: 'H:mm',\n        LTS: 'H:mm:ss',\n        L: 'D.MM.YYYY',\n        LL: 'D MMMM YYYY',\n        LLL: 'D MMMM YYYY H:mm',\n        LLLL: 'dddd, D MMMM YYYY H:mm'\n    },\n    calendar: {\n        sameDay: '[Днес в] LT',\n        nextDay: '[Утре в] LT',\n        nextWeek: 'dddd [в] LT',\n        lastDay: '[Вчера в] LT',\n        lastWeek: (/**\n         * @param {?} d\n         * @return {?}\n         */\n        function (d) {\n            switch (d) {\n                case 0:\n                case 3:\n                case 6:\n                    return '[В изминалата] dddd [в] LT';\n                case 1:\n                case 2:\n                case 4:\n                case 5:\n                    return '[В изминалия] dddd [в] LT';\n            }\n        }),\n        sameElse: 'L'\n    },\n    relativeTime: {\n        future: 'след %s',\n        past: 'преди %s',\n        s: 'няколко секунди',\n        ss: '%d секунди',\n        m: 'минута',\n        mm: '%d минути',\n        h: 'час',\n        hh: '%d часа',\n        d: 'ден',\n        dd: '%d дни',\n        M: 'месец',\n        MM: '%d месеца',\n        y: 'година',\n        yy: '%d години'\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}-(ев|ен|ти|ви|ри|ми)/,\n    ordinal: (/**\n     * @param {?} _num\n     * @return {?}\n     */\n    function (_num) {\n        /** @type {?} */\n        const number = Number(_num);\n        /** @type {?} */\n        let lastDigit = number % 10;\n        /** @type {?} */\n        let last2Digits = number % 100;\n        if (number === 0) {\n            return number + '-ев';\n        }\n        else if (last2Digits === 0) {\n            return number + '-ен';\n        }\n        else if (last2Digits > 10 && last2Digits < 20) {\n            return number + '-ти';\n        }\n        else if (lastDigit === 1) {\n            return number + '-ви';\n        }\n        else if (lastDigit === 2) {\n            return number + '-ри';\n        }\n        else if (lastDigit === 7 || lastDigit === 8) {\n            return number + '-ми';\n        }\n        else {\n            return number + '-ти';\n        }\n    }),\n    week: {\n        dow: 1,\n        // Monday is the first day of the week.\n        doy: 7 // The week that contains Jan 1st is the first week of the year.\n    }\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n//! moment.js locale configuration\n//! locale : Catalan [ca]\n//! author : Xavier Arbat : https://github.com/XavisaurusRex\n/** @type {?} */\nlet monthsShortDot = 'gen._feb._mar._abr._mai._jun._jul._ago._set._oct._nov._des.'.split('_');\n/** @type {?} */\nlet monthsShort = 'ene_feb_mar_abr_mai_jun_jul_ago_set_oct_nov_des'.split('_');\n/** @type {?} */\nlet monthsParse = [/^gen/i, /^feb/i, /^mar/i, /^abr/i, /^mai/i, /^jun/i, /^jul/i, /^ago/i, /^set/i, /^oct/i, /^nov/i, /^des/i];\n/** @type {?} */\nlet monthsRegex = /^(gener|febrer|març|abril|maig|juny|juliol|agost|setembre|octubre|novembre|desembre|gen\\.?|feb\\.?|mar\\.?|abr\\.?|mai\\.?|jun\\.?|jul\\.?|ago\\.?|set\\.?|oct\\.?|nov\\.?|des\\.?)/i;\n/** @type {?} */\nconst caLocale = {\n    abbr: 'ca',\n    months: 'gener_febrer_març_abril_maig_juny_juliol_agost_setembre_octubre_novembre_desembre'.split('_'),\n    /**\n     * @param {?} date\n     * @param {?} format\n     * @param {?=} isUTC\n     * @return {?}\n     */\n    monthsShort(date, format, isUTC) {\n        if (!date) {\n            return monthsShortDot;\n        }\n        if (/-MMM-/.test(format)) {\n            return monthsShort[getMonth(date, isUTC)];\n        }\n        return monthsShortDot[getMonth(date, isUTC)];\n    },\n    monthsRegex,\n    monthsShortRegex: monthsRegex,\n    monthsStrictRegex: /^(gener|febrer|març|abril|maig|juny|juliol|agost|setembre|octubre|novembre|desembre)/i,\n    monthsShortStrictRegex: /^(gen\\.?|feb\\.?|mar\\.?|abr\\.?|mai\\.?|jun\\.?|jul\\.?|ago\\.?|set\\.?|oct\\.?|nov\\.?|des\\.?)/i,\n    monthsParse,\n    longMonthsParse: monthsParse,\n    shortMonthsParse: monthsParse,\n    weekdays: 'diumenge_dilluns_dimarts_dimecres_dijous_divendres_dissabte'.split('_'),\n    weekdaysShort: 'diu._dil._dim._dix._dij._div._dis.'.split('_'),\n    weekdaysMin: 'dg_dl_dt_dc_dj_dv_ds'.split('_'),\n    weekdaysParseExact: true,\n    longDateFormat: {\n        LT: 'H:mm',\n        LTS: 'H:mm:ss',\n        L: 'DD/MM/YYYY',\n        LL: 'D [de] MMMM [de] YYYY',\n        LLL: 'D [de] MMMM [de] YYYY H:mm',\n        LLLL: 'dddd, D [de] MMMM [de] YYYY H:mm'\n    },\n    calendar: {\n        /**\n         * @param {?} date\n         * @return {?}\n         */\n        sameDay(date) {\n            return '[avui a ' + ('la' + (getHours(date) !== 1) ? 'les' : '') + '] LT';\n        },\n        /**\n         * @param {?} date\n         * @return {?}\n         */\n        nextDay(date) {\n            return '[dema a ' + ('la' + (getHours(date) !== 1) ? 'les' : '') + '] LT';\n        },\n        /**\n         * @param {?} date\n         * @return {?}\n         */\n        nextWeek(date) {\n            return 'dddd [a ' + ('la' + (getHours(date) !== 1) ? 'les' : '') + '] LT';\n        },\n        /**\n         * @param {?} date\n         * @return {?}\n         */\n        lastDay(date) {\n            return '[ahir a ' + ('la' + (getHours(date) !== 1) ? 'les' : '') + '] LT';\n        },\n        /**\n         * @param {?} date\n         * @return {?}\n         */\n        lastWeek(date) {\n            return '[el] dddd [' + ('passada la ' + (getHours(date) !== 1) ? 'passades les' : '') + '] LT';\n        },\n        sameElse: 'L'\n    },\n    relativeTime: {\n        future: 'en %s',\n        past: 'fa %s',\n        s: 'uns segons',\n        ss: '%d segons',\n        m: 'un minut',\n        mm: '%d minuts',\n        h: 'una hora',\n        hh: '%d hores',\n        d: 'un dia',\n        dd: '%d dies',\n        M: 'un mes',\n        MM: '%d mesos',\n        y: 'un any',\n        yy: '%d anys'\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}(er|on|er|rt|é)/,\n    /**\n     * @param {?} _num\n     * @return {?}\n     */\n    ordinal(_num) {\n        /** @type {?} */\n        const num = Number(_num);\n        /** @type {?} */\n        const output = (num > 4) ? 'é' :\n            (num === 1 || num === 3) ? 'r' :\n                (num === 2) ? 'n' :\n                    (num === 4) ? 't' : 'é';\n        return num + output;\n    },\n    week: {\n        dow: 1,\n        // Monday is the first day of the week.\n        doy: 4 // The week that contains Jan 4th is the first week of the year.\n    }\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n//! moment.js locale configuration\n//! locale : Czech [cs]\n//! author : petrbela : https://github.com/petrbela\n/** @type {?} */\nconst months$1 = 'leden_únor_březen_duben_květen_červen_červenec_srpen_září_říjen_listopad_prosinec'.split('_');\n/** @type {?} */\nconst monthsShort$1 = 'led_úno_bře_dub_kvě_čvn_čvc_srp_zář_říj_lis_pro'.split('_');\n/**\n * @param {?} num\n * @return {?}\n */\nfunction plural(num) {\n    return (num > 1) && (num < 5) && (~~(num / 10) !== 1);\n}\n/**\n * @param {?} num\n * @param {?} withoutSuffix\n * @param {?} key\n * @param {?} isFuture\n * @return {?}\n */\nfunction translate(num, withoutSuffix, key, isFuture) {\n    /** @type {?} */\n    const result = num + ' ';\n    switch (key) {\n        case 's': // a few seconds / in a few seconds / a few seconds ago\n            return (withoutSuffix || isFuture) ? 'pár sekund' : 'pár sekundami';\n        case 'ss': // 9 seconds / in 9 seconds / 9 seconds ago\n            if (withoutSuffix || isFuture) {\n                return result + (plural(num) ? 'sekundy' : 'sekund');\n            }\n            else {\n                return result + 'sekundami';\n            }\n        // break;\n        case 'm': // a minute / in a minute / a minute ago\n            return withoutSuffix ? 'minuta' : (isFuture ? 'minutu' : 'minutou');\n        case 'mm': // 9 minutes / in 9 minutes / 9 minutes ago\n            if (withoutSuffix || isFuture) {\n                return result + (plural(num) ? 'minuty' : 'minut');\n            }\n            else {\n                return result + 'minutami';\n            }\n        // break;\n        case 'h': // an hour / in an hour / an hour ago\n            return withoutSuffix ? 'hodina' : (isFuture ? 'hodinu' : 'hodinou');\n        case 'hh': // 9 hours / in 9 hours / 9 hours ago\n            if (withoutSuffix || isFuture) {\n                return result + (plural(num) ? 'hodiny' : 'hodin');\n            }\n            else {\n                return result + 'hodinami';\n            }\n        // break;\n        case 'd': // a day / in a day / a day ago\n            return (withoutSuffix || isFuture) ? 'den' : 'dnem';\n        case 'dd': // 9 days / in 9 days / 9 days ago\n            if (withoutSuffix || isFuture) {\n                return result + (plural(num) ? 'dny' : 'dní');\n            }\n            else {\n                return result + 'dny';\n            }\n        // break;\n        case 'M': // a month / in a month / a month ago\n            return (withoutSuffix || isFuture) ? 'měsíc' : 'měsícem';\n        case 'MM': // 9 months / in 9 months / 9 months ago\n            if (withoutSuffix || isFuture) {\n                return result + (plural(num) ? 'měsíce' : 'měsíců');\n            }\n            else {\n                return result + 'měsíci';\n            }\n        // break;\n        case 'y': // a year / in a year / a year ago\n            return (withoutSuffix || isFuture) ? 'rok' : 'rokem';\n        case 'yy': // 9 years / in 9 years / 9 years ago\n            if (withoutSuffix || isFuture) {\n                return result + (plural(num) ? 'roky' : 'let');\n            }\n            else {\n                return result + 'lety';\n            }\n        // break;\n    }\n}\n/** @type {?} */\nconst csLocale = {\n    abbr: 'cs',\n    months: months$1,\n    monthsShort: monthsShort$1,\n    monthsParse: ((/**\n     * @param {?} months\n     * @param {?} monthsShort\n     * @return {?}\n     */\n    function (months, monthsShort) {\n        /** @type {?} */\n        let i;\n        /** @type {?} */\n        let _monthsParse = [];\n        for (i = 0; i < 12; i++) {\n            // use custom parser to solve problem with July (červenec)\n            _monthsParse[i] = new RegExp('^' + months[i] + '$|^' + monthsShort[i] + '$', 'i');\n        }\n        return _monthsParse;\n    })(months$1, monthsShort$1)),\n    shortMonthsParse: ((/**\n     * @param {?} monthsShort\n     * @return {?}\n     */\n    function (monthsShort) {\n        /** @type {?} */\n        let i;\n        /** @type {?} */\n        let _shortMonthsParse = [];\n        for (i = 0; i < 12; i++) {\n            _shortMonthsParse[i] = new RegExp('^' + monthsShort[i] + '$', 'i');\n        }\n        return _shortMonthsParse;\n    })(monthsShort$1)),\n    longMonthsParse: ((/**\n     * @param {?} months\n     * @return {?}\n     */\n    function (months) {\n        /** @type {?} */\n        let i;\n        /** @type {?} */\n        let _longMonthsParse = [];\n        for (i = 0; i < 12; i++) {\n            _longMonthsParse[i] = new RegExp('^' + months[i] + '$', 'i');\n        }\n        return _longMonthsParse;\n    })(months$1)),\n    weekdays: 'neděle_pondělí_úterý_středa_čtvrtek_pátek_sobota'.split('_'),\n    weekdaysShort: 'ne_po_út_st_čt_pá_so'.split('_'),\n    weekdaysMin: 'ne_po_út_st_čt_pá_so'.split('_'),\n    longDateFormat: {\n        LT: 'H:mm',\n        LTS: 'H:mm:ss',\n        L: 'DD.MM.YYYY',\n        LL: 'D. MMMM YYYY',\n        LLL: 'D. MMMM YYYY H:mm',\n        LLLL: 'dddd D. MMMM YYYY H:mm',\n        l: 'D. M. YYYY'\n    },\n    calendar: {\n        sameDay: '[dnes v] LT',\n        nextDay: '[zítra v] LT',\n        /**\n         * @param {?} date\n         * @return {?}\n         */\n        nextWeek(date) {\n            switch (getDayOfWeek(date)) {\n                case 0:\n                    return '[v neděli v] LT';\n                case 1:\n                case 2:\n                    return '[v] dddd [v] LT';\n                case 3:\n                    return '[ve středu v] LT';\n                case 4:\n                    return '[ve čtvrtek v] LT';\n                case 5:\n                    return '[v pátek v] LT';\n                case 6:\n                    return '[v sobotu v] LT';\n            }\n        },\n        lastDay: '[včera v] LT',\n        /**\n         * @param {?} date\n         * @return {?}\n         */\n        lastWeek(date) {\n            switch (getDayOfWeek(date)) {\n                case 0:\n                    return '[minulou neděli v] LT';\n                case 1:\n                case 2:\n                    return '[minulé] dddd [v] LT';\n                case 3:\n                    return '[minulou středu v] LT';\n                case 4:\n                case 5:\n                    return '[minulý] dddd [v] LT';\n                case 6:\n                    return '[minulou sobotu v] LT';\n            }\n        },\n        sameElse: 'L'\n    },\n    relativeTime: {\n        future: 'za %s',\n        past: 'před %s',\n        s: translate,\n        ss: translate,\n        m: translate,\n        mm: translate,\n        h: translate,\n        hh: translate,\n        d: translate,\n        dd: translate,\n        M: translate,\n        MM: translate,\n        y: translate,\n        yy: translate\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n    ordinal: '%d.',\n    week: {\n        dow: 1,\n        // Monday is the first day of the week.\n        doy: 4 // The week that contains Jan 4th is the first week of the year.\n    }\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// tslint:disable:comment-format\n//! moment.js locale configuration\n//! locale : Danish (Denmark) [da]\n//! author : Per Hansen : https://github.com/perhp\n/** @type {?} */\nconst daLocale = {\n    abbr: 'da',\n    months: 'Januar_Februar_Marts_April_Maj_Juni_Juli_August_September_Oktober_November_December'.split('_'),\n    monthsShort: 'Jan_Feb_Mar_Apr_Maj_Jun_Jul_Aug_Sep_Okt_Nov_Dec'.split('_'),\n    weekdays: 'Søndag_Mandag_Tirsdag_Onsdag_Torsdag_Fredag_Lørdag'.split('_'),\n    weekdaysShort: 'Søn_Man_Tir_Ons_Tor_Fre_Lør'.split('_'),\n    weekdaysMin: 'Sø_Ma_Ti_On_To_Fr_Lø'.split('_'),\n    longDateFormat: {\n        LT: 'HH:mm',\n        LTS: 'HH:mm:ss',\n        L: 'DD/MM/YYYY',\n        LL: 'D. MMMM YYYY',\n        LLL: 'D. MMMM YYYY HH:mm',\n        LLLL: 'dddd [d.] D. MMMM YYYY [kl.] HH:mm'\n    },\n    calendar: {\n        sameDay: '[i dag kl.] LT',\n        nextDay: '[i morgen kl.] LT',\n        nextWeek: 'på dddd [kl.] LT',\n        lastDay: '[i går kl.] LT',\n        lastWeek: '[i] dddd[s kl.] LT',\n        sameElse: 'L'\n    },\n    relativeTime: {\n        future: 'om %s',\n        past: '%s siden',\n        s: 'få sekunder',\n        m: 'et minut',\n        mm: '%d minutter',\n        h: 'en time',\n        hh: '%d timer',\n        d: 'en dag',\n        dd: '%d dage',\n        M: 'en måned',\n        MM: '%d måneder',\n        y: 'et år',\n        yy: '%d år'\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n    ordinal: '%d.',\n    week: {\n        dow: 1,\n        // Monday is the first day of the week.\n        doy: 4 // The week that contains Jan 4th is the first week of the year.\n    }\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// tslint:disable:comment-format binary-expression-operand-order max-line-length\n// tslint:disable:no-bitwise prefer-template cyclomatic-complexity\n// tslint:disable:no-shadowed-variable switch-default prefer-const\n// tslint:disable:one-variable-per-declaration newline-before-return\n// tslint:disable:object-literal-key-quotes\n//! moment.js locale configuration\n//! locale : German [de]\n//! author : lluchs : https://github.com/lluchs\n//! author: Menelion Elensúle: https://github.com/Oire\n//! author : Mikolaj Dadela : https://github.com/mik01aj\n/**\n * @param {?} num\n * @param {?} withoutSuffix\n * @param {?} key\n * @param {?} isFuture\n * @return {?}\n */\nfunction processRelativeTime(num, withoutSuffix, key, isFuture) {\n    /** @type {?} */\n    const format = {\n        'm': ['eine Minute', 'einer Minute'],\n        'h': ['eine Stunde', 'einer Stunde'],\n        'd': ['ein Tag', 'einem Tag'],\n        'dd': [num + ' Tage', num + ' Tagen'],\n        'M': ['ein Monat', 'einem Monat'],\n        'MM': [num + ' Monate', num + ' Monaten'],\n        'y': ['ein Jahr', 'einem Jahr'],\n        'yy': [num + ' Jahre', num + ' Jahren']\n    };\n    return withoutSuffix ? format[key][0] : format[key][1];\n}\n/** @type {?} */\nconst deLocale = {\n    abbr: 'de',\n    months: 'Januar_Februar_März_April_Mai_Juni_Juli_August_September_Oktober_November_Dezember'.split('_'),\n    monthsShort: 'Jan._Feb._März_Apr._Mai_Juni_Juli_Aug._Sep._Okt._Nov._Dez.'.split('_'),\n    monthsParseExact: true,\n    weekdays: 'Sonntag_Montag_Dienstag_Mittwoch_Donnerstag_Freitag_Samstag'.split('_'),\n    weekdaysShort: 'So._Mo._Di._Mi._Do._Fr._Sa.'.split('_'),\n    weekdaysMin: 'So_Mo_Di_Mi_Do_Fr_Sa'.split('_'),\n    weekdaysParseExact: true,\n    longDateFormat: {\n        LT: 'HH:mm',\n        LTS: 'HH:mm:ss',\n        L: 'DD.MM.YYYY',\n        LL: 'D. MMMM YYYY',\n        LLL: 'D. MMMM YYYY HH:mm',\n        LLLL: 'dddd, D. MMMM YYYY HH:mm'\n    },\n    calendar: {\n        sameDay: '[heute um] LT [Uhr]',\n        sameElse: 'L',\n        nextDay: '[morgen um] LT [Uhr]',\n        nextWeek: 'dddd [um] LT [Uhr]',\n        lastDay: '[gestern um] LT [Uhr]',\n        lastWeek: '[letzten] dddd [um] LT [Uhr]'\n    },\n    relativeTime: {\n        future: 'in %s',\n        past: 'vor %s',\n        s: 'ein paar Sekunden',\n        ss: '%d Sekunden',\n        m: processRelativeTime,\n        mm: '%d Minuten',\n        h: processRelativeTime,\n        hh: '%d Stunden',\n        d: processRelativeTime,\n        dd: processRelativeTime,\n        M: processRelativeTime,\n        MM: processRelativeTime,\n        y: processRelativeTime,\n        yy: processRelativeTime\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n    ordinal: '%d.',\n    week: {\n        dow: 1,\n        // Monday is the first day of the week.\n        doy: 4 // The week that contains Jan 4th is the first week of the year.\n    }\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// tslint:disable:comment-format binary-expression-operand-order max-line-length\n// tslint:disable:no-bitwise prefer-template cyclomatic-complexity\n// tslint:disable:no-shadowed-variable switch-default prefer-const\n// tslint:disable:one-variable-per-declaration newline-before-return\n//! moment.js locale configuration\n//! locale : English (United Kingdom) [en-gb]\n//! author : Chris Gedrim : https://github.com/chrisgedrim\n/** @type {?} */\nconst enGbLocale = {\n    abbr: 'en-gb',\n    months: 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_'),\n    monthsShort: 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),\n    weekdays: 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_'),\n    weekdaysShort: 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),\n    weekdaysMin: 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),\n    longDateFormat: {\n        LT: 'HH:mm',\n        LTS: 'HH:mm:ss',\n        L: 'DD/MM/YYYY',\n        LL: 'D MMMM YYYY',\n        LLL: 'D MMMM YYYY HH:mm',\n        LLLL: 'dddd, D MMMM YYYY HH:mm'\n    },\n    calendar: {\n        sameDay: '[Today at] LT',\n        nextDay: '[Tomorrow at] LT',\n        nextWeek: 'dddd [at] LT',\n        lastDay: '[Yesterday at] LT',\n        lastWeek: '[Last] dddd [at] LT',\n        sameElse: 'L'\n    },\n    relativeTime: {\n        future: 'in %s',\n        past: '%s ago',\n        s: 'a few seconds',\n        ss: '%d seconds',\n        m: 'a minute',\n        mm: '%d minutes',\n        h: 'an hour',\n        hh: '%d hours',\n        d: 'a day',\n        dd: '%d days',\n        M: 'a month',\n        MM: '%d months',\n        y: 'a year',\n        yy: '%d years'\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}(st|nd|rd|th)/,\n    /**\n     * @param {?} _num\n     * @return {?}\n     */\n    ordinal(_num) {\n        /** @type {?} */\n        const num = Number(_num);\n        /** @type {?} */\n        const b = num % 10;\n        /** @type {?} */\n        const output = (~~(num % 100 / 10) === 1) ? 'th' :\n            (b === 1) ? 'st' :\n                (b === 2) ? 'nd' :\n                    (b === 3) ? 'rd' : 'th';\n        return num + output;\n    },\n    week: {\n        dow: 1,\n        // Monday is the first day of the week.\n        doy: 4 // The week that contains Jan 4th is the first week of the year.\n    }\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n//! moment.js locale configuration\n//! locale : Spanish (Dominican Republic) [es-do]\n/** @type {?} */\nlet monthsShortDot$1 = 'ene._feb._mar._abr._may._jun._jul._ago._sep._oct._nov._dic.'.split('_');\n/** @type {?} */\nlet monthsShort$2 = 'ene_feb_mar_abr_may_jun_jul_ago_sep_oct_nov_dic'.split('_');\n/** @type {?} */\nlet monthsParse$1 = [/^ene/i, /^feb/i, /^mar/i, /^abr/i, /^may/i, /^jun/i, /^jul/i, /^ago/i, /^sep/i, /^oct/i, /^nov/i, /^dic/i];\n/** @type {?} */\nlet monthsRegex$1 = /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre|ene\\.?|feb\\.?|mar\\.?|abr\\.?|may\\.?|jun\\.?|jul\\.?|ago\\.?|sep\\.?|oct\\.?|nov\\.?|dic\\.?)/i;\n/** @type {?} */\nconst esDoLocale = {\n    abbr: 'es-do',\n    months: 'enero_febrero_marzo_abril_mayo_junio_julio_agosto_septiembre_octubre_noviembre_diciembre'.split('_'),\n    /**\n     * @param {?} date\n     * @param {?} format\n     * @param {?=} isUTC\n     * @return {?}\n     */\n    monthsShort(date, format, isUTC) {\n        if (!date) {\n            return monthsShortDot$1;\n        }\n        else if (/-MMM-/.test(format)) {\n            return monthsShort$2[getMonth(date, isUTC)];\n        }\n        else {\n            return monthsShortDot$1[getMonth(date, isUTC)];\n        }\n    },\n    monthsRegex: monthsRegex$1,\n    monthsShortRegex: monthsRegex$1,\n    monthsStrictRegex: /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre)/i,\n    monthsShortStrictRegex: /^(ene\\.?|feb\\.?|mar\\.?|abr\\.?|may\\.?|jun\\.?|jul\\.?|ago\\.?|sep\\.?|oct\\.?|nov\\.?|dic\\.?)/i,\n    monthsParse: monthsParse$1,\n    longMonthsParse: monthsParse$1,\n    shortMonthsParse: monthsParse$1,\n    weekdays: 'domingo_lunes_martes_miércoles_jueves_viernes_sábado'.split('_'),\n    weekdaysShort: 'dom._lun._mar._mié._jue._vie._sáb.'.split('_'),\n    weekdaysMin: 'do_lu_ma_mi_ju_vi_sá'.split('_'),\n    weekdaysParseExact: true,\n    longDateFormat: {\n        LT: 'h:mm A',\n        LTS: 'h:mm:ss A',\n        L: 'DD/MM/YYYY',\n        LL: 'D [de] MMMM [de] YYYY',\n        LLL: 'D [de] MMMM [de] YYYY h:mm A',\n        LLLL: 'dddd, D [de] MMMM [de] YYYY h:mm A'\n    },\n    calendar: {\n        /**\n         * @param {?} date\n         * @return {?}\n         */\n        sameDay(date) {\n            return '[hoy a la' + ((getHours(date) !== 1) ? 's' : '') + '] LT';\n        },\n        /**\n         * @param {?} date\n         * @return {?}\n         */\n        nextDay(date) {\n            return '[mañana a la' + ((getHours(date) !== 1) ? 's' : '') + '] LT';\n        },\n        /**\n         * @param {?} date\n         * @return {?}\n         */\n        nextWeek(date) {\n            return 'dddd [a la' + ((getHours(date) !== 1) ? 's' : '') + '] LT';\n        },\n        /**\n         * @param {?} date\n         * @return {?}\n         */\n        lastDay(date) {\n            return '[ayer a la' + ((getHours(date) !== 1) ? 's' : '') + '] LT';\n        },\n        /**\n         * @param {?} date\n         * @return {?}\n         */\n        lastWeek(date) {\n            return '[el] dddd [pasado a la' + ((getHours(date) !== 1) ? 's' : '') + '] LT';\n        },\n        sameElse: 'L'\n    },\n    relativeTime: {\n        future: 'en %s',\n        past: 'hace %s',\n        s: 'unos segundos',\n        ss: '%d segundos',\n        m: 'un minuto',\n        mm: '%d minutos',\n        h: 'una hora',\n        hh: '%d horas',\n        d: 'un día',\n        dd: '%d días',\n        M: 'un mes',\n        MM: '%d meses',\n        y: 'un año',\n        yy: '%d años'\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}º/,\n    ordinal: '%dº',\n    week: {\n        dow: 1,\n        // Monday is the first day of the week.\n        doy: 4 // The week that contains Jan 4th is the first week of the year.\n    }\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n//! moment.js locale configuration\n//! locale : Spanish [es]\n//! author : Julio Napurí : https://github.com/julionc\n/** @type {?} */\nlet monthsShortDot$2 = 'ene._feb._mar._abr._may._jun._jul._ago._sep._oct._nov._dic.'.split('_');\n/** @type {?} */\nlet monthsShort$3 = 'ene_feb_mar_abr_may_jun_jul_ago_sep_oct_nov_dic'.split('_');\n/** @type {?} */\nlet monthsParse$2 = [/^ene/i, /^feb/i, /^mar/i, /^abr/i, /^may/i, /^jun/i, /^jul/i, /^ago/i, /^sep/i, /^oct/i, /^nov/i, /^dic/i];\n/** @type {?} */\nlet monthsRegex$2 = /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre|ene\\.?|feb\\.?|mar\\.?|abr\\.?|may\\.?|jun\\.?|jul\\.?|ago\\.?|sep\\.?|oct\\.?|nov\\.?|dic\\.?)/i;\n/** @type {?} */\nconst esLocale = {\n    abbr: 'es',\n    months: 'enero_febrero_marzo_abril_mayo_junio_julio_agosto_septiembre_octubre_noviembre_diciembre'.split('_'),\n    /**\n     * @param {?} date\n     * @param {?} format\n     * @param {?=} isUTC\n     * @return {?}\n     */\n    monthsShort(date, format, isUTC) {\n        if (!date) {\n            return monthsShortDot$2;\n        }\n        if (/-MMM-/.test(format)) {\n            return monthsShort$3[getMonth(date, isUTC)];\n        }\n        return monthsShortDot$2[getMonth(date, isUTC)];\n    },\n    monthsRegex: monthsRegex$2,\n    monthsShortRegex: monthsRegex$2,\n    monthsStrictRegex: /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre)/i,\n    monthsShortStrictRegex: /^(ene\\.?|feb\\.?|mar\\.?|abr\\.?|may\\.?|jun\\.?|jul\\.?|ago\\.?|sep\\.?|oct\\.?|nov\\.?|dic\\.?)/i,\n    monthsParse: monthsParse$2,\n    longMonthsParse: monthsParse$2,\n    shortMonthsParse: monthsParse$2,\n    weekdays: 'domingo_lunes_martes_miércoles_jueves_viernes_sábado'.split('_'),\n    weekdaysShort: 'dom._lun._mar._mié._jue._vie._sáb.'.split('_'),\n    weekdaysMin: 'do_lu_ma_mi_ju_vi_sá'.split('_'),\n    weekdaysParseExact: true,\n    longDateFormat: {\n        LT: 'H:mm',\n        LTS: 'H:mm:ss',\n        L: 'DD/MM/YYYY',\n        LL: 'D [de] MMMM [de] YYYY',\n        LLL: 'D [de] MMMM [de] YYYY H:mm',\n        LLLL: 'dddd, D [de] MMMM [de] YYYY H:mm'\n    },\n    calendar: {\n        /**\n         * @param {?} date\n         * @return {?}\n         */\n        sameDay(date) {\n            return '[hoy a la' + ((getHours(date) !== 1) ? 's' : '') + '] LT';\n        },\n        /**\n         * @param {?} date\n         * @return {?}\n         */\n        nextDay(date) {\n            return '[mañana a la' + ((getHours(date) !== 1) ? 's' : '') + '] LT';\n        },\n        /**\n         * @param {?} date\n         * @return {?}\n         */\n        nextWeek(date) {\n            return 'dddd [a la' + ((getHours(date) !== 1) ? 's' : '') + '] LT';\n        },\n        /**\n         * @param {?} date\n         * @return {?}\n         */\n        lastDay(date) {\n            return '[ayer a la' + ((getHours(date) !== 1) ? 's' : '') + '] LT';\n        },\n        /**\n         * @param {?} date\n         * @return {?}\n         */\n        lastWeek(date) {\n            return '[el] dddd [pasado a la' + ((getHours(date) !== 1) ? 's' : '') + '] LT';\n        },\n        sameElse: 'L'\n    },\n    relativeTime: {\n        future: 'en %s',\n        past: 'hace %s',\n        s: 'unos segundos',\n        ss: '%d segundos',\n        m: 'un minuto',\n        mm: '%d minutos',\n        h: 'una hora',\n        hh: '%d horas',\n        d: 'un día',\n        dd: '%d días',\n        M: 'un mes',\n        MM: '%d meses',\n        y: 'un año',\n        yy: '%d años'\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}º/,\n    ordinal: '%dº',\n    week: {\n        dow: 1,\n        // Monday is the first day of the week.\n        doy: 4 // The week that contains Jan 4th is the first week of the year.\n    }\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n//! moment.js locale configuration\n//! locale : Spanish (United States) [es-us]\n//! author : bustta : https://github.com/bustta\n/** @type {?} */\nlet monthsShortDot$3 = 'ene._feb._mar._abr._may._jun._jul._ago._sep._oct._nov._dic.'.split('_');\n/** @type {?} */\nlet monthsShort$4 = 'ene_feb_mar_abr_may_jun_jul_ago_sep_oct_nov_dic'.split('_');\n/** @type {?} */\nconst esUsLocale = {\n    abbr: 'es-us',\n    months: 'enero_febrero_marzo_abril_mayo_junio_julio_agosto_septiembre_octubre_noviembre_diciembre'.split('_'),\n    /**\n     * @param {?} date\n     * @param {?} format\n     * @param {?=} isUTC\n     * @return {?}\n     */\n    monthsShort(date, format, isUTC) {\n        if (!date) {\n            return monthsShortDot$3;\n        }\n        else if (/-MMM-/.test(format)) {\n            return monthsShort$4[getMonth(date, isUTC)];\n        }\n        else {\n            return monthsShortDot$3[getMonth(date, isUTC)];\n        }\n    },\n    monthsParseExact: true,\n    weekdays: 'domingo_lunes_martes_miércoles_jueves_viernes_sábado'.split('_'),\n    weekdaysShort: 'dom._lun._mar._mié._jue._vie._sáb.'.split('_'),\n    weekdaysMin: 'do_lu_ma_mi_ju_vi_sá'.split('_'),\n    weekdaysParseExact: true,\n    longDateFormat: {\n        LT: 'h:mm A',\n        LTS: 'h:mm:ss A',\n        L: 'MM/DD/YYYY',\n        LL: 'MMMM [de] D [de] YYYY',\n        LLL: 'MMMM [de] D [de] YYYY h:mm A',\n        LLLL: 'dddd, MMMM [de] D [de] YYYY h:mm A'\n    },\n    calendar: {\n        /**\n         * @param {?} date\n         * @return {?}\n         */\n        sameDay(date) {\n            return '[hoy a la' + ((getHours(date) !== 1) ? 's' : '') + '] LT';\n        },\n        /**\n         * @param {?} date\n         * @return {?}\n         */\n        nextDay(date) {\n            return '[mañana a la' + ((getHours(date) !== 1) ? 's' : '') + '] LT';\n        },\n        /**\n         * @param {?} date\n         * @return {?}\n         */\n        nextWeek(date) {\n            return 'dddd [a la' + ((getHours(date) !== 1) ? 's' : '') + '] LT';\n        },\n        /**\n         * @param {?} date\n         * @return {?}\n         */\n        lastDay(date) {\n            return '[ayer a la' + ((getHours(date) !== 1) ? 's' : '') + '] LT';\n        },\n        /**\n         * @param {?} date\n         * @return {?}\n         */\n        lastWeek(date) {\n            return '[el] dddd [pasado a la' + ((getHours(date) !== 1) ? 's' : '') + '] LT';\n        },\n        sameElse: 'L'\n    },\n    relativeTime: {\n        future: 'en %s',\n        past: 'hace %s',\n        s: 'unos segundos',\n        ss: '%d segundos',\n        m: 'un minuto',\n        mm: '%d minutos',\n        h: 'una hora',\n        hh: '%d horas',\n        d: 'un día',\n        dd: '%d días',\n        M: 'un mes',\n        MM: '%d meses',\n        y: 'un año',\n        yy: '%d años'\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}º/,\n    ordinal: '%dº',\n    week: {\n        dow: 0,\n        // Sunday is the first day of the week.\n        doy: 6 // The week that contains Jan 1st is the first week of the year.\n    }\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// tslint:disable:comment-format binary-expression-operand-order max-line-length\n// tslint:disable:no-bitwise prefer-template cyclomatic-complexity\n// tslint:disable:no-shadowed-variable switch-default prefer-const\n// tslint:disable:one-variable-per-declaration newline-before-return\n//! moment.js locale configuration\n//! locale : Estonian [et]\n//! author : Chris Gedrim : https://github.com/a90machado\n/** @type {?} */\nconst processRelativeTime$1 = (/**\n * @param {?} num\n * @param {?} withoutSuffix\n * @param {?} key\n * @param {?} isFuture\n * @return {?}\n */\nfunction (num, withoutSuffix, key, isFuture) {\n    /** @type {?} */\n    const format = {\n        s: ['mõne sekundi', 'mõni sekund', 'paar sekundit'],\n        ss: [num + 'sekundi', num + 'sekundit'],\n        m: ['ühe minuti', 'üks minut'],\n        mm: [num + ' minuti', num + ' minutit'],\n        h: ['ühe tunni', 'tund aega', 'üks tund'],\n        hh: [num + ' tunni', num + ' tundi'],\n        d: ['ühe päeva', 'üks päev'],\n        M: ['kuu aja', 'kuu aega', 'üks kuu'],\n        MM: [num + ' kuu', num + ' kuud'],\n        y: ['ühe aasta', 'aasta', 'üks aasta'],\n        yy: [num + ' aasta', num + ' aastat']\n    };\n    if (withoutSuffix) {\n        return format[key][2] ? format[key][2] : format[key][1];\n    }\n    return isFuture ? format[key][0] : format[key][1];\n});\n/** @type {?} */\nconst etLocale = {\n    abbr: 'et',\n    months: 'jaanuar_veebruar_märts_aprill_mai_juuni_juuli_august_september_oktoober_november_detsember'.split('_'),\n    monthsShort: 'jaan_veebr_märts_apr_mai_juuni_juuli_aug_sept_okt_nov_dets'.split('_'),\n    weekdays: 'pühapäev_esmaspäev_teisipäev_kolmapäev_neljapäev_reede_laupäev'.split('_'),\n    weekdaysShort: 'P_E_T_K_N_R_L'.split('_'),\n    weekdaysMin: 'P_E_T_K_N_R_L'.split('_'),\n    longDateFormat: {\n        LT: 'H:mm',\n        LTS: 'H:mm:ss',\n        L: 'DD.MM.YYYY',\n        LL: 'D. MMMM YYYY',\n        LLL: 'D. MMMM YYYY H:mm',\n        LLLL: 'dddd, D. MMMM YYYY H:mm'\n    },\n    calendar: {\n        sameDay: '[Täna,] LT',\n        nextDay: '[Homme,] LT',\n        nextWeek: '[Järgmine] dddd LT',\n        lastDay: '[Eile,] LT',\n        lastWeek: '[Eelmine] dddd LT',\n        sameElse: 'L'\n    },\n    relativeTime: {\n        future: '%s pärast',\n        past: '%s tagasi',\n        s: processRelativeTime$1,\n        ss: processRelativeTime$1,\n        m: processRelativeTime$1,\n        mm: processRelativeTime$1,\n        h: processRelativeTime$1,\n        hh: processRelativeTime$1,\n        d: processRelativeTime$1,\n        dd: '%d päeva',\n        M: processRelativeTime$1,\n        MM: processRelativeTime$1,\n        y: processRelativeTime$1,\n        yy: processRelativeTime$1\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}./,\n    ordinal: '%d.',\n    week: {\n        dow: 1,\n        // Monday is the first day of the week.\n        doy: 4 // The week that contains Jan 4th is the first week of the year.\n    }\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// tslint:disable:comment-format binary-expression-operand-order max-line-length\n// tslint:disable:no-bitwise prefer-template cyclomatic-complexity\n// tslint:disable:no-shadowed-variable switch-default prefer-const\n// tslint:disable:one-variable-per-declaration newline-before-return\n//! moment.js locale configuration\n// https://github.com/moment/moment/blob/develop/locale/fi.js\n/** @type {?} */\nvar numbersPast = 'nolla yksi kaksi kolme neljä viisi kuusi seitsemän kahdeksan yhdeksän'.split(' ');\n/** @type {?} */\nvar numbersFuture = [\n    'nolla', 'yhden', 'kahden', 'kolmen', 'neljän', 'viiden', 'kuuden',\n    numbersPast[7], numbersPast[8], numbersPast[9]\n];\n/**\n * @param {?} num\n * @param {?} withoutSuffix\n * @param {?} key\n * @param {?} isFuture\n * @return {?}\n */\nfunction translate$1(num, withoutSuffix, key, isFuture) {\n    /** @type {?} */\n    var result = '';\n    switch (key) {\n        case 's':\n            return isFuture ? 'muutaman sekunnin' : 'muutama sekunti';\n        case 'ss':\n            return isFuture ? 'sekunnin' : 'sekuntia';\n        case 'm':\n            return isFuture ? 'minuutin' : 'minuutti';\n        case 'mm':\n            result = isFuture ? 'minuutin' : 'minuuttia';\n            break;\n        case 'h':\n            return isFuture ? 'tunnin' : 'tunti';\n        case 'hh':\n            result = isFuture ? 'tunnin' : 'tuntia';\n            break;\n        case 'd':\n            return isFuture ? 'päivän' : 'päivä';\n        case 'dd':\n            result = isFuture ? 'päivän' : 'päivää';\n            break;\n        case 'M':\n            return isFuture ? 'kuukauden' : 'kuukausi';\n        case 'MM':\n            result = isFuture ? 'kuukauden' : 'kuukautta';\n            break;\n        case 'y':\n            return isFuture ? 'vuoden' : 'vuosi';\n        case 'yy':\n            result = isFuture ? 'vuoden' : 'vuotta';\n            break;\n    }\n    result = verbalNumber(num, isFuture) + ' ' + result;\n    return result;\n}\n/**\n * @param {?} num\n * @param {?} isFuture\n * @return {?}\n */\nfunction verbalNumber(num, isFuture) {\n    return num < 10 ? (isFuture ? numbersFuture[num] : numbersPast[num]) : num;\n}\n/** @type {?} */\nconst fiLocale = {\n    abbr: 'fi',\n    months: 'tammikuu_helmikuu_maaliskuu_huhtikuu_toukokuu_kesäkuu_heinäkuu_elokuu_syyskuu_lokakuu_marraskuu_joulukuu'.split('_'),\n    monthsShort: 'tammi_helmi_maalis_huhti_touko_kesä_heinä_elo_syys_loka_marras_joulu'.split('_'),\n    weekdays: 'sunnuntai_maanantai_tiistai_keskiviikko_torstai_perjantai_lauantai'.split('_'),\n    weekdaysShort: 'su_ma_ti_ke_to_pe_la'.split('_'),\n    weekdaysMin: 'su_ma_ti_ke_to_pe_la'.split('_'),\n    longDateFormat: {\n        LT: 'HH.mm',\n        LTS: 'HH.mm.ss',\n        L: 'DD.MM.YYYY',\n        LL: 'Do MMMM[ta] YYYY',\n        LLL: 'Do MMMM[ta] YYYY, [klo] HH.mm',\n        LLLL: 'dddd, Do MMMM[ta] YYYY, [klo] HH.mm',\n        l: 'D.M.YYYY',\n        ll: 'Do MMM YYYY',\n        lll: 'Do MMM YYYY, [klo] HH.mm',\n        llll: 'ddd, Do MMM YYYY, [klo] HH.mm'\n    },\n    calendar: {\n        sameDay: '[tänään] [klo] LT',\n        nextDay: '[huomenna] [klo] LT',\n        nextWeek: 'dddd [klo] LT',\n        lastDay: '[eilen] [klo] LT',\n        lastWeek: '[viime] dddd[na] [klo] LT',\n        sameElse: 'L'\n    },\n    relativeTime: {\n        future: '%s päästä',\n        past: '%s sitten',\n        s: translate$1,\n        ss: translate$1,\n        m: translate$1,\n        mm: translate$1,\n        h: translate$1,\n        hh: translate$1,\n        d: translate$1,\n        dd: translate$1,\n        M: translate$1,\n        MM: translate$1,\n        y: translate$1,\n        yy: translate$1\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n    ordinal: '%d.',\n    week: {\n        dow: 1,\n        // Monday is the first day of the week.\n        doy: 4 // The week that contains Jan 4th is the first week of the year.\n    }\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// tslint:disable:comment-format binary-expression-operand-order max-line-length\n// tslint:disable:no-bitwise prefer-template cyclomatic-complexity\n// tslint:disable:no-shadowed-variable switch-default prefer-const\n// tslint:disable:one-variable-per-declaration newline-before-return\n//! moment.js locale configuration\n//! locale : French [fr]\n//! author : John Fischer : https://github.com/jfroffice\n/** @type {?} */\nconst frLocale = {\n    abbr: 'fr',\n    months: 'janvier_février_mars_avril_mai_juin_juillet_août_septembre_octobre_novembre_décembre'.split('_'),\n    monthsShort: 'janv._févr._mars_avr._mai_juin_juil._août_sept._oct._nov._déc.'.split('_'),\n    monthsParseExact: true,\n    weekdays: 'dimanche_lundi_mardi_mercredi_jeudi_vendredi_samedi'.split('_'),\n    weekdaysShort: 'dim._lun._mar._mer._jeu._ven._sam.'.split('_'),\n    weekdaysMin: 'di_lu_ma_me_je_ve_sa'.split('_'),\n    weekdaysParseExact: true,\n    longDateFormat: {\n        LT: 'HH:mm',\n        LTS: 'HH:mm:ss',\n        L: 'DD/MM/YYYY',\n        LL: 'D MMMM YYYY',\n        LLL: 'D MMMM YYYY HH:mm',\n        LLLL: 'dddd D MMMM YYYY HH:mm'\n    },\n    calendar: {\n        sameDay: '[Aujourd’hui à] LT',\n        nextDay: '[Demain à] LT',\n        nextWeek: 'dddd [à] LT',\n        lastDay: '[Hier à] LT',\n        lastWeek: 'dddd [dernier à] LT',\n        sameElse: 'L'\n    },\n    relativeTime: {\n        future: 'dans %s',\n        past: 'il y a %s',\n        s: 'quelques secondes',\n        ss: '%d secondes',\n        m: 'une minute',\n        mm: '%d minutes',\n        h: 'une heure',\n        hh: '%d heures',\n        d: 'un jour',\n        dd: '%d jours',\n        M: 'un mois',\n        MM: '%d mois',\n        y: 'un an',\n        yy: '%d ans'\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}(er|)/,\n    /**\n     * @param {?} _num\n     * @param {?} period\n     * @return {?}\n     */\n    ordinal(_num, period) {\n        /** @type {?} */\n        const num = Number(_num);\n        switch (period) {\n            // TODO: Return 'e' when day of month > 1. Move this case inside\n            // block for masculine words below.\n            // See https://github.com/moment/moment/issues/3375\n            case 'D':\n                return num + (num === 1 ? 'er' : '');\n            // Words with masculine grammatical gender: mois, trimestre, jour\n            default:\n            case 'M':\n            case 'Q':\n            case 'DDD':\n            case 'd':\n                return num + (num === 1 ? 'er' : 'e');\n            // Words with feminine grammatical gender: semaine\n            case 'w':\n            case 'W':\n                return num + (num === 1 ? 're' : 'e');\n        }\n    },\n    week: {\n        dow: 1,\n        // Monday is the first day of the week.\n        doy: 4 // The week that contains Jan 4th is the first week of the year.\n    }\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n//! moment.js locale configuration\n//! locale : Galician [gl]\n//! author : Darío Beiró : https://github.com/quinobravo\n/** @type {?} */\nlet monthsShortDot$4 = 'xan._feb._mar._abr._mai._xuñ._xul._ago._set._out._nov._dec.'.split('_');\n/** @type {?} */\nlet monthsShort$5 = 'xan_feb_mar_abr_mai_xuñ_xul_ago_set_out_nov_dec'.split('_');\n/** @type {?} */\nlet monthsParse$3 = [/^xan/i, /^feb/i, /^mar/i, /^abr/i, /^mai/i, /^xuñ/i, /^xul/i, /^ago/i, /^set/i, /^out/i, /^nov/i, /^dec/i];\n/** @type {?} */\nlet monthsRegex$3 = /^(xaneiro|febreiro|marzo|abril|maio|xuño|xullo|agosto|setembro|outubro|novembro|decembro|xan\\.?|feb\\.?|mar\\.?|abr\\.?|mai\\.?|xuñ\\.?|xul\\.?|ago\\.?|set\\.?|out\\.?|nov\\.?|dec\\.?)/i;\n/** @type {?} */\nconst glLocale = {\n    abbr: 'gl',\n    months: 'xaneiro_febreiro_marzo_abril_maio_xuño_xullo_agosto_setembro_outubro_novembro_decembro'.split('_'),\n    /**\n     * @param {?} date\n     * @param {?} format\n     * @param {?=} isUTC\n     * @return {?}\n     */\n    monthsShort(date, format, isUTC) {\n        if (!date) {\n            return monthsShortDot$4;\n        }\n        if (/-MMM-/.test(format)) {\n            return monthsShort$5[getMonth(date, isUTC)];\n        }\n        return monthsShortDot$4[getMonth(date, isUTC)];\n    },\n    monthsRegex: monthsRegex$3,\n    monthsShortRegex: monthsRegex$3,\n    monthsStrictRegex: /^(xaneiro|febreiro|marzo|abril|maio|xuño|xullo|agosto|setembro|outubro|novembro|decembro)/i,\n    monthsShortStrictRegex: /^(xan\\.?|feb\\.?|mar\\.?|abr\\.?|mai\\.?|xuñ\\.?|xul\\.?|ago\\.?|set\\.?|out\\.?|nov\\.?|dec\\.?)/i,\n    monthsParse: monthsParse$3,\n    longMonthsParse: monthsParse$3,\n    shortMonthsParse: monthsParse$3,\n    weekdays: 'domingo_luns_martes_mércores_xoves_venres_sábado'.split('_'),\n    weekdaysShort: 'dom._lun._mar._mér._xov._ven._sáb.'.split('_'),\n    weekdaysMin: 'do_lu_ma_mé_xo_ve_sá'.split('_'),\n    weekdaysParseExact: true,\n    longDateFormat: {\n        LT: 'H:mm',\n        LTS: 'H:mm:ss',\n        L: 'DD/MM/YYYY',\n        LL: 'D [de] MMMM [de] YYYY',\n        LLL: 'D [de] MMMM [de] YYYY H:mm',\n        LLLL: 'dddd, D [de] MMMM [de] YYYY H:mm'\n    },\n    calendar: {\n        /**\n         * @param {?} date\n         * @return {?}\n         */\n        sameDay(date) {\n            return '[hoxe á' + ((getHours(date) !== 1) ? 's' : '') + '] LT';\n        },\n        /**\n         * @param {?} date\n         * @return {?}\n         */\n        nextDay(date) {\n            return '[mañan á' + ((getHours(date) !== 1) ? 's' : '') + '] LT';\n        },\n        /**\n         * @param {?} date\n         * @return {?}\n         */\n        nextWeek(date) {\n            return 'dddd [á' + ((getHours(date) !== 1) ? 's' : '') + '] LT';\n        },\n        /**\n         * @param {?} date\n         * @return {?}\n         */\n        lastDay(date) {\n            return '[onte á' + ((getHours(date) !== 1) ? 's' : '') + '] LT';\n        },\n        /**\n         * @param {?} date\n         * @return {?}\n         */\n        lastWeek(date) {\n            return '[o] dddd [pasado á' + ((getHours(date) !== 1) ? 's' : '') + '] LT';\n        },\n        sameElse: 'L'\n    },\n    relativeTime: {\n        future: 'en %s',\n        past: 'fai %s',\n        s: 'uns segundos',\n        ss: '%d segundos',\n        m: 'un minuto',\n        mm: '%d minutos',\n        h: 'unha hora',\n        hh: '%d horas',\n        d: 'un día',\n        dd: '%d días',\n        M: 'un mes',\n        MM: '%d meses',\n        y: 'un ano',\n        yy: '%d anos'\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}º/,\n    ordinal: '%dº',\n    week: {\n        dow: 1,\n        // Monday is the first day of the week.\n        doy: 4 // The week that contains Jan 4th is the first week of the year.\n    }\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// tslint:disable:comment-format binary-expression-operand-order max-line-length\n// tslint:disable:no-bitwise prefer-template cyclomatic-complexity\n// tslint:disable:no-shadowed-variable switch-default prefer-const\n// tslint:disable:one-variable-per-declaration newline-before-return\n//! moment.js locale configuration\n//! locale : Hebrew [he]\n//! author : Tomer Cohen : https://github.com/tomer\n//! author : Moshe Simantov : https://github.com/DevelopmentIL\n//! author : Tal Ater : https://github.com/TalAter\n/** @type {?} */\nconst heLocale = {\n    abbr: 'he',\n    months: 'ינואר_פברואר_מרץ_אפריל_מאי_יוני_יולי_אוגוסט_ספטמבר_אוקטובר_נובמבר_דצמבר'.split('_'),\n    monthsShort: 'ינו׳_פבר׳_מרץ_אפר׳_מאי_יוני_יולי_אוג׳_ספט׳_אוק׳_נוב׳_דצמ׳'.split('_'),\n    weekdays: 'ראשון_שני_שלישי_רביעי_חמישי_שישי_שבת'.split('_'),\n    weekdaysShort: 'א׳_ב׳_ג׳_ד׳_ה׳_ו׳_ש׳'.split('_'),\n    weekdaysMin: 'א_ב_ג_ד_ה_ו_ש'.split('_'),\n    longDateFormat: {\n        LT: 'HH:mm',\n        LTS: 'HH:mm:ss',\n        L: 'DD/MM/YYYY',\n        LL: 'D [ב]MMMM YYYY',\n        LLL: 'D [ב]MMMM YYYY HH:mm',\n        LLLL: 'dddd, D [ב]MMMM YYYY HH:mm',\n        l: 'D/M/YYYY',\n        ll: 'D MMM YYYY',\n        lll: 'D MMM YYYY HH:mm',\n        llll: 'ddd, D MMM YYYY HH:mm'\n    },\n    calendar: {\n        sameDay: '[היום ב־]LT',\n        nextDay: '[מחר ב־]LT',\n        nextWeek: 'dddd [בשעה] LT',\n        lastDay: '[אתמול ב־]LT',\n        lastWeek: '[ביום] dddd [האחרון בשעה] LT',\n        sameElse: 'L'\n    },\n    relativeTime: {\n        future: 'בעוד %s',\n        past: 'לפני %s',\n        s: 'מספר שניות',\n        ss: '%d שניות',\n        m: 'דקה',\n        mm: '%d דקות',\n        h: 'שעה',\n        /**\n         * @param {?} num\n         * @return {?}\n         */\n        hh(num) {\n            if (num === 2) {\n                return 'שעתיים';\n            }\n            return num + ' שעות';\n        },\n        d: 'יום',\n        /**\n         * @param {?} num\n         * @return {?}\n         */\n        dd(num) {\n            if (num === 2) {\n                return 'יומיים';\n            }\n            return num + ' ימים';\n        },\n        M: 'חודש',\n        /**\n         * @param {?} num\n         * @return {?}\n         */\n        MM(num) {\n            if (num === 2) {\n                return 'חודשיים';\n            }\n            return num + ' חודשים';\n        },\n        y: 'שנה',\n        /**\n         * @param {?} num\n         * @return {?}\n         */\n        yy(num) {\n            if (num === 2) {\n                return 'שנתיים';\n            }\n            else if (num % 10 === 0 && num !== 10) {\n                return num + ' שנה';\n            }\n            return num + ' שנים';\n        }\n    },\n    meridiemParse: /אחה\"צ|לפנה\"צ|אחרי הצהריים|לפני הצהריים|לפנות בוקר|בבוקר|בערב/i,\n    /**\n     * @param {?} input\n     * @return {?}\n     */\n    isPM(input) {\n        return /^(אחה\"צ|אחרי הצהריים|בערב)$/.test(input);\n    },\n    /**\n     * @param {?} hour\n     * @param {?} minute\n     * @param {?} isLower\n     * @return {?}\n     */\n    meridiem(hour, minute, isLower) {\n        if (hour < 5) {\n            return 'לפנות בוקר';\n        }\n        else if (hour < 10) {\n            return 'בבוקר';\n        }\n        else if (hour < 12) {\n            return isLower ? 'לפנה\"צ' : 'לפני הצהריים';\n        }\n        else if (hour < 18) {\n            return isLower ? 'אחה\"צ' : 'אחרי הצהריים';\n        }\n        else {\n            return 'בערב';\n        }\n    }\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// tslint:disable:comment-format binary-expression-operand-order max-line-length\n// tslint:disable:no-bitwise prefer-template cyclomatic-complexity\n// tslint:disable:no-shadowed-variable switch-default prefer-const\n// tslint:disable:one-variable-per-declaration newline-before-return\n// tslint:disable:no-parameter-reassignment prefer-switch\n//! moment.js locale configuration\n//! locale : Hindi [hi]\n//! author : Mayank Singhal : https://github.com/mayanksinghal\n/** @type {?} */\nlet symbolMap$1 = {\n    1: '१',\n    2: '२',\n    3: '३',\n    4: '४',\n    5: '५',\n    6: '६',\n    7: '७',\n    8: '८',\n    9: '९',\n    0: '०'\n};\n/** @type {?} */\nlet numberMap$1 = {\n    '१': '1',\n    '२': '2',\n    '३': '3',\n    '४': '4',\n    '५': '5',\n    '६': '6',\n    '७': '7',\n    '८': '8',\n    '९': '9',\n    '०': '0'\n};\n/** @type {?} */\nconst hiLocale = {\n    abbr: 'hi',\n    months: 'जनवरी_फ़रवरी_मार्च_अप्रैल_मई_जून_जुलाई_अगस्त_सितम्बर_अक्टूबर_नवम्बर_दिसम्बर'.split('_'),\n    monthsShort: 'जन._फ़र._मार्च_अप्रै._मई_जून_जुल._अग._सित._अक्टू._नव._दिस.'.split('_'),\n    monthsParseExact: true,\n    weekdays: 'रविवार_सोमवार_मंगलवार_बुधवार_गुरूवार_शुक्रवार_शनिवार'.split('_'),\n    weekdaysShort: 'रवि_सोम_मंगल_बुध_गुरू_शुक्र_शनि'.split('_'),\n    weekdaysMin: 'र_सो_मं_बु_गु_शु_श'.split('_'),\n    longDateFormat: {\n        LT: 'A h:mm बजे',\n        LTS: 'A h:mm:ss बजे',\n        L: 'DD/MM/YYYY',\n        LL: 'D MMMM YYYY',\n        LLL: 'D MMMM YYYY, A h:mm बजे',\n        LLLL: 'dddd, D MMMM YYYY, A h:mm बजे'\n    },\n    calendar: {\n        sameDay: '[आज] LT',\n        nextDay: '[कल] LT',\n        nextWeek: 'dddd, LT',\n        lastDay: '[कल] LT',\n        lastWeek: '[पिछले] dddd, LT',\n        sameElse: 'L'\n    },\n    relativeTime: {\n        future: '%s में',\n        past: '%s पहले',\n        s: 'कुछ ही क्षण',\n        ss: '%d सेकंड',\n        m: 'एक मिनट',\n        mm: '%d मिनट',\n        h: 'एक घंटा',\n        hh: '%d घंटे',\n        d: 'एक दिन',\n        dd: '%d दिन',\n        M: 'एक महीने',\n        MM: '%d महीने',\n        y: 'एक वर्ष',\n        yy: '%d वर्ष'\n    },\n    /**\n     * @param {?} str\n     * @return {?}\n     */\n    preparse(str) {\n        return str.replace(/[१२३४५६७८९०]/g, (/**\n         * @param {?} match\n         * @return {?}\n         */\n        function (match) {\n            return numberMap$1[match];\n        }));\n    },\n    /**\n     * @param {?} str\n     * @return {?}\n     */\n    postformat(str) {\n        return str.replace(/\\d/g, (/**\n         * @param {?} match\n         * @return {?}\n         */\n        function (match) {\n            return symbolMap$1[match];\n        }));\n    },\n    // Hindi notation for meridiems are quite fuzzy in practice. While there exists\n    // a rigid notion of a 'Pahar' it is not used as rigidly in modern Hindi.\n    meridiemParse: /रात|सुबह|दोपहर|शाम/,\n    /**\n     * @param {?} hour\n     * @param {?} meridiem\n     * @return {?}\n     */\n    meridiemHour(hour, meridiem) {\n        if (hour === 12) {\n            hour = 0;\n        }\n        if (meridiem === 'रात') {\n            return hour < 4 ? hour : hour + 12;\n        }\n        else if (meridiem === 'सुबह') {\n            return hour;\n        }\n        else if (meridiem === 'दोपहर') {\n            return hour >= 10 ? hour : hour + 12;\n        }\n        else if (meridiem === 'शाम') {\n            return hour + 12;\n        }\n    },\n    /**\n     * @param {?} hour\n     * @param {?} minute\n     * @param {?} isLower\n     * @return {?}\n     */\n    meridiem(hour, minute, isLower) {\n        if (hour < 4) {\n            return 'रात';\n        }\n        else if (hour < 10) {\n            return 'सुबह';\n        }\n        else if (hour < 17) {\n            return 'दोपहर';\n        }\n        else if (hour < 20) {\n            return 'शाम';\n        }\n        else {\n            return 'रात';\n        }\n    },\n    week: {\n        dow: 0,\n        // Sunday is the first day of the week.\n        doy: 6 // The week that contains Jan 1st is the first week of the year.\n    }\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n//! moment.js locale configuration\n//! locale : Hungarian [hu]\n//! author : Adam Brunner : https://github.com/adambrunner\n/** @type {?} */\nlet weekEndings = 'vasárnap hétfőn kedden szerdán csütörtökön pénteken szombaton'.split(' ');\n/**\n * @param {?} num\n * @param {?} withoutSuffix\n * @param {?} key\n * @param {?} isFuture\n * @return {?}\n */\nfunction translate$2(num, withoutSuffix, key, isFuture) {\n    switch (key) {\n        case 's':\n            return (isFuture || withoutSuffix) ? 'néhány másodperc' : 'néhány másodperce';\n        case 'ss':\n            return num + ((isFuture || withoutSuffix) ? ' másodperc' : ' másodperce');\n        case 'm':\n            return 'egy' + (isFuture || withoutSuffix ? ' perc' : ' perce');\n        case 'mm':\n            return num + (isFuture || withoutSuffix ? ' perc' : ' perce');\n        case 'h':\n            return 'egy' + (isFuture || withoutSuffix ? ' óra' : ' órája');\n        case 'hh':\n            return num + (isFuture || withoutSuffix ? ' óra' : ' órája');\n        case 'd':\n            return 'egy' + (isFuture || withoutSuffix ? ' nap' : ' napja');\n        case 'dd':\n            return num + (isFuture || withoutSuffix ? ' nap' : ' napja');\n        case 'M':\n            return 'egy' + (isFuture || withoutSuffix ? ' hónap' : ' hónapja');\n        case 'MM':\n            return num + (isFuture || withoutSuffix ? ' hónap' : ' hónapja');\n        case 'y':\n            return 'egy' + (isFuture || withoutSuffix ? ' év' : ' éve');\n        case 'yy':\n            return num + (isFuture || withoutSuffix ? ' év' : ' éve');\n    }\n    return '';\n}\n/**\n * @param {?} date\n * @param {?} isFuture\n * @return {?}\n */\nfunction week(date, isFuture) {\n    return (isFuture ? '' : '[múlt] ') + '[' + weekEndings[getDayOfWeek(date)] + '] LT[-kor]';\n}\n/** @type {?} */\nconst huLocale = {\n    abbr: 'hu',\n    months: 'január_február_március_április_május_június_július_augusztus_szeptember_október_november_december'.split('_'),\n    monthsShort: 'jan_feb_márc_ápr_máj_jún_júl_aug_szept_okt_nov_dec'.split('_'),\n    weekdays: 'vasárnap_hétfő_kedd_szerda_csütörtök_péntek_szombat'.split('_'),\n    weekdaysShort: 'vas_hét_kedd_sze_csüt_pén_szo'.split('_'),\n    weekdaysMin: 'v_h_k_sze_cs_p_szo'.split('_'),\n    longDateFormat: {\n        LT: 'H:mm',\n        LTS: 'H:mm:ss',\n        L: 'YYYY.MM.DD.',\n        LL: 'YYYY. MMMM D.',\n        LLL: 'YYYY. MMMM D. H:mm',\n        LLLL: 'YYYY. MMMM D., dddd H:mm'\n    },\n    meridiemParse: /de|du/i,\n    /**\n     * @param {?} input\n     * @return {?}\n     */\n    isPM(input) {\n        return input.charAt(1).toLowerCase() === 'u';\n    },\n    /**\n     * @param {?} hours\n     * @param {?} minutes\n     * @param {?} isLower\n     * @return {?}\n     */\n    meridiem(hours, minutes, isLower) {\n        if (hours < 12) {\n            return isLower === true ? 'de' : 'DE';\n        }\n        else {\n            return isLower === true ? 'du' : 'DU';\n        }\n    },\n    calendar: {\n        sameDay: '[ma] LT[-kor]',\n        nextDay: '[holnap] LT[-kor]',\n        /**\n         * @param {?} date\n         * @return {?}\n         */\n        nextWeek(date) {\n            return week(date, true);\n        },\n        lastDay: '[tegnap] LT[-kor]',\n        /**\n         * @param {?} date\n         * @return {?}\n         */\n        lastWeek(date) {\n            return week(date, false);\n        },\n        sameElse: 'L'\n    },\n    relativeTime: {\n        future: '%s múlva',\n        past: '%s',\n        s: translate$2,\n        ss: translate$2,\n        m: translate$2,\n        mm: translate$2,\n        h: translate$2,\n        hh: translate$2,\n        d: translate$2,\n        dd: translate$2,\n        M: translate$2,\n        MM: translate$2,\n        y: translate$2,\n        yy: translate$2\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n    ordinal: '%d.',\n    week: {\n        dow: 1,\n        // Monday is the first day of the week.\n        doy: 4 // The week that contains Jan 4th is the first week of the year.\n    }\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// tslint:disable:comment-format binary-expression-operand-order max-line-length\n// tslint:disable:no-bitwise prefer-template cyclomatic-complexity\n// tslint:disable:no-shadowed-variable switch-default prefer-const\n// tslint:disable:one-variable-per-declaration newline-before-return\n//! moment.js locale configuration\n//! locale : Croatian [hr]\n//! author : Danijel Grmec : https://github.com/cobaltsis\n/** @type {?} */\nconst hrLocale = {\n    abbr: 'hr',\n    months: 'Siječanj_Veljača_Ožujak_Travanj_Svibanj_Lipanj_Srpanj_Kolovoz_Rujan_Listopad_Studeni_Prosinac'.split('_'),\n    monthsShort: 'Sij_Velj_Ožu_Tra_Svi_Lip_Srp_Kol_Ruj_Lis_Stu_Pro'.split('_'),\n    weekdays: 'Nedjelja_Ponedjeljak_Utorak_Srijeda_Četvrtak_Petak_Subota'.split('_'),\n    weekdaysShort: 'Ned_Pon_Uto_Sri_Čet_Pet_Sub'.split('_'),\n    weekdaysMin: 'Ne_Po_Ut_Sr_Če_Pe_Su'.split('_'),\n    longDateFormat: {\n        LT: 'HH:mm',\n        LTS: 'HH:mm:ss',\n        L: 'DD/MM/YYYY',\n        LL: 'D MMMM YYYY',\n        LLL: 'D MMMM YYYY HH:mm',\n        LLLL: 'dddd, D MMMM YYYY HH:mm'\n    },\n    calendar: {\n        sameDay: '[Danas u] LT',\n        nextDay: '[Sutra u] LT',\n        nextWeek: 'dddd [u] LT',\n        lastDay: '[Jučer u] LT',\n        lastWeek: '[Zadnji] dddd [u] LT',\n        sameElse: 'L'\n    },\n    invalidDate: 'Neispravan datum',\n    relativeTime: {\n        future: 'za %s',\n        past: '%s prije',\n        s: 'nekoliko sekundi',\n        ss: '%d sekundi',\n        m: 'minuta',\n        mm: '%d minuta',\n        h: 'sat',\n        hh: '%d sati',\n        d: 'dan',\n        dd: '%d dana',\n        M: 'mjesec',\n        MM: '%d mjeseci',\n        y: 'godina',\n        yy: '%d godina'\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}(st|nd|rd|th)/,\n    /**\n     * @param {?} _num\n     * @return {?}\n     */\n    ordinal(_num) {\n        /** @type {?} */\n        const num = Number(_num);\n        /** @type {?} */\n        const b = num % 10;\n        /** @type {?} */\n        const output = (~~(num % 100 / 10) === 1) ? '.' :\n            (b === 1) ? '.' :\n                (b === 2) ? '.' :\n                    (b === 3) ? '.' : '.';\n        return num + output;\n    },\n    week: {\n        dow: 1,\n        // Monday is the first day of the week.\n        doy: 4 // The week that contains Jan 4th is the first week of the year.\n    }\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// tslint:disable:comment-format binary-expression-operand-order max-line-length\n// tslint:disable:no-bitwise prefer-template cyclomatic-complexity\n// tslint:disable:no-shadowed-variable switch-default prefer-const\n// tslint:disable:one-variable-per-declaration newline-before-return\n// tslint:disable:no-parameter-reassignment prefer-switch\n//! moment.js locale configuration\n//! locale : Indonesia [id]\n//! author : Romy Kusuma : https://github.com/rkusuma\n//! reference: https://github.com/moment/moment/blob/develop/locale/id.js\n/** @type {?} */\nconst idLocale = {\n    abbr: 'id',\n    months: 'Januari_Februari_Maret_April_Mei_Juni_Juli_Agustus_September_Oktober_November_Desember'.split('_'),\n    monthsShort: 'Jan_Feb_Mar_Apr_Mei_Jun_Jul_Ags_Sep_Okt_Nov_Des'.split('_'),\n    weekdays: 'Minggu_Senin_Selasa_Rabu_Kamis_Jumat_Sabtu'.split('_'),\n    weekdaysShort: 'Min_Sen_Sel_Rab_Kam_Jum_Sab'.split('_'),\n    weekdaysMin: 'Mg_Sn_Sl_Rb_Km_Jm_Sb'.split('_'),\n    longDateFormat: {\n        LT: 'HH.mm',\n        LTS: 'HH.mm.ss',\n        L: 'DD/MM/YYYY',\n        LL: 'D MMMM YYYY',\n        LLL: 'D MMMM YYYY [pukul] HH.mm',\n        LLLL: 'dddd, D MMMM YYYY [pukul] HH.mm'\n    },\n    meridiemParse: /pagi|siang|sore|malam/,\n    /**\n     * @param {?} hour\n     * @param {?} meridiem\n     * @return {?}\n     */\n    meridiemHour(hour, meridiem) {\n        if (hour === 12) {\n            hour = 0;\n        }\n        if (meridiem === 'pagi') {\n            return hour;\n        }\n        else if (meridiem === 'siang') {\n            return hour >= 11 ? hour : hour + 12;\n        }\n        else if (meridiem === 'sore' || meridiem === 'malam') {\n            return hour + 12;\n        }\n    },\n    /**\n     * @param {?} hours\n     * @param {?} minutes\n     * @param {?} isLower\n     * @return {?}\n     */\n    meridiem(hours, minutes, isLower) {\n        if (hours < 11) {\n            return 'pagi';\n        }\n        else if (hours < 15) {\n            return 'siang';\n        }\n        else if (hours < 19) {\n            return 'sore';\n        }\n        else {\n            return 'malam';\n        }\n    },\n    calendar: {\n        sameDay: '[Hari ini pukul] LT',\n        nextDay: '[Besok pukul] LT',\n        nextWeek: 'dddd [pukul] LT',\n        lastDay: '[Kemarin pukul] LT',\n        lastWeek: 'dddd [lalu pukul] LT',\n        sameElse: 'L'\n    },\n    relativeTime: {\n        future: 'dalam %s',\n        past: '%s yang lalu',\n        s: 'beberapa detik',\n        ss: '%d detik',\n        m: 'semenit',\n        mm: '%d menit',\n        h: 'sejam',\n        hh: '%d jam',\n        d: 'sehari',\n        dd: '%d hari',\n        M: 'sebulan',\n        MM: '%d bulan',\n        y: 'setahun',\n        yy: '%d tahun'\n    },\n    week: {\n        dow: 1,\n        // Monday is the first day of the week.\n        doy: 7 // The week that contains Jan 1st is the first week of the year.\n    }\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n//! moment.js locale configuration\n//! locale : Italian [it]\n//! author : Lorenzo : https://github.com/aliem\n//! author: Mattia Larentis: https://github.com/nostalgiaz\n/** @type {?} */\nconst itLocale = {\n    abbr: 'it',\n    months: 'gennaio_febbraio_marzo_aprile_maggio_giugno_luglio_agosto_settembre_ottobre_novembre_dicembre'.split('_'),\n    monthsShort: 'gen_feb_mar_apr_mag_giu_lug_ago_set_ott_nov_dic'.split('_'),\n    weekdays: 'domenica_lunedì_martedì_mercoledì_giovedì_venerdì_sabato'.split('_'),\n    weekdaysShort: 'dom_lun_mar_mer_gio_ven_sab'.split('_'),\n    weekdaysMin: 'do_lu_ma_me_gi_ve_sa'.split('_'),\n    longDateFormat: {\n        LT: 'HH:mm',\n        LTS: 'HH:mm:ss',\n        L: 'DD/MM/YYYY',\n        LL: 'D MMMM YYYY',\n        LLL: 'D MMMM YYYY HH:mm',\n        LLLL: 'dddd D MMMM YYYY HH:mm'\n    },\n    calendar: {\n        sameDay: '[Oggi alle] LT',\n        nextDay: '[Domani alle] LT',\n        nextWeek: 'dddd [alle] LT',\n        lastDay: '[Ieri alle] LT',\n        /**\n         * @param {?} date\n         * @return {?}\n         */\n        lastWeek(date) {\n            switch (getDayOfWeek(date)) {\n                case 0:\n                    return '[la scorsa] dddd [alle] LT';\n                default:\n                    return '[lo scorso] dddd [alle] LT';\n            }\n        },\n        sameElse: 'L'\n    },\n    relativeTime: {\n        /**\n         * @param {?} num\n         * @return {?}\n         */\n        future(num) {\n            return ((/^[0-9].+$/).test(num.toString(10)) ? 'tra' : 'in') + ' ' + num;\n        },\n        past: '%s fa',\n        s: 'alcuni secondi',\n        ss: '%d secondi',\n        m: 'un minuto',\n        mm: '%d minuti',\n        h: 'un\\'ora',\n        hh: '%d ore',\n        d: 'un giorno',\n        dd: '%d giorni',\n        M: 'un mese',\n        MM: '%d mesi',\n        y: 'un anno',\n        yy: '%d anni'\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}º/,\n    ordinal: '%dº',\n    week: {\n        dow: 1,\n        // Monday is the first day of the week.\n        doy: 4 // The week that contains Jan 4th is the first week of the year.\n    }\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// tslint:disable:comment-format binary-expression-operand-order max-line-length\n// tslint:disable:no-bitwise prefer-template cyclomatic-complexity\n// tslint:disable:no-shadowed-variable switch-default prefer-const\n// tslint:disable:one-variable-per-declaration newline-before-return\n//! moment.js locale configuration\n//! locale : Japanese [ja]\n//! author : LI Long : https://github.com/baryon\n/** @type {?} */\nconst jaLocale = {\n    abbr: 'ja',\n    months: '1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月'.split('_'),\n    monthsShort: '1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月'.split('_'),\n    weekdays: '日曜日_月曜日_火曜日_水曜日_木曜日_金曜日_土曜日'.split('_'),\n    weekdaysShort: '日_月_火_水_木_金_土'.split('_'),\n    weekdaysMin: '日_月_火_水_木_金_土'.split('_'),\n    longDateFormat: {\n        LT: 'HH:mm',\n        LTS: 'HH:mm:ss',\n        L: 'YYYY/MM/DD',\n        LL: 'YYYY年M月D日',\n        LLL: 'YYYY年M月D日 HH:mm',\n        LLLL: 'YYYY年M月D日 HH:mm dddd',\n        l: 'YYYY/MM/DD',\n        ll: 'YYYY年M月D日',\n        lll: 'YYYY年M月D日 HH:mm',\n        llll: 'YYYY年M月D日 HH:mm dddd'\n    },\n    meridiemParse: /午前|午後/i,\n    /**\n     * @param {?} input\n     * @return {?}\n     */\n    isPM(input) {\n        return input === '午後';\n    },\n    /**\n     * @param {?} hour\n     * @param {?} minute\n     * @param {?} isLower\n     * @return {?}\n     */\n    meridiem(hour, minute, isLower) {\n        if (hour < 12) {\n            return '午前';\n        }\n        else {\n            return '午後';\n        }\n    },\n    calendar: {\n        sameDay: '[今日] LT',\n        nextDay: '[明日] LT',\n        nextWeek: '[来週]dddd LT',\n        lastDay: '[昨日] LT',\n        lastWeek: '[前週]dddd LT',\n        sameElse: 'L'\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}日/,\n    /**\n     * @param {?} num\n     * @param {?} period\n     * @return {?}\n     */\n    ordinal(num, period) {\n        switch (period) {\n            case 'd':\n            case 'D':\n            case 'DDD':\n                return num + '日';\n            default:\n                return num.toString(10);\n        }\n    },\n    relativeTime: {\n        future: '%s後',\n        past: '%s前',\n        s: '数秒',\n        ss: '%d秒',\n        m: '1分',\n        mm: '%d分',\n        h: '1時間',\n        hh: '%d時間',\n        d: '1日',\n        dd: '%d日',\n        M: '1ヶ月',\n        MM: '%dヶ月',\n        y: '1年',\n        yy: '%d年'\n    }\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// tslint:disable:comment-format binary-expression-operand-order max-line-length\n// tslint:disable:no-bitwise prefer-template cyclomatic-complexity\n// tslint:disable:no-shadowed-variable switch-default prefer-const\n// tslint:disable:one-variable-per-declaration newline-before-return\n//! moment.js locale configuration\n//! locale : Georgian [ka]\n//! author : Irakli Janiashvili : https://github.com/irakli-janiashvili\n//! author : Levan Tskipuri : https://github.com/tskipa\n/** @type {?} */\nconst kaLocale = {\n    abbr: 'ka',\n    months: {\n        format: 'იანვარს_თებერვალს_მარტს_აპრილის_მაისს_ივნისს_ივლისს_აგვისტს_სექტემბერს_ოქტომბერს_ნოემბერს_დეკემბერს'.split('_'),\n        standalone: 'იანვარი_თებერვალი_მარტი_აპრილი_მაისი_ივნისი_ივლისი_აგვისტო_სექტემბერი_ოქტომბერი_ნოემბერი_დეკემბერი'.split('_')\n    },\n    monthsShort: 'იან_თებ_მარ_აპრ_მაი_ივნ_ივლ_აგვ_სექ_ოქტ_ნოე_დეკ'.split('_'),\n    weekdays: {\n        standalone: 'კვირა_ორშაბათი_სამშაბათი_ოთხშაბათი_ხუთშაბათი_პარასკევი_შაბათი'.split('_'),\n        format: 'კვირას_ორშაბათს_სამშაბათს_ოთხშაბათს_ხუთშაბათს_პარასკევს_შაბათს'.split('_'),\n        isFormat: /(წინა|შემდეგ)/\n    },\n    weekdaysShort: 'კვი_ორშ_სამ_ოთხ_ხუთ_პარ_შაბ'.split('_'),\n    weekdaysMin: 'კვ_ორ_სა_ოთ_ხუ_პა_შა'.split('_'),\n    longDateFormat: {\n        LT: 'h:mm A',\n        LTS: 'h:mm:ss A',\n        L: 'DD/MM/YYYY',\n        LL: 'D MMMM YYYY',\n        LLL: 'D MMMM YYYY h:mm A',\n        LLLL: 'dddd, D MMMM YYYY h:mm A'\n    },\n    calendar: {\n        sameDay: '[დღეს] LT[-ზე]',\n        nextDay: '[ხვალ] LT[-ზე]',\n        lastDay: '[გუშინ] LT[-ზე]',\n        nextWeek: '[შემდეგ] dddd LT[-ზე]',\n        lastWeek: '[წინა] dddd LT-ზე',\n        sameElse: 'L'\n    },\n    relativeTime: {\n        /**\n         * @param {?} s\n         * @return {?}\n         */\n        future(s) {\n            /** @type {?} */\n            var st = s.toString();\n            return (/(წამი|წუთი|საათი|წელი)/).test(st) ?\n                st.replace(/ი$/, 'ში') :\n                st + 'ში';\n        },\n        /**\n         * @param {?} s\n         * @return {?}\n         */\n        past(s) {\n            /** @type {?} */\n            var st = s.toString();\n            if ((/(წამი|წუთი|საათი|დღე|თვე)/).test(st)) {\n                return st.replace(/(ი|ე)$/, 'ის წინ');\n            }\n            if ((/წელი/).test(st)) {\n                return st.replace(/წელი$/, 'წლის წინ');\n            }\n        },\n        s: 'რამდენიმე წამი',\n        ss: '%d წამი',\n        m: 'წუთი',\n        mm: '%d წუთი',\n        h: 'საათი',\n        hh: '%d საათი',\n        d: 'დღე',\n        dd: '%d დღე',\n        M: 'თვე',\n        MM: '%d თვე',\n        y: 'წელი',\n        yy: '%d წელი'\n    },\n    dayOfMonthOrdinalParse: /0|1-ლი|მე-\\d{1,2}|\\d{1,2}-ე/,\n    /**\n     * @param {?} _num\n     * @param {?} _period\n     * @return {?}\n     */\n    ordinal(_num, _period) {\n        /** @type {?} */\n        const num = Number(_num);\n        if (num === 0) {\n            return num.toString();\n        }\n        if (num === 1) {\n            return num + '-ლი';\n        }\n        if ((num < 20) || (num <= 100 && (num % 20 === 0)) || (num % 100 === 0)) {\n            return 'მე-' + num;\n        }\n        return num + '-ე';\n    },\n    week: {\n        dow: 1,\n        doy: 4\n    }\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// ! moment.js locale configuration\n// ! locale : Kazakh [kk]\n// ! authors : Nurlan Rakhimzhanov : https://github.com/nurlan\n/** @type {?} */\nconst suffixes = {\n    0: '-ші',\n    1: '-ші',\n    2: '-ші',\n    3: '-ші',\n    4: '-ші',\n    5: '-ші',\n    6: '-шы',\n    7: '-ші',\n    8: '-ші',\n    9: '-шы',\n    10: '-шы',\n    20: '-шы',\n    30: '-шы',\n    40: '-шы',\n    50: '-ші',\n    60: '-шы',\n    70: '-ші',\n    80: '-ші',\n    90: '-шы',\n    100: '-ші'\n};\n/** @type {?} */\nconst kkLocale = {\n    abbr: 'kk',\n    months: 'қаңтар_ақпан_наурыз_сәуір_мамыр_маусым_шілде_тамыз_қыркүйек_қазан_қараша_желтоқсан'.split('_'),\n    monthsShort: 'қаң_ақп_нау_сәу_мам_мау_шіл_там_қыр_қаз_қар_жел'.split('_'),\n    weekdays: 'жексенбі_дүйсенбі_сейсенбі_сәрсенбі_бейсенбі_жұма_сенбі'.split('_'),\n    weekdaysShort: 'жек_дүй_сей_сәр_бей_жұм_сен'.split('_'),\n    weekdaysMin: 'жк_дй_сй_ср_бй_жм_сн'.split('_'),\n    longDateFormat: {\n        LT: 'HH:mm',\n        LTS: 'HH:mm:ss',\n        L: 'DD.MM.YYYY',\n        LL: 'D MMMM YYYY',\n        LLL: 'D MMMM YYYY HH:mm',\n        LLLL: 'dddd, D MMMM YYYY HH:mm'\n    },\n    calendar: {\n        sameDay: '[Бүгін сағат] LT',\n        nextDay: '[Ертең сағат] LT',\n        nextWeek: 'dddd [сағат] LT',\n        lastDay: '[Кеше сағат] LT',\n        lastWeek: '[Өткен аптаның] dddd [сағат] LT',\n        sameElse: 'L'\n    },\n    relativeTime: {\n        future: '%s ішінде',\n        past: '%s бұрын',\n        s: 'бірнеше секунд',\n        ss: '%d секунд',\n        m: 'бір минут',\n        mm: '%d минут',\n        h: 'бір сағат',\n        hh: '%d сағат',\n        d: 'бір күн',\n        dd: '%d күн',\n        M: 'бір ай',\n        MM: '%d ай',\n        y: 'бір жыл',\n        yy: '%d жыл'\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}-(ші|шы)/,\n    /**\n     * @param {?} _num\n     * @return {?}\n     */\n    ordinal(_num) {\n        /** @type {?} */\n        const a = _num % 10;\n        /** @type {?} */\n        const b = _num >= 100 ? 100 : null;\n        return _num + (suffixes[_num] || suffixes[a] || suffixes[b]);\n    },\n    week: {\n        dow: 1,\n        // Monday is the first day of the week.\n        doy: 7 // The week that contains Jan 7th is the first week of the year.\n    }\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// tslint:disable:comment-format binary-expression-operand-order max-line-length\n// tslint:disable:no-bitwise prefer-template cyclomatic-complexity\n// tslint:disable:no-shadowed-variable switch-default prefer-const\n// tslint:disable:one-variable-per-declaration newline-before-return\n// tslint:disable:object-literal-shorthand\n//! moment.js locale configuration\n//! locale : Korean [ko]\n//! author : Kyungwook, Park : https://github.com/kyungw00k\n//! author : Jeeeyul Lee <jeeeyul@gmail.com>\n/** @type {?} */\nconst koLocale = {\n    abbr: 'ko',\n    months: '1월_2월_3월_4월_5월_6월_7월_8월_9월_10월_11월_12월'.split('_'),\n    monthsShort: '1월_2월_3월_4월_5월_6월_7월_8월_9월_10월_11월_12월'.split('_'),\n    weekdays: '일요일_월요일_화요일_수요일_목요일_금요일_토요일'.split('_'),\n    weekdaysShort: '일_월_화_수_목_금_토'.split('_'),\n    weekdaysMin: '일_월_화_수_목_금_토'.split('_'),\n    longDateFormat: {\n        LT: 'A h:mm',\n        LTS: 'A h:mm:ss',\n        L: 'YYYY.MM.DD',\n        LL: 'YYYY년 MMMM D일',\n        LLL: 'YYYY년 MMMM D일 A h:mm',\n        LLLL: 'YYYY년 MMMM D일 dddd A h:mm',\n        l: 'YYYY.MM.DD',\n        ll: 'YYYY년 MMMM D일',\n        lll: 'YYYY년 MMMM D일 A h:mm',\n        llll: 'YYYY년 MMMM D일 dddd A h:mm'\n    },\n    calendar: {\n        sameDay: '오늘 LT',\n        nextDay: '내일 LT',\n        nextWeek: 'dddd LT',\n        lastDay: '어제 LT',\n        lastWeek: '지난주 dddd LT',\n        sameElse: 'L'\n    },\n    relativeTime: {\n        future: '%s 후',\n        past: '%s 전',\n        s: '몇 초',\n        ss: '%d초',\n        m: '1분',\n        mm: '%d분',\n        h: '한 시간',\n        hh: '%d시간',\n        d: '하루',\n        dd: '%d일',\n        M: '한 달',\n        MM: '%d달',\n        y: '일 년',\n        yy: '%d년'\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}(일|월|주)/,\n    ordinal: (/**\n     * @param {?} num\n     * @param {?} period\n     * @return {?}\n     */\n    function (num, period) {\n        switch (period) {\n            case 'd':\n            case 'D':\n            case 'DDD':\n                return num + '일';\n            case 'M':\n                return num + '월';\n            case 'w':\n            case 'W':\n                return num + '주';\n            default:\n                return num.toString(10);\n        }\n    }),\n    meridiemParse: /오전|오후/,\n    isPM: (/**\n     * @param {?} token\n     * @return {?}\n     */\n    function (token) {\n        return token === '오후';\n    }),\n    meridiem: (/**\n     * @param {?} hour\n     * @param {?} minute\n     * @param {?} isUpper\n     * @return {?}\n     */\n    function (hour, minute, isUpper) {\n        return hour < 12 ? '오전' : '오후';\n    })\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// tslint:disable:comment-format binary-expression-operand-order max-line-length\n// tslint:disable:no-bitwise prefer-template cyclomatic-complexity\n// tslint:disable:no-shadowed-variable switch-default prefer-const\n// tslint:disable:one-variable-per-declaration newline-before-return\n//! moment.js locale configuration\n//! locale : Lithuanian [lt]\n//! author : Stanislavas Guk : https://github.com/ixoster\n/** @type {?} */\nconst units = {\n    ss: 'sekundė_sekundžių_sekundes',\n    m: 'minutė_minutės_minutę',\n    mm: 'minutės_minučių_minutes',\n    h: 'valanda_valandos_valandą',\n    hh: 'valandos_valandų_valandas',\n    d: 'diena_dienos_dieną',\n    dd: 'dienos_dienų_dienas',\n    M: 'mėnuo_mėnesio_mėnesį',\n    MM: 'mėnesiai_mėnesių_mėnesius',\n    y: 'metai_metų_metus',\n    yy: 'metai_metų_metus'\n};\n/**\n * @param {?} num\n * @param {?} withoutSuffix\n * @param {?} key\n * @param {?} isFuture\n * @return {?}\n */\nfunction translateSeconds(num, withoutSuffix, key, isFuture) {\n    if (withoutSuffix) {\n        return 'kelios sekundės';\n    }\n    else {\n        return isFuture ? 'kelių sekundžių' : 'kelias sekundes';\n    }\n}\n/**\n * @param {?} num\n * @param {?} withoutSuffix\n * @param {?} key\n * @param {?} isFuture\n * @return {?}\n */\nfunction translateSingular(num, withoutSuffix, key, isFuture) {\n    return withoutSuffix ? forms(key)[0] : (isFuture ? forms(key)[1] : forms(key)[2]);\n}\n/**\n * @param {?} num\n * @return {?}\n */\nfunction special(num) {\n    return num % 10 === 0 || (num > 10 && num < 20);\n}\n/**\n * @param {?} key\n * @return {?}\n */\nfunction forms(key) {\n    return ((/** @type {?} */ (units)))[key].split('_');\n}\n/**\n * @param {?} num\n * @param {?} withoutSuffix\n * @param {?} key\n * @param {?} isFuture\n * @return {?}\n */\nfunction translate$3(num, withoutSuffix, key, isFuture) {\n    /** @type {?} */\n    let result = num + ' ';\n    if (num === 1) {\n        return result + translateSingular(num, withoutSuffix, key[0], isFuture);\n    }\n    else if (withoutSuffix) {\n        return result + (special(num) ? forms(key)[1] : forms(key)[0]);\n    }\n    else {\n        if (isFuture) {\n            return result + forms(key)[1];\n        }\n        else {\n            return result + (special(num) ? forms(key)[1] : forms(key)[2]);\n        }\n    }\n}\n/** @type {?} */\nconst ltLocale = {\n    abbr: 'lt',\n    months: {\n        format: 'sausio_vasario_kovo_balandžio_gegužės_birželio_liepos_rugpjūčio_rugsėjo_spalio_lapkričio_gruodžio'.split('_'),\n        standalone: 'sausis_vasaris_kovas_balandis_gegužė_birželis_liepa_rugpjūtis_rugsėjis_spalis_lapkritis_gruodis'.split('_'),\n        isFormat: /D[oD]?(\\[[^\\[\\]]*\\]|\\s)+MMMM?|MMMM?(\\[[^\\[\\]]*\\]|\\s)+D[oD]?/\n    },\n    monthsShort: 'sau_vas_kov_bal_geg_bir_lie_rgp_rgs_spa_lap_grd'.split('_'),\n    weekdays: {\n        format: 'sekmadienį_pirmadienį_antradienį_trečiadienį_ketvirtadienį_penktadienį_šeštadienį'.split('_'),\n        standalone: 'sekmadienis_pirmadienis_antradienis_trečiadienis_ketvirtadienis_penktadienis_šeštadienis'.split('_'),\n        isFormat: /dddd HH:mm/\n    },\n    weekdaysShort: 'Sek_Pir_Ant_Tre_Ket_Pen_Šeš'.split('_'),\n    weekdaysMin: 'S_P_A_T_K_Pn_Š'.split('_'),\n    weekdaysParseExact: true,\n    longDateFormat: {\n        LT: 'HH:mm',\n        LTS: 'HH:mm:ss',\n        L: 'YYYY-MM-DD',\n        LL: 'YYYY [m.] MMMM D [d.]',\n        LLL: 'YYYY [m.] MMMM D [d.], HH:mm [val.]',\n        LLLL: 'YYYY [m.] MMMM D [d.], dddd, HH:mm [val.]',\n        l: 'YYYY-MM-DD',\n        ll: 'YYYY [m.] MMMM D [d.]',\n        lll: 'YYYY [m.] MMMM D [d.], HH:mm [val.]',\n        llll: 'YYYY [m.] MMMM D [d.], ddd, HH:mm [val.]'\n    },\n    calendar: {\n        sameDay: '[Šiandien] LT',\n        nextDay: '[Rytoj] LT',\n        nextWeek: 'dddd LT',\n        lastDay: '[Vakar] LT',\n        lastWeek: '[Praėjusį] dddd LT',\n        sameElse: 'L'\n    },\n    relativeTime: {\n        future: 'po %s',\n        past: 'prieš %s',\n        s: translateSeconds,\n        ss: translate$3,\n        m: translateSingular,\n        mm: translate$3,\n        h: translateSingular,\n        hh: translate$3,\n        d: translateSingular,\n        dd: translate$3,\n        M: translateSingular,\n        MM: translate$3,\n        y: translateSingular,\n        yy: translate$3\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}-oji/,\n    /**\n     * @param {?} num\n     * @return {?}\n     */\n    ordinal(num) {\n        return num + '-oji';\n    },\n    week: {\n        dow: 1,\n        // Monday is the first day of the week.\n        doy: 4 // The week that contains Jan 4th is the first week of the year.\n    }\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// tslint:disable:comment-format binary-expression-operand-order max-line-length\n// tslint:disable:no-bitwise prefer-template cyclomatic-complexity\n// tslint:disable:no-shadowed-variable switch-default prefer-const\n// tslint:disable:one-variable-per-declaration newline-before-return\n//! moment.js locale configuration\n//! locale : Latvian [lv]\n//! author : Matiss Janis Aboltins : https://github.com/matissjanis\n/** @type {?} */\nconst lvLocale = {\n    abbr: 'lv',\n    months: 'Janvāris_Februāris_Marts_Aprīlis_Maijs_Jūnijs_Jūlijs_Augusts_Septembris_Oktobris_Novembris_Decembris'.split('_'),\n    monthsShort: 'Jan_Feb_Mar_Apr_Mai_Jūn_Jūl_Aug_Sep_Okt_Nov_Dec'.split('_'),\n    weekdays: 'Svētdiena_Pirmdiena_Otrdiena_Trešdiena_Ceturtdiena_Piektdiena_Sestdiena'.split('_'),\n    weekdaysShort: 'Svētd_Pirmd_Otrd_Trešd_Ceturtd_Piektd_Sestd'.split('_'),\n    weekdaysMin: 'Sv_Pi_Ot_Tr_Ce_Pk_Se'.split('_'),\n    longDateFormat: {\n        LT: 'HH:mm',\n        LTS: 'HH:mm:ss',\n        L: 'DD/MM/YYYY',\n        LL: 'D MMMM YYYY',\n        LLL: 'D MMMM YYYY HH:mm',\n        LLLL: 'dddd, D MMMM YYYY HH:mm'\n    },\n    calendar: {\n        sameDay: '[Today at] LT',\n        nextDay: '[Tomorrow at] LT',\n        nextWeek: 'dddd [at] LT',\n        lastDay: '[Yesterday at] LT',\n        lastWeek: '[Last] dddd [at] LT',\n        sameElse: 'L'\n    },\n    relativeTime: {\n        future: 'pēc %s',\n        past: 'pirms %s',\n        s: 'dažām sekundēm',\n        ss: '%d sekundēm',\n        m: 'minūtes',\n        mm: '%d minūtēm',\n        h: 'stundas',\n        hh: '%d stundām',\n        d: 'dienas',\n        dd: '%d dienām',\n        M: 'mēneša',\n        MM: '%d mēnešiem',\n        y: 'gada',\n        yy: '%d gadiem'\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n    /**\n     * @param {?} num\n     * @return {?}\n     */\n    ordinal(num) {\n        return num + '.';\n    },\n    week: {\n        dow: 1,\n        // Monday is the first day of the week.\n        doy: 4 // The week that contains Jan 4th is the first week of the year.\n    }\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// tslint:disable:comment-format binary-expression-operand-order max-line-length\n// tslint:disable:no-bitwise prefer-template cyclomatic-complexity\n// tslint:disable:no-shadowed-variable switch-default prefer-const\n// tslint:disable:one-variable-per-declaration newline-before-return\n// tslint:disable:object-literal-shorthand\n//! moment.js locale configuration\n//! locale : Mongolian [mn]\n//! author : Javkhlantugs Nyamdorj : https://github.com/javkhaanj7\n/**\n * @param {?} num\n * @param {?} withoutSuffix\n * @param {?} key\n * @param {?} isFuture\n * @return {?}\n */\nfunction translate$4(num, withoutSuffix, key, isFuture) {\n    switch (key) {\n        case 's':\n            return withoutSuffix ? 'хэдхэн секунд' : 'хэдхэн секундын';\n        case 'ss':\n            return num + (withoutSuffix ? ' секунд' : ' секундын');\n        case 'm':\n        case 'mm':\n            return num + (withoutSuffix ? ' минут' : ' минутын');\n        case 'h':\n        case 'hh':\n            return num + (withoutSuffix ? ' цаг' : ' цагийн');\n        case 'd':\n        case 'dd':\n            return num + (withoutSuffix ? ' өдөр' : ' өдрийн');\n        case 'M':\n        case 'MM':\n            return num + (withoutSuffix ? ' сар' : ' сарын');\n        case 'y':\n        case 'yy':\n            return num + (withoutSuffix ? ' жил' : ' жилийн');\n        default:\n            return num.toString(10);\n    }\n}\n/** @type {?} */\nconst mnLocale = {\n    abbr: 'mn',\n    months: 'Нэгдүгээр сар_Хоёрдугаар сар_Гуравдугаар сар_Дөрөвдүгээр сар_Тавдугаар сар_Зургадугаар сар_Долдугаар сар_Наймдугаар сар_Есдүгээр сар_Аравдугаар сар_Арван нэгдүгээр сар_Арван хоёрдугаар сар'.split('_'),\n    monthsShort: '1 сар_2 сар_3 сар_4 сар_5 сар_6 сар_7 сар_8 сар_9 сар_10 сар_11 сар_12 сар'.split('_'),\n    monthsParseExact: true,\n    weekdays: 'Ням_Даваа_Мягмар_Лхагва_Пүрэв_Баасан_Бямба'.split('_'),\n    weekdaysShort: 'Ням_Дав_Мяг_Лха_Пүр_Баа_Бям'.split('_'),\n    weekdaysMin: 'Ня_Да_Мя_Лх_Пү_Ба_Бя'.split('_'),\n    weekdaysParseExact: true,\n    longDateFormat: {\n        LT: 'HH:mm',\n        LTS: 'HH:mm:ss',\n        L: 'YYYY-MM-DD',\n        LL: 'YYYY оны MMMMын D',\n        LLL: 'YYYY оны MMMMын D HH:mm',\n        LLLL: 'dddd, YYYY оны MMMMын D HH:mm'\n    },\n    meridiemParse: /ҮӨ|ҮХ/i,\n    isPM: (/**\n     * @param {?} input\n     * @return {?}\n     */\n    function (input) {\n        return input === 'ҮХ';\n    }),\n    meridiem: (/**\n     * @param {?} hour\n     * @param {?} minute\n     * @param {?} isLower\n     * @return {?}\n     */\n    function (hour, minute, isLower) {\n        if (hour < 12) {\n            return 'ҮӨ';\n        }\n        else {\n            return 'ҮХ';\n        }\n    }),\n    calendar: {\n        sameDay: '[Өнөөдөр] LT',\n        nextDay: '[Маргааш] LT',\n        nextWeek: '[Ирэх] dddd LT',\n        lastDay: '[Өчигдөр] LT',\n        lastWeek: '[Өнгөрсөн] dddd LT',\n        sameElse: 'L'\n    },\n    relativeTime: {\n        future: '%s дараа',\n        past: '%s өмнө',\n        s: translate$4,\n        ss: translate$4,\n        m: translate$4,\n        mm: translate$4,\n        h: translate$4,\n        hh: translate$4,\n        d: translate$4,\n        dd: translate$4,\n        M: translate$4,\n        MM: translate$4,\n        y: translate$4,\n        yy: translate$4\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2} өдөр/,\n    ordinal: (/**\n     * @param {?} num\n     * @param {?} period\n     * @return {?}\n     */\n    function (num, period) {\n        switch (period) {\n            case 'd':\n            case 'D':\n            case 'DDD':\n                return num + ' өдөр';\n            default:\n                return num.toString(10);\n        }\n    })\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n//! moment.js locale configuration\n//! locale : Norwegian Bokmål [nb]\n//! authors : Espen Hovlandsdal : https://github.com/rexxars\n//!           Sigurd Gartmann : https://github.com/sigurdga\n/** @type {?} */\nconst nbLocale = {\n    abbr: 'nb',\n    months: 'januar_februar_mars_april_mai_juni_juli_august_september_oktober_november_desember'.split('_'),\n    monthsShort: 'jan._feb._mars_april_mai_juni_juli_aug._sep._okt._nov._des.'.split('_'),\n    monthsParseExact: true,\n    weekdays: 'søndag_mandag_tirsdag_onsdag_torsdag_fredag_lørdag'.split('_'),\n    weekdaysShort: 'sø._ma._ti._on._to._fr._lø.'.split('_'),\n    weekdaysMin: 'sø_ma_ti_on_to_fr_lø'.split('_'),\n    weekdaysParseExact: true,\n    longDateFormat: {\n        LT: 'HH:mm',\n        LTS: 'HH:mm:ss',\n        L: 'DD.MM.YYYY',\n        LL: 'D. MMMM YYYY',\n        LLL: 'D. MMMM YYYY [kl.] HH:mm',\n        LLLL: 'dddd D. MMMM YYYY [kl.] HH:mm'\n    },\n    calendar: {\n        sameDay: '[i dag kl.] LT',\n        nextDay: '[i morgen kl.] LT',\n        nextWeek: 'dddd [kl.] LT',\n        lastDay: '[i går kl.] LT',\n        lastWeek: '[forrige] dddd [kl.] LT',\n        sameElse: 'L'\n    },\n    relativeTime: {\n        future: 'om %s',\n        past: '%s siden',\n        s: 'noen sekunder',\n        ss: '%d sekunder',\n        m: 'ett minutt',\n        mm: '%d minutter',\n        h: 'en time',\n        hh: '%d timer',\n        d: 'en dag',\n        dd: '%d dager',\n        M: 'en måned',\n        MM: '%d måneder',\n        y: 'ett år',\n        yy: '%d år'\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n    ordinal: '%d.',\n    week: {\n        dow: 1,\n        // Monday is the first day of the week.\n        doy: 4 // The week that contains Jan 4th is the first week of the year.\n    }\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n//! moment.js locale configuration\n//! locale : Dutch (Belgium) [nl-be]\n//! author : Joris Röling : https://github.com/jorisroling\n//! author : Jacob Middag : https://github.com/middagj\n/** @type {?} */\nlet monthsShortWithDots = 'jan._feb._mrt._apr._mei_jun._jul._aug._sep._okt._nov._dec.'.split('_');\n/** @type {?} */\nlet monthsShortWithoutDots = 'jan_feb_mrt_apr_mei_jun_jul_aug_sep_okt_nov_dec'.split('_');\n/** @type {?} */\nlet monthsParse$4 = [/^jan/i, /^feb/i, /^maart|mrt.?$/i, /^apr/i, /^mei$/i, /^jun[i.]?$/i, /^jul[i.]?$/i, /^aug/i, /^sep/i, /^okt/i, /^nov/i, /^dec/i];\n/** @type {?} */\nlet monthsRegex$4 = /^(januari|februari|maart|april|mei|april|ju[nl]i|augustus|september|oktober|november|december|jan\\.?|feb\\.?|mrt\\.?|apr\\.?|ju[nl]\\.?|aug\\.?|sep\\.?|okt\\.?|nov\\.?|dec\\.?)/i;\n/** @type {?} */\nconst nlBeLocale = {\n    abbr: 'nl-be',\n    months: 'januari_februari_maart_april_mei_juni_juli_augustus_september_oktober_november_december'.split('_'),\n    /**\n     * @param {?} date\n     * @param {?} format\n     * @param {?=} isUTC\n     * @return {?}\n     */\n    monthsShort(date, format, isUTC) {\n        if (!date) {\n            return monthsShortWithDots;\n        }\n        else if (/-MMM-/.test(format)) {\n            return monthsShortWithoutDots[getMonth(date, isUTC)];\n        }\n        else {\n            return monthsShortWithDots[getMonth(date, isUTC)];\n        }\n    },\n    monthsRegex: monthsRegex$4,\n    monthsShortRegex: monthsRegex$4,\n    monthsStrictRegex: /^(januari|februari|maart|mei|ju[nl]i|april|augustus|september|oktober|november|december)/i,\n    monthsShortStrictRegex: /^(jan\\.?|feb\\.?|mrt\\.?|apr\\.?|mei|ju[nl]\\.?|aug\\.?|sep\\.?|okt\\.?|nov\\.?|dec\\.?)/i,\n    monthsParse: monthsParse$4,\n    longMonthsParse: monthsParse$4,\n    shortMonthsParse: monthsParse$4,\n    weekdays: 'zondag_maandag_dinsdag_woensdag_donderdag_vrijdag_zaterdag'.split('_'),\n    weekdaysShort: 'zo._ma._di._wo._do._vr._za.'.split('_'),\n    weekdaysMin: 'zo_ma_di_wo_do_vr_za'.split('_'),\n    weekdaysParseExact: true,\n    longDateFormat: {\n        LT: 'HH:mm',\n        LTS: 'HH:mm:ss',\n        L: 'DD/MM/YYYY',\n        LL: 'D MMMM YYYY',\n        LLL: 'D MMMM YYYY HH:mm',\n        LLLL: 'dddd D MMMM YYYY HH:mm'\n    },\n    calendar: {\n        sameDay: '[vandaag om] LT',\n        nextDay: '[morgen om] LT',\n        nextWeek: 'dddd [om] LT',\n        lastDay: '[gisteren om] LT',\n        lastWeek: '[afgelopen] dddd [om] LT',\n        sameElse: 'L'\n    },\n    relativeTime: {\n        future: 'over %s',\n        past: '%s geleden',\n        s: 'een paar seconden',\n        ss: '%d seconden',\n        m: 'één minuut',\n        mm: '%d minuten',\n        h: 'één uur',\n        hh: '%d uur',\n        d: 'één dag',\n        dd: '%d dagen',\n        M: 'één maand',\n        MM: '%d maanden',\n        y: 'één jaar',\n        yy: '%d jaar'\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}(ste|de)/,\n    /**\n     * @param {?} _num\n     * @return {?}\n     */\n    ordinal(_num) {\n        /** @type {?} */\n        const num = Number(_num);\n        return num + ((num === 1 || num === 8 || num >= 20) ? 'ste' : 'de');\n    },\n    week: {\n        dow: 1,\n        // Monday is the first day of the week.\n        doy: 4 // The week that contains Jan 4th is the first week of the year.\n    }\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n//! moment.js locale configuration\n//! locale : Dutch [nl]\n//! author : Joris Röling : https://github.com/jorisroling\n//! author : Jacob Middag : https://github.com/middagj\n/** @type {?} */\nlet monthsShortWithDots$1 = 'jan._feb._mrt._apr._mei_jun._jul._aug._sep._okt._nov._dec.'.split('_');\n/** @type {?} */\nlet monthsShortWithoutDots$1 = 'jan_feb_mrt_apr_mei_jun_jul_aug_sep_okt_nov_dec'.split('_');\n/** @type {?} */\nlet monthsParse$5 = [/^jan/i, /^feb/i, /^maart|mrt.?$/i, /^apr/i, /^mei$/i, /^jun[i.]?$/i, /^jul[i.]?$/i, /^aug/i, /^sep/i, /^okt/i, /^nov/i, /^dec/i];\n/** @type {?} */\nlet monthsRegex$5 = /^(januari|februari|maart|april|mei|april|ju[nl]i|augustus|september|oktober|november|december|jan\\.?|feb\\.?|mrt\\.?|apr\\.?|ju[nl]\\.?|aug\\.?|sep\\.?|okt\\.?|nov\\.?|dec\\.?)/i;\n/** @type {?} */\nconst nlLocale = {\n    abbr: 'nl',\n    months: 'januari_februari_maart_april_mei_juni_juli_augustus_september_oktober_november_december'.split('_'),\n    /**\n     * @param {?} date\n     * @param {?} format\n     * @param {?=} isUTC\n     * @return {?}\n     */\n    monthsShort(date, format, isUTC) {\n        if (!date) {\n            return monthsShortWithDots$1;\n        }\n        else if (/-MMM-/.test(format)) {\n            return monthsShortWithoutDots$1[getMonth(date, isUTC)];\n        }\n        else {\n            return monthsShortWithDots$1[getMonth(date, isUTC)];\n        }\n    },\n    monthsRegex: monthsRegex$5,\n    monthsShortRegex: monthsRegex$5,\n    monthsStrictRegex: /^(januari|februari|maart|mei|ju[nl]i|april|augustus|september|oktober|november|december)/i,\n    monthsShortStrictRegex: /^(jan\\.?|feb\\.?|mrt\\.?|apr\\.?|mei|ju[nl]\\.?|aug\\.?|sep\\.?|okt\\.?|nov\\.?|dec\\.?)/i,\n    monthsParse: monthsParse$5,\n    longMonthsParse: monthsParse$5,\n    shortMonthsParse: monthsParse$5,\n    weekdays: 'zondag_maandag_dinsdag_woensdag_donderdag_vrijdag_zaterdag'.split('_'),\n    weekdaysShort: 'zo._ma._di._wo._do._vr._za.'.split('_'),\n    weekdaysMin: 'zo_ma_di_wo_do_vr_za'.split('_'),\n    weekdaysParseExact: true,\n    longDateFormat: {\n        LT: 'HH:mm',\n        LTS: 'HH:mm:ss',\n        L: 'DD-MM-YYYY',\n        LL: 'D MMMM YYYY',\n        LLL: 'D MMMM YYYY HH:mm',\n        LLLL: 'dddd D MMMM YYYY HH:mm'\n    },\n    calendar: {\n        sameDay: '[vandaag om] LT',\n        nextDay: '[morgen om] LT',\n        nextWeek: 'dddd [om] LT',\n        lastDay: '[gisteren om] LT',\n        lastWeek: '[afgelopen] dddd [om] LT',\n        sameElse: 'L'\n    },\n    relativeTime: {\n        future: 'over %s',\n        past: '%s geleden',\n        s: 'een paar seconden',\n        ss: '%d seconden',\n        m: 'één minuut',\n        mm: '%d minuten',\n        h: 'één uur',\n        hh: '%d uur',\n        d: 'één dag',\n        dd: '%d dagen',\n        M: 'één maand',\n        MM: '%d maanden',\n        y: 'één jaar',\n        yy: '%d jaar'\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}(ste|de)/,\n    /**\n     * @param {?} _num\n     * @return {?}\n     */\n    ordinal(_num) {\n        /** @type {?} */\n        const num = Number(_num);\n        return num + ((num === 1 || num === 8 || num >= 20) ? 'ste' : 'de');\n    },\n    week: {\n        dow: 1,\n        // Monday is the first day of the week.\n        doy: 4 // The week that contains Jan 4th is the first week of the year.\n    }\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n//! moment.js locale configuration\n//! locale : Polish [pl]\n//! author : Rafal Hirsz : https://github.com/evoL\n/** @type {?} */\nlet monthsNominative = 'styczeń_luty_marzec_kwiecień_maj_czerwiec_lipiec_sierpień_wrzesień_październik_listopad_grudzień'.split('_');\n/** @type {?} */\nlet monthsSubjective = 'stycznia_lutego_marca_kwietnia_maja_czerwca_lipca_sierpnia_września_października_listopada_grudnia'.split('_');\n/**\n * @param {?} num\n * @return {?}\n */\nfunction plural$1(num) {\n    return (num % 10 < 5) && (num % 10 > 1) && ((~~(num / 10) % 10) !== 1);\n}\n/**\n * @param {?} num\n * @param {?} withoutSuffix\n * @param {?} key\n * @return {?}\n */\nfunction translate$5(num, withoutSuffix, key) {\n    /** @type {?} */\n    let result = num + ' ';\n    switch (key) {\n        case 'ss':\n            return result + (plural$1(num) ? 'sekundy' : 'sekund');\n        case 'm':\n            return withoutSuffix ? 'minuta' : 'minutę';\n        case 'mm':\n            return result + (plural$1(num) ? 'minuty' : 'minut');\n        case 'h':\n            return withoutSuffix ? 'godzina' : 'godzinę';\n        case 'hh':\n            return result + (plural$1(num) ? 'godziny' : 'godzin');\n        case 'MM':\n            return result + (plural$1(num) ? 'miesiące' : 'miesięcy');\n        case 'yy':\n            return result + (plural$1(num) ? 'lata' : 'lat');\n    }\n}\n/** @type {?} */\nconst plLocale = {\n    abbr: 'pl',\n    /**\n     * @param {?} date\n     * @param {?} format\n     * @param {?=} isUTC\n     * @return {?}\n     */\n    months(date, format, isUTC) {\n        if (!date) {\n            return monthsNominative;\n        }\n        else if (format === '') {\n            // Hack: if format empty we know this is used to generate\n            // RegExp by moment. Give then back both valid forms of months\n            // in RegExp ready format.\n            return '(' + monthsSubjective[getMonth(date, isUTC)] + '|' + monthsNominative[getMonth(date, isUTC)] + ')';\n        }\n        else if (/D MMMM/.test(format)) {\n            return monthsSubjective[getMonth(date, isUTC)];\n        }\n        else {\n            return monthsNominative[getMonth(date, isUTC)];\n        }\n    },\n    monthsShort: 'sty_lut_mar_kwi_maj_cze_lip_sie_wrz_paź_lis_gru'.split('_'),\n    weekdays: 'niedziela_poniedziałek_wtorek_środa_czwartek_piątek_sobota'.split('_'),\n    weekdaysShort: 'ndz_pon_wt_śr_czw_pt_sob'.split('_'),\n    weekdaysMin: 'Nd_Pn_Wt_Śr_Cz_Pt_So'.split('_'),\n    longDateFormat: {\n        LT: 'HH:mm',\n        LTS: 'HH:mm:ss',\n        L: 'DD.MM.YYYY',\n        LL: 'D MMMM YYYY',\n        LLL: 'D MMMM YYYY HH:mm',\n        LLLL: 'dddd, D MMMM YYYY HH:mm'\n    },\n    calendar: {\n        sameDay: '[Dziś o] LT',\n        nextDay: '[Jutro o] LT',\n        /**\n         * @param {?} date\n         * @return {?}\n         */\n        nextWeek(date) {\n            switch (getDayOfWeek(date)) {\n                case 0:\n                    return '[W niedzielę o] LT';\n                case 2:\n                    return '[We wtorek o] LT';\n                case 3:\n                    return '[W środę o] LT';\n                case 5:\n                    return '[W piątek o] LT';\n                case 6:\n                    return '[W sobotę o] LT';\n                default:\n                    return '[W] dddd [o] LT';\n            }\n        },\n        lastDay: '[Wczoraj o] LT',\n        /**\n         * @param {?} date\n         * @return {?}\n         */\n        lastWeek(date) {\n            switch (getDayOfWeek(date)) {\n                case 0:\n                    return '[W zeszłą niedzielę o] LT';\n                case 3:\n                    return '[W zeszłą środę o] LT';\n                case 4:\n                    return '[W zeszłą czwartek o] LT';\n                case 5:\n                    return '[W zeszłą piątek o] LT';\n                case 6:\n                    return '[W zeszłą sobotę o] LT';\n                default:\n                    return '[W zeszły] dddd [o] LT';\n            }\n        },\n        sameElse: 'L'\n    },\n    relativeTime: {\n        future: 'za %s',\n        past: '%s temu',\n        s: 'kilka sekund',\n        ss: translate$5,\n        m: translate$5,\n        mm: translate$5,\n        h: translate$5,\n        hh: translate$5,\n        d: '1 dzień',\n        dd: '%d dni',\n        M: 'miesiąc',\n        MM: translate$5,\n        y: 'rok',\n        yy: translate$5\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n    ordinal: '%d.',\n    week: {\n        dow: 1,\n        // Monday is the first day of the week.\n        doy: 4 // The week that contains Jan 4th is the first week of the year.\n    }\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n//! moment.js locale configuration\n//! locale : Portuguese (Brazil) [pt-br]\n//! author : Caio Ribeiro Pereira : https://github.com/caio-ribeiro-pereira\n/** @type {?} */\nconst ptBrLocale = {\n    abbr: 'pt-br',\n    months: 'Janeiro_Fevereiro_Março_Abril_Maio_Junho_Julho_Agosto_Setembro_Outubro_Novembro_Dezembro'.split('_'),\n    monthsShort: 'Jan_Fev_Mar_Abr_Mai_Jun_Jul_Ago_Set_Out_Nov_Dez'.split('_'),\n    weekdays: 'Domingo_Segunda-feira_Terça-feira_Quarta-feira_Quinta-feira_Sexta-feira_Sábado'.split('_'),\n    weekdaysShort: 'Dom_Seg_Ter_Qua_Qui_Sex_Sáb'.split('_'),\n    weekdaysMin: 'Do_2ª_3ª_4ª_5ª_6ª_Sá'.split('_'),\n    weekdaysParseExact: true,\n    longDateFormat: {\n        LT: 'HH:mm',\n        LTS: 'HH:mm:ss',\n        L: 'DD/MM/YYYY',\n        LL: 'D [de] MMMM [de] YYYY',\n        LLL: 'D [de] MMMM [de] YYYY [às] HH:mm',\n        LLLL: 'dddd, D [de] MMMM [de] YYYY [às] HH:mm'\n    },\n    calendar: {\n        sameDay: '[Hoje às] LT',\n        nextDay: '[Amanhã às] LT',\n        nextWeek: 'dddd [às] LT',\n        lastDay: '[Ontem às] LT',\n        /**\n         * @param {?} date\n         * @return {?}\n         */\n        lastWeek(date) {\n            return (getDayOfWeek(date) === 0 || getDayOfWeek(date) === 6) ?\n                '[Último] dddd [às] LT' : // Saturday + Sunday\n                '[Última] dddd [às] LT'; // Monday - Friday\n        },\n        sameElse: 'L'\n    },\n    relativeTime: {\n        future: 'em %s',\n        past: '%s atrás',\n        s: 'poucos segundos',\n        ss: '%d segundos',\n        m: 'um minuto',\n        mm: '%d minutos',\n        h: 'uma hora',\n        hh: '%d horas',\n        d: 'um dia',\n        dd: '%d dias',\n        M: 'um mês',\n        MM: '%d meses',\n        y: 'um ano',\n        yy: '%d anos'\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}º/,\n    ordinal: '%dº'\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// ! moment.js locale configuration\n// ! locale : Romanian [ro]\n//! author : Vlad Gurdiga : https://github.com/gurdiga\n//! author : Valentin Agachi : https://github.com/avaly\n// ! author : Earle white: https://github.com/5earle\n/**\n * @param {?} num\n * @param {?} withoutSuffix\n * @param {?} key\n * @return {?}\n */\nfunction relativeTimeWithPlural(num, withoutSuffix, key) {\n    /** @type {?} */\n    let format = {\n        ss: 'secunde',\n        mm: 'minute',\n        hh: 'ore',\n        dd: 'zile',\n        MM: 'luni',\n        yy: 'ani'\n    };\n    /** @type {?} */\n    let separator = ' ';\n    if (num % 100 >= 20 || (num >= 100 && num % 100 === 0)) {\n        separator = ' de ';\n    }\n    return num + separator + format[key];\n}\n/** @type {?} */\nconst roLocale = {\n    abbr: 'ro',\n    months: 'ianuarie_februarie_martie_aprilie_mai_iunie_iulie_august_septembrie_octombrie_noiembrie_decembrie'.split('_'),\n    monthsShort: 'ian._febr._mart._apr._mai_iun._iul._aug._sept._oct._nov._dec.'.split('_'),\n    monthsParseExact: true,\n    weekdays: 'duminică_luni_marți_miercuri_joi_vineri_sâmbătă'.split('_'),\n    weekdaysShort: 'Dum_Lun_Mar_Mie_Joi_Vin_Sâm'.split('_'),\n    weekdaysMin: 'Du_Lu_Ma_Mi_Jo_Vi_Sâ'.split('_'),\n    longDateFormat: {\n        LT: 'H:mm',\n        LTS: 'H:mm:ss',\n        L: 'DD.MM.YYYY',\n        LL: 'D MMMM YYYY',\n        LLL: 'D MMMM YYYY H:mm',\n        LLLL: 'dddd, D MMMM YYYY H:mm'\n    },\n    calendar: {\n        sameDay: '[azi la] LT',\n        nextDay: '[mâine la] LT',\n        nextWeek: 'dddd [la] LT',\n        lastDay: '[ieri la] LT',\n        lastWeek: '[fosta] dddd [la] LT',\n        sameElse: 'L'\n    },\n    relativeTime: {\n        future: 'peste %s',\n        past: '%s în urmă',\n        s: 'câteva secunde',\n        ss: relativeTimeWithPlural,\n        m: 'un minut',\n        mm: relativeTimeWithPlural,\n        h: 'o oră',\n        hh: relativeTimeWithPlural,\n        d: 'o zi',\n        dd: relativeTimeWithPlural,\n        M: 'o lună',\n        MM: relativeTimeWithPlural,\n        y: 'un an',\n        yy: relativeTimeWithPlural\n    },\n    week: {\n        dow: 1,\n        // Monday is the first day of the week.\n        doy: 7 // The week that contains Jan 1st is the first week of the year.\n    }\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n//! moment.js locale configuration\n//! locale : Russian [ru]\n//! author : Viktorminator : https://github.com/Viktorminator\n//! Author : Menelion Elensúle : https://github.com/Oire\n//! author : Коренберг Марк : https://github.com/socketpair\n/**\n * @param {?} word\n * @param {?} num\n * @return {?}\n */\nfunction plural$2(word, num) {\n    /** @type {?} */\n    let forms = word.split('_');\n    return num % 10 === 1 && num % 100 !== 11 ? forms[0] : (num % 10 >= 2 && num % 10 <= 4 && (num % 100 < 10 || num % 100 >= 20) ? forms[1] : forms[2]);\n}\n/**\n * @param {?} num\n * @param {?} withoutSuffix\n * @param {?} key\n * @return {?}\n */\nfunction relativeTimeWithPlural$1(num, withoutSuffix, key) {\n    /** @type {?} */\n    let format = {\n        ss: withoutSuffix ? 'секунда_секунды_секунд' : 'секунду_секунды_секунд',\n        mm: withoutSuffix ? 'минута_минуты_минут' : 'минуту_минуты_минут',\n        hh: 'час_часа_часов',\n        dd: 'день_дня_дней',\n        MM: 'месяц_месяца_месяцев',\n        yy: 'год_года_лет'\n    };\n    if (key === 'm') {\n        return withoutSuffix ? 'минута' : 'минуту';\n    }\n    return num + ' ' + plural$2(format[key], +num);\n}\n/** @type {?} */\nlet monthsParse$6 = [/^янв/i, /^фев/i, /^мар/i, /^апр/i, /^ма[йя]/i, /^июн/i, /^июл/i, /^авг/i, /^сен/i, /^окт/i, /^ноя/i, /^дек/i];\n// http://new.gramota.ru/spravka/rules/139-prop : § 103\n// Сокращения месяцев: http://new.gramota.ru/spravka/buro/search-answer?s=242637\n// CLDR data:          http://www.unicode.org/cldr/charts/28/summary/ru.html#1753\n/** @type {?} */\nconst ruLocale = {\n    abbr: 'ru',\n    months: {\n        format: 'января_февраля_марта_апреля_мая_июня_июля_августа_сентября_октября_ноября_декабря'.split('_'),\n        standalone: 'январь_февраль_март_апрель_май_июнь_июль_август_сентябрь_октябрь_ноябрь_декабрь'.split('_')\n    },\n    monthsShort: {\n        // по CLDR именно \"июл.\" и \"июн.\", но какой смысл менять букву на точку ?\n        format: 'янв._февр._мар._апр._мая_июня_июля_авг._сент._окт._нояб._дек.'.split('_'),\n        standalone: 'янв._февр._март_апр._май_июнь_июль_авг._сент._окт._нояб._дек.'.split('_')\n    },\n    weekdays: {\n        standalone: 'воскресенье_понедельник_вторник_среда_четверг_пятница_суббота'.split('_'),\n        format: 'воскресенье_понедельник_вторник_среду_четверг_пятницу_субботу'.split('_'),\n        isFormat: /\\[ ?[Вв] ?(?:прошлую|следующую|эту)? ?\\] ?dddd/\n    },\n    weekdaysShort: 'вс_пн_вт_ср_чт_пт_сб'.split('_'),\n    weekdaysMin: 'вс_пн_вт_ср_чт_пт_сб'.split('_'),\n    monthsParse: monthsParse$6,\n    longMonthsParse: monthsParse$6,\n    shortMonthsParse: monthsParse$6,\n    // полные названия с падежами, по три буквы, для некоторых, по 4 буквы, сокращения с точкой и без точки\n    monthsRegex: /^(январ[ья]|янв\\.?|феврал[ья]|февр?\\.?|марта?|мар\\.?|апрел[ья]|апр\\.?|ма[йя]|июн[ья]|июн\\.?|июл[ья]|июл\\.?|августа?|авг\\.?|сентябр[ья]|сент?\\.?|октябр[ья]|окт\\.?|ноябр[ья]|нояб?\\.?|декабр[ья]|дек\\.?)/i,\n    // копия предыдущего\n    monthsShortRegex: /^(январ[ья]|янв\\.?|феврал[ья]|февр?\\.?|марта?|мар\\.?|апрел[ья]|апр\\.?|ма[йя]|июн[ья]|июн\\.?|июл[ья]|июл\\.?|августа?|авг\\.?|сентябр[ья]|сент?\\.?|октябр[ья]|окт\\.?|ноябр[ья]|нояб?\\.?|декабр[ья]|дек\\.?)/i,\n    // полные названия с падежами\n    monthsStrictRegex: /^(январ[яь]|феврал[яь]|марта?|апрел[яь]|ма[яй]|июн[яь]|июл[яь]|августа?|сентябр[яь]|октябр[яь]|ноябр[яь]|декабр[яь])/i,\n    // Выражение, которое соотвествует только сокращённым формам\n    monthsShortStrictRegex: /^(янв\\.|февр?\\.|мар[т.]|апр\\.|ма[яй]|июн[ья.]|июл[ья.]|авг\\.|сент?\\.|окт\\.|нояб?\\.|дек\\.)/i,\n    longDateFormat: {\n        LT: 'H:mm',\n        LTS: 'H:mm:ss',\n        L: 'DD.MM.YYYY',\n        LL: 'D MMMM YYYY г.',\n        LLL: 'D MMMM YYYY г., H:mm',\n        LLLL: 'dddd, D MMMM YYYY г., H:mm'\n    },\n    calendar: {\n        sameDay: '[Сегодня в] LT',\n        nextDay: '[Завтра в] LT',\n        lastDay: '[Вчера в] LT',\n        /**\n         * @param {?} date\n         * @param {?} now\n         * @return {?}\n         */\n        nextWeek(date, now) {\n            if (getWeek(now) !== getWeek(date)) {\n                switch (getDayOfWeek(date)) {\n                    case 0:\n                        return '[В следующее] dddd [в] LT';\n                    case 1:\n                    case 2:\n                    case 4:\n                        return '[В следующий] dddd [в] LT';\n                    case 3:\n                    case 5:\n                    case 6:\n                        return '[В следующую] dddd [в] LT';\n                }\n            }\n            else {\n                if (getDayOfWeek(date) === 2) {\n                    return '[Во] dddd [в] LT';\n                }\n                else {\n                    return '[В] dddd [в] LT';\n                }\n            }\n        },\n        /**\n         * @param {?} date\n         * @param {?} now\n         * @return {?}\n         */\n        lastWeek(date, now) {\n            if (getWeek(now) !== getWeek(date)) {\n                switch (getDayOfWeek(date)) {\n                    case 0:\n                        return '[В прошлое] dddd [в] LT';\n                    case 1:\n                    case 2:\n                    case 4:\n                        return '[В прошлый] dddd [в] LT';\n                    case 3:\n                    case 5:\n                    case 6:\n                        return '[В прошлую] dddd [в] LT';\n                }\n            }\n            else {\n                if (getDayOfWeek(date) === 2) {\n                    return '[Во] dddd [в] LT';\n                }\n                else {\n                    return '[В] dddd [в] LT';\n                }\n            }\n        },\n        sameElse: 'L'\n    },\n    relativeTime: {\n        future: 'через %s',\n        past: '%s назад',\n        s: 'несколько секунд',\n        ss: relativeTimeWithPlural$1,\n        m: relativeTimeWithPlural$1,\n        mm: relativeTimeWithPlural$1,\n        h: 'час',\n        hh: relativeTimeWithPlural$1,\n        d: 'день',\n        dd: relativeTimeWithPlural$1,\n        M: 'месяц',\n        MM: relativeTimeWithPlural$1,\n        y: 'год',\n        yy: relativeTimeWithPlural$1\n    },\n    meridiemParse: /ночи|утра|дня|вечера/i,\n    /**\n     * @param {?} input\n     * @return {?}\n     */\n    isPM(input) {\n        return /^(дня|вечера)$/.test(input);\n    },\n    /**\n     * @param {?} hour\n     * @param {?} minute\n     * @param {?} isLower\n     * @return {?}\n     */\n    meridiem(hour, minute, isLower) {\n        if (hour < 4) {\n            return 'ночи';\n        }\n        else if (hour < 12) {\n            return 'утра';\n        }\n        else if (hour < 17) {\n            return 'дня';\n        }\n        else {\n            return 'вечера';\n        }\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}-(й|го|я)/,\n    /**\n     * @param {?} _num\n     * @param {?} period\n     * @return {?}\n     */\n    ordinal(_num, period) {\n        /** @type {?} */\n        const num = Number(_num);\n        switch (period) {\n            case 'M':\n            case 'd':\n            case 'DDD':\n                return num + '-й';\n            case 'D':\n                return num + '-го';\n            case 'w':\n            case 'W':\n                return num + '-я';\n            default:\n                return num.toString(10);\n        }\n    },\n    week: {\n        dow: 1,\n        // Monday is the first day of the week.\n        doy: 4 // The week that contains Jan 4th is the first week of the year.\n    }\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n//! moment.js locale configuration\n//! locale : Slovak [sk]\n//! author : Jozef Pažin : https://github.com/atiris\n/** @type {?} */\nconst months$2 = 'január_február_marec_apríl_máj_jún_júl_august_september_október_november_december'.split('_');\n/** @type {?} */\nconst monthsShort$6 = 'jan_feb_mar_apr_máj_jún_júl_aug_sep_okt_nov_dec'.split('_');\n/**\n * @param {?} num\n * @return {?}\n */\nfunction plural$3(num) {\n    return (num > 1) && (num < 5) && (~~(num / 10) !== 1);\n}\n/**\n * @param {?} num\n * @param {?} withoutSuffix\n * @param {?} key\n * @param {?} isFuture\n * @return {?}\n */\nfunction translate$6(num, withoutSuffix, key, isFuture) {\n    /** @type {?} */\n    const result = num + ' ';\n    switch (key) {\n        case 's': // a few seconds / in a few seconds / a few seconds ago\n            return (withoutSuffix || isFuture) ? 'pár sekúnd' : 'pár sekundami';\n        case 'ss': // 9 seconds / in 9 seconds / 9 seconds ago\n            if (withoutSuffix || isFuture) {\n                return result + (plural$3(num) ? 'sekundy' : 'sekúnd');\n            }\n            else {\n                return result + 'sekundami';\n            }\n        // break;\n        case 'm': // a minute / in a minute / a minute ago\n            return withoutSuffix ? 'minúta' : (isFuture ? 'minútu' : 'minútou');\n        case 'mm': // 9 minutes / in 9 minutes / 9 minutes ago\n            if (withoutSuffix || isFuture) {\n                return result + (plural$3(num) ? 'minúty' : 'minút');\n            }\n            else {\n                return result + 'minútami';\n            }\n        // break;\n        case 'h': // an hour / in an hour / an hour ago\n            return withoutSuffix ? 'hodina' : (isFuture ? 'hodinu' : 'hodinou');\n        case 'hh': // 9 hours / in 9 hours / 9 hours ago\n            if (withoutSuffix || isFuture) {\n                return result + (plural$3(num) ? 'hodiny' : 'hodín');\n            }\n            else {\n                return result + 'hodinami';\n            }\n        // break;\n        case 'd': // a day / in a day / a day ago\n            return (withoutSuffix || isFuture) ? 'deň' : 'dňom';\n        case 'dd': // 9 days / in 9 days / 9 days ago\n            if (withoutSuffix || isFuture) {\n                return result + (plural$3(num) ? 'dni' : 'dní');\n            }\n            else {\n                return result + 'dňami';\n            }\n        // break;\n        case 'M': // a month / in a month / a month ago\n            return (withoutSuffix || isFuture) ? 'mesiac' : 'mesiacom';\n        case 'MM': // 9 months / in 9 months / 9 months ago\n            if (withoutSuffix || isFuture) {\n                return result + (plural$3(num) ? 'mesiace' : 'mesiacov');\n            }\n            else {\n                return result + 'mesiacmi';\n            }\n        // break;\n        case 'y': // a year / in a year / a year ago\n            return (withoutSuffix || isFuture) ? 'rok' : 'rokom';\n        case 'yy': // 9 years / in 9 years / 9 years ago\n            if (withoutSuffix || isFuture) {\n                return result + (plural$3(num) ? 'roky' : 'rokov');\n            }\n            else {\n                return result + 'rokmi';\n            }\n        // break;\n    }\n}\n/** @type {?} */\nconst skLocale = {\n    abbr: 'sk',\n    months: months$2,\n    monthsShort: monthsShort$6,\n    weekdays: 'nedeľa_pondelok_utorok_streda_štvrtok_piatok_sobota'.split('_'),\n    weekdaysShort: 'ne_po_ut_st_št_pi_so'.split('_'),\n    weekdaysMin: 'ne_po_ut_st_št_pi_so'.split('_'),\n    longDateFormat: {\n        LT: 'H:mm',\n        LTS: 'H:mm:ss',\n        L: 'DD.MM.YYYY',\n        LL: 'D. MMMM YYYY',\n        LLL: 'D. MMMM YYYY H:mm',\n        LLLL: 'dddd D. MMMM YYYY H:mm',\n        l: 'D. M. YYYY'\n    },\n    calendar: {\n        sameDay: '[dnes o] LT',\n        nextDay: '[zajtra o] LT',\n        /**\n         * @param {?} date\n         * @return {?}\n         */\n        nextWeek(date) {\n            switch (getDayOfWeek(date)) {\n                case 0:\n                    return '[v nedeľu o] LT';\n                case 1:\n                case 2:\n                    return '[v] dddd [o] LT';\n                case 3:\n                    return '[v stredu o] LT';\n                case 4:\n                    return '[vo štvrtok o] LT';\n                case 5:\n                    return '[v piatok o] LT';\n                case 6:\n                    return '[v sobotu o] LT';\n            }\n        },\n        lastDay: '[včera o] LT',\n        /**\n         * @param {?} date\n         * @return {?}\n         */\n        lastWeek(date) {\n            switch (getDayOfWeek(date)) {\n                case 0:\n                    return '[minulú nedeľu o] LT';\n                case 1:\n                case 2:\n                    return '[minulý] dddd [o] LT';\n                case 3:\n                    return '[minulú stredu o] LT';\n                case 4:\n                case 5:\n                    return '[minulý] dddd [o] LT';\n                case 6:\n                    return '[minulú sobotu o] LT';\n            }\n        },\n        sameElse: 'L'\n    },\n    relativeTime: {\n        future: 'o %s',\n        past: 'pred %s',\n        s: translate$6,\n        ss: translate$6,\n        m: translate$6,\n        mm: translate$6,\n        h: translate$6,\n        hh: translate$6,\n        d: translate$6,\n        dd: translate$6,\n        M: translate$6,\n        MM: translate$6,\n        y: translate$6,\n        yy: translate$6\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n    ordinal: '%d.',\n    week: {\n        dow: 1,\n        // Monday is the first day of the week.\n        doy: 4 // The week that contains Jan 4th is the first week of the year.\n    }\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n//! moment.js locale configuration\n//! locale : Slovenian [sl]\n//! author : mihan : https://github.com/mihan\n/**\n * @param {?} number\n * @param {?} withoutSuffix\n * @param {?} key\n * @param {?} isFuture\n * @return {?}\n */\nfunction processRelativeTime$2(number, withoutSuffix, key, isFuture) {\n    /** @type {?} */\n    var result = number + ' ';\n    switch (key) {\n        case 's':\n            return withoutSuffix || isFuture ? 'nekaj sekund' : 'nekaj sekundami';\n        case 'ss':\n            if (number === 1) {\n                result += withoutSuffix ? 'sekundo' : 'sekundi';\n            }\n            else if (number === 2) {\n                result += withoutSuffix || isFuture ? 'sekundi' : 'sekundah';\n            }\n            else if (number < 5) {\n                result += withoutSuffix || isFuture ? 'sekunde' : 'sekundah';\n            }\n            else {\n                result += withoutSuffix || isFuture ? 'sekund' : 'sekund';\n            }\n            return result;\n        case 'm':\n            return withoutSuffix ? 'ena minuta' : 'eno minuto';\n        case 'mm':\n            if (number === 1) {\n                result += withoutSuffix ? 'minuta' : 'minuto';\n            }\n            else if (number === 2) {\n                result += withoutSuffix || isFuture ? 'minuti' : 'minutama';\n            }\n            else if (number < 5) {\n                result += withoutSuffix || isFuture ? 'minute' : 'minutami';\n            }\n            else {\n                result += withoutSuffix || isFuture ? 'minut' : 'minutami';\n            }\n            return result;\n        case 'h':\n            return withoutSuffix ? 'ena ura' : 'eno uro';\n        case 'hh':\n            if (number === 1) {\n                result += withoutSuffix ? 'ura' : 'uro';\n            }\n            else if (number === 2) {\n                result += withoutSuffix || isFuture ? 'uri' : 'urama';\n            }\n            else if (number < 5) {\n                result += withoutSuffix || isFuture ? 'ure' : 'urami';\n            }\n            else {\n                result += withoutSuffix || isFuture ? 'ur' : 'urami';\n            }\n            return result;\n        case 'd':\n            return withoutSuffix || isFuture ? 'en dan' : 'enim dnem';\n        case 'dd':\n            if (number === 1) {\n                result += withoutSuffix || isFuture ? 'dan' : 'dnem';\n            }\n            else if (number === 2) {\n                result += withoutSuffix || isFuture ? 'dni' : 'dnevoma';\n            }\n            else {\n                result += withoutSuffix || isFuture ? 'dni' : 'dnevi';\n            }\n            return result;\n        case 'M':\n            return withoutSuffix || isFuture ? 'en mesec' : 'enim mesecem';\n        case 'MM':\n            if (number === 1) {\n                result += withoutSuffix || isFuture ? 'mesec' : 'mesecem';\n            }\n            else if (number === 2) {\n                result += withoutSuffix || isFuture ? 'meseca' : 'mesecema';\n            }\n            else if (number < 5) {\n                result += withoutSuffix || isFuture ? 'mesece' : 'meseci';\n            }\n            else {\n                result += withoutSuffix || isFuture ? 'mesecev' : 'meseci';\n            }\n            return result;\n        case 'y':\n            return withoutSuffix || isFuture ? 'eno leto' : 'enim letom';\n        case 'yy':\n            if (number === 1) {\n                result += withoutSuffix || isFuture ? 'leto' : 'letom';\n            }\n            else if (number === 2) {\n                result += withoutSuffix || isFuture ? 'leti' : 'letoma';\n            }\n            else if (number < 5) {\n                result += withoutSuffix || isFuture ? 'leta' : 'leti';\n            }\n            else {\n                result += withoutSuffix || isFuture ? 'let' : 'leti';\n            }\n            return result;\n    }\n}\n/** @type {?} */\nconst slLocale = {\n    abbr: 'sl',\n    months: 'januar_februar_marec_april_maj_junij_julij_avgust_september_oktober_november_december'.split('_'),\n    monthsShort: 'jan._feb._mar._apr._maj._jun._jul._avg._sep._okt._nov._dec.'.split('_'),\n    monthsParseExact: true,\n    weekdays: 'nedelja_ponedeljek_torek_sreda_četrtek_petek_sobota'.split('_'),\n    weekdaysShort: 'ned._pon._tor._sre._čet._pet._sob.'.split('_'),\n    weekdaysMin: 'ne_po_to_sr_če_pe_so'.split('_'),\n    weekdaysParseExact: true,\n    longDateFormat: {\n        LT: 'H:mm',\n        LTS: 'H:mm:ss',\n        L: 'DD.MM.YYYY',\n        LL: 'D. MMMM YYYY',\n        LLL: 'D. MMMM YYYY H:mm',\n        LLLL: 'dddd, D. MMMM YYYY H:mm'\n    },\n    calendar: {\n        sameDay: '[danes ob] LT',\n        nextDay: '[jutri ob] LT',\n        /**\n         * @param {?} date\n         * @return {?}\n         */\n        nextWeek(date) {\n            switch (getDayOfWeek(date)) {\n                case 0:\n                    return '[v] [nedeljo] [ob] LT';\n                case 3:\n                    return '[v] [sredo] [ob] LT';\n                case 6:\n                    return '[v] [soboto] [ob] LT';\n                case 1:\n                case 2:\n                case 4:\n                case 5:\n                    return '[v] dddd [ob] LT';\n            }\n        },\n        lastDay: '[včeraj ob] LT',\n        /**\n         * @param {?} date\n         * @return {?}\n         */\n        lastWeek(date) {\n            switch (getDayOfWeek(date)) {\n                case 0:\n                    return '[prejšnjo] [nedeljo] [ob] LT';\n                case 3:\n                    return '[prejšnjo] [sredo] [ob] LT';\n                case 6:\n                    return '[prejšnjo] [soboto] [ob] LT';\n                case 1:\n                case 2:\n                case 4:\n                case 5:\n                    return '[prejšnji] dddd [ob] LT';\n            }\n        },\n        sameElse: 'L'\n    },\n    relativeTime: {\n        future: 'čez %s',\n        past: 'pred %s',\n        s: processRelativeTime$2,\n        ss: processRelativeTime$2,\n        m: processRelativeTime$2,\n        mm: processRelativeTime$2,\n        h: processRelativeTime$2,\n        hh: processRelativeTime$2,\n        d: processRelativeTime$2,\n        dd: processRelativeTime$2,\n        M: processRelativeTime$2,\n        MM: processRelativeTime$2,\n        y: processRelativeTime$2,\n        yy: processRelativeTime$2\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n    ordinal: '%d.',\n    week: {\n        dow: 1,\n        // Monday is the first day of the week.\n        doy: 7 // The week that contains Jan 1st is the first week of the year.\n    }\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// tslint:disable:comment-format binary-expression-operand-order max-line-length\n// tslint:disable:no-bitwise prefer-template cyclomatic-complexity\n// tslint:disable:no-shadowed-variable switch-default prefer-const\n// tslint:disable:one-variable-per-declaration newline-before-return\n//! moment.js locale configuration\n//! locale : Albanian [sq]\n//! author : Agon Cecelia : https://github.com/agoncecelia\n/** @type {?} */\nconst sqLocale = {\n    abbr: 'sq',\n    months: 'Janar_Shkurt_Mars_Prill_Maj_Qershor_Korrik_Gusht_Shtator_Tetor_Nëntor_Dhjetor'.split('_'),\n    monthsShort: 'Jan_Shk_Mar_Pri_Maj_Qer_Kor_Gus_Sht_Tet_Nën_Dhj'.split('_'),\n    weekdays: 'E Dielë_E Hënë_E Martë_E Mërkurë_E Enjte_E Premte_E Shtunë'.split('_'),\n    weekdaysShort: 'Die_Hën_Mar_Mër_Enj_Pre_Sht'.split('_'),\n    weekdaysMin: 'Di_He_Ma_Me_En_Pr_Sh'.split('_'),\n    longDateFormat: {\n        LT: 'HH:mm',\n        LTS: 'HH:mm:ss',\n        L: 'DD/MM/YYYY',\n        LL: 'D MMMM YYYY',\n        LLL: 'D MMMM YYYY HH:mm',\n        LLLL: 'dddd, D MMMM YYYY HH:mm'\n    },\n    calendar: {\n        sameDay: '[Sot në] LT',\n        nextDay: '[Nesër në] LT',\n        nextWeek: 'dddd [në] LT',\n        lastDay: '[Dje në] LT',\n        lastWeek: 'dddd [e kaluar në] LT',\n        sameElse: 'L'\n    },\n    relativeTime: {\n        future: 'në %s',\n        past: 'para %sve',\n        s: 'disa sekonda',\n        ss: '%d sekonda',\n        m: 'një minut',\n        mm: '%d minuta',\n        h: 'një orë',\n        hh: '%d orë',\n        d: 'një ditë',\n        dd: '%d ditë',\n        M: 'një muaj',\n        MM: '%d muaj',\n        y: 'një vit',\n        yy: '%d vite'\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n    // need clarification\n    ordinal: '%d.',\n    // need clarification\n    week: {\n        dow: 1,\n        // Monday is the first day of the week.\n        doy: 4 // The week that contains Jan 4th is the first week of the year.\n    }\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// tslint:disable:comment-format binary-expression-operand-order max-line-length\n// tslint:disable:no-bitwise prefer-template cyclomatic-complexity\n// tslint:disable:no-shadowed-variable switch-default prefer-const\n// tslint:disable:one-variable-per-declaration newline-before-return\n//! moment.js locale configuration\n//! locale : Swedish [sv]\n//! author : Jens Alm : https://github.com/ulmus\n/** @type {?} */\nconst svLocale = {\n    abbr: 'sv',\n    months: 'januari_februari_mars_april_maj_juni_juli_augusti_september_oktober_november_december'.split('_'),\n    monthsShort: 'jan_feb_mar_apr_maj_jun_jul_aug_sep_okt_nov_dec'.split('_'),\n    weekdays: 'söndag_måndag_tisdag_onsdag_torsdag_fredag_lördag'.split('_'),\n    weekdaysShort: 'sön_mån_tis_ons_tor_fre_lör'.split('_'),\n    weekdaysMin: 'sö_må_ti_on_to_fr_lö'.split('_'),\n    longDateFormat: {\n        LT: 'HH:mm',\n        LTS: 'HH:mm:ss',\n        L: 'YYYY-MM-DD',\n        LL: 'D MMMM YYYY',\n        LLL: 'D MMMM YYYY [kl.] HH:mm',\n        LLLL: 'dddd D MMMM YYYY [kl.] HH:mm',\n        lll: 'D MMM YYYY HH:mm',\n        llll: 'ddd D MMM YYYY HH:mm'\n    },\n    calendar: {\n        sameDay: '[Idag] LT',\n        nextDay: '[Imorgon] LT',\n        lastDay: '[Igår] LT',\n        nextWeek: '[På] dddd LT',\n        lastWeek: '[I] dddd[s] LT',\n        sameElse: 'L'\n    },\n    relativeTime: {\n        future: 'om %s',\n        past: 'för %s sedan',\n        s: 'några sekunder',\n        ss: '%d sekunder',\n        m: 'en minut',\n        mm: '%d minuter',\n        h: 'en timme',\n        hh: '%d timmar',\n        d: 'en dag',\n        dd: '%d dagar',\n        M: 'en månad',\n        MM: '%d månader',\n        y: 'ett år',\n        yy: '%d år'\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}(e|a)/,\n    /**\n     * @param {?} _num\n     * @return {?}\n     */\n    ordinal(_num) {\n        /** @type {?} */\n        const num = Number(_num);\n        /** @type {?} */\n        let b = num % 10;\n        /** @type {?} */\n        let output = (~~(num % 100 / 10) === 1) ? 'e' :\n            (b === 1) ? 'a' :\n                (b === 2) ? 'a' :\n                    (b === 3) ? 'e' : 'e';\n        return num + output;\n    },\n    week: {\n        dow: 1,\n        // Monday is the first day of the week.\n        doy: 4 // The week that contains Jan 4th is the first week of the year.\n    }\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// tslint:disable:comment-format binary-expression-operand-order max-line-length\n// tslint:disable:no-bitwise prefer-template cyclomatic-complexity\n// tslint:disable:no-shadowed-variable switch-default prefer-const\n// tslint:disable:one-variable-per-declaration newline-before-return\n// moment.js locale configuration\n// locale : Thai [th]\n// author : Watcharapol Sanitwong : https://github.com/tumit\n/** @type {?} */\nconst thLocale = {\n    abbr: 'th',\n    months: 'มกราคม_กุมภาพันธ์_มีนาคม_เมษายน_พฤษภาคม_มิถุนายน_กรกฎาคม_สิงหาคม_กันยายน_ตุลาคม_พฤศจิกายน_ธันวาคม'.split('_'),\n    monthsShort: 'ม.ค._ก.พ._มี.ค._เม.ย._พ.ค._มิ.ย._ก.ค._ส.ค._ก.ย._ต.ค._พ.ย._ธ.ค.'.split('_'),\n    monthsParseExact: true,\n    weekdays: 'อาทิตย์_จันทร์_อังคาร_พุธ_พฤหัสบดี_ศุกร์_เสาร์'.split('_'),\n    weekdaysShort: 'อา._จ._อ._พ._พฤ._ศ._ส.'.split('_'),\n    // yes, three characters difference\n    weekdaysMin: 'อา._จ._อ._พ._พฤ._ศ._ส.'.split('_'),\n    weekdaysParseExact: true,\n    longDateFormat: {\n        LT: 'H:mm',\n        LTS: 'H:mm:ss',\n        L: 'DD/MM/YYYY',\n        LL: 'D MMMM YYYY',\n        LLL: 'D MMMM YYYY เวลา H:mm',\n        LLLL: 'วันddddที่ D MMMM YYYY เวลา H:mm'\n    },\n    meridiemParse: /ก่อนเที่ยง|หลังเที่ยง/,\n    /**\n     * @param {?} input\n     * @return {?}\n     */\n    isPM(input) {\n        return input === 'หลังเที่ยง';\n    },\n    /**\n     * @param {?} hour\n     * @param {?} minute\n     * @param {?} isLower\n     * @return {?}\n     */\n    meridiem(hour, minute, isLower) {\n        if (hour < 12) {\n            return 'ก่อนเที่ยง';\n        }\n        else {\n            return 'หลังเที่ยง';\n        }\n    },\n    calendar: {\n        sameDay: '[วันนี้ เวลา] LT',\n        nextDay: '[พรุ่งนี้ เวลา] LT',\n        nextWeek: 'dddd[หน้า เวลา] LT',\n        lastDay: '[เมื่อวานนี้ เวลา] LT',\n        lastWeek: '[วัน]dddd[ที่แล้ว เวลา] LT',\n        sameElse: 'L'\n    },\n    relativeTime: {\n        future: 'อีก %s',\n        past: '%sที่แล้ว',\n        s: 'ไม่กี่วินาที',\n        ss: '%d วินาที',\n        m: '1 นาที',\n        mm: '%d นาที',\n        h: '1 ชั่วโมง',\n        hh: '%d ชั่วโมง',\n        d: '1 วัน',\n        dd: '%d วัน',\n        M: '1 เดือน',\n        MM: '%d เดือน',\n        y: '1 ปี',\n        yy: '%d ปี'\n    }\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// tslint:disable:comment-format binary-expression-operand-order max-line-length\n// tslint:disable:no-bitwise prefer-template cyclomatic-complexity\n// tslint:disable:no-shadowed-variable switch-default prefer-const\n// tslint:disable:one-variable-per-declaration newline-before-return\n// moment.js locale configuration\n// locale : Thai-Buddhist Era [th-be]\n// author : Watcharapol Sanitwong : https://github.com/tumit\n/** @type {?} */\nconst thBeLocale = {\n    abbr: 'th-be',\n    months: 'มกราคม_กุมภาพันธ์_มีนาคม_เมษายน_พฤษภาคม_มิถุนายน_กรกฎาคม_สิงหาคม_กันยายน_ตุลาคม_พฤศจิกายน_ธันวาคม'.split('_'),\n    monthsShort: 'ม.ค._ก.พ._มี.ค._เม.ย._พ.ค._มิ.ย._ก.ค._ส.ค._ก.ย._ต.ค._พ.ย._ธ.ค.'.split('_'),\n    monthsParseExact: true,\n    weekdays: 'อาทิตย์_จันทร์_อังคาร_พุธ_พฤหัสบดี_ศุกร์_เสาร์'.split('_'),\n    weekdaysShort: 'อา._จ._อ._พ._พฤ._ศ._ส.'.split('_'),\n    weekdaysMin: 'อา._จ._อ._พ._พฤ._ศ._ส.'.split('_'),\n    weekdaysParseExact: true,\n    longDateFormat: {\n        LT: 'H:mm',\n        LTS: 'H:mm:ss',\n        L: 'DD/MM/YYYY',\n        LL: 'D MMMM YYYY',\n        LLL: 'D MMMM YYYY เวลา H:mm',\n        LLLL: 'วันddddที่ D MMMM YYYY เวลา H:mm'\n    },\n    meridiemParse: /ก่อนเที่ยง|หลังเที่ยง/,\n    /**\n     * @param {?} input\n     * @return {?}\n     */\n    isPM(input) {\n        return input === 'หลังเที่ยง';\n    },\n    /**\n     * @param {?} hour\n     * @param {?} minute\n     * @param {?} isLower\n     * @return {?}\n     */\n    meridiem(hour, minute, isLower) {\n        if (hour < 12) {\n            return 'ก่อนเที่ยง';\n        }\n        else {\n            return 'หลังเที่ยง';\n        }\n    },\n    calendar: {\n        sameDay: '[วันนี้ เวลา] LT',\n        nextDay: '[พรุ่งนี้ เวลา] LT',\n        nextWeek: 'dddd[หน้า เวลา] LT',\n        lastDay: '[เมื่อวานนี้ เวลา] LT',\n        lastWeek: '[วัน]dddd[ที่แล้ว เวลา] LT',\n        sameElse: 'L'\n    },\n    relativeTime: {\n        future: 'อีก %s',\n        past: '%sที่แล้ว',\n        s: 'ไม่กี่วินาที',\n        ss: '%d วินาที',\n        m: '1 นาที',\n        mm: '%d นาที',\n        h: '1 ชั่วโมง',\n        hh: '%d ชั่วโมง',\n        d: '1 วัน',\n        dd: '%d วัน',\n        M: '1 เดือน',\n        MM: '%d เดือน',\n        y: '1 ปี',\n        yy: '%d ปี'\n    },\n    /**\n     * @param {?} str\n     * @param {?=} format\n     * @return {?}\n     */\n    preparse(str, format) {\n        /** @type {?} */\n        const _format = thBeLocale.longDateFormat[format]\n            ? thBeLocale.longDateFormat[format]\n            : format;\n        // endsWith('YYYY')\n        if (_format.indexOf('YYYY', _format.length - 'YYYY'.length) !== -1) {\n            /** @type {?} */\n            const ddMM = str.substr(0, str.length - 4);\n            /** @type {?} */\n            const yyyy = parseInt(str.substr(str.length - 4), 10) - 543;\n            return ddMM + yyyy;\n        }\n        return str;\n    },\n    /**\n     * @param {?} date\n     * @param {?=} isUTC\n     * @return {?}\n     */\n    getFullYear(date, isUTC = false) {\n        return 543 + (isUTC ? date.getUTCFullYear() : date.getFullYear());\n    }\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// tslint:disable:comment-format binary-expression-operand-order max-line-length\n// tslint:disable:no-bitwise prefer-template cyclomatic-complexity\n// tslint:disable:no-shadowed-variable switch-default prefer-const\n// tslint:disable:one-variable-per-declaration newline-before-return\n//! moment.js locale configuration\n//! locale : Turkish [tr]\n//! authors : Erhan Gundogan : https://github.com/erhangundogan,\n//!           Burak Yiğit Kaya: https://github.com/BYK\n/** @type {?} */\nlet suffixes$1 = {\n    1: '\\'inci',\n    5: '\\'inci',\n    8: '\\'inci',\n    70: '\\'inci',\n    80: '\\'inci',\n    2: '\\'nci',\n    7: '\\'nci',\n    20: '\\'nci',\n    50: '\\'nci',\n    3: '\\'üncü',\n    4: '\\'üncü',\n    100: '\\'üncü',\n    6: '\\'ncı',\n    9: '\\'uncu',\n    10: '\\'uncu',\n    30: '\\'uncu',\n    60: '\\'ıncı',\n    90: '\\'ıncı'\n};\n/** @type {?} */\nconst trLocale = {\n    abbr: 'tr',\n    months: 'Ocak_Şubat_Mart_Nisan_Mayıs_Haziran_Temmuz_Ağustos_Eylül_Ekim_Kasım_Aralık'.split('_'),\n    monthsShort: 'Oca_Şub_Mar_Nis_May_Haz_Tem_Ağu_Eyl_Eki_Kas_Ara'.split('_'),\n    weekdays: 'Pazar_Pazartesi_Salı_Çarşamba_Perşembe_Cuma_Cumartesi'.split('_'),\n    weekdaysShort: 'Paz_Pts_Sal_Çar_Per_Cum_Cts'.split('_'),\n    weekdaysMin: 'Pz_Pt_Sa_Ça_Pe_Cu_Ct'.split('_'),\n    longDateFormat: {\n        LT: 'HH:mm',\n        LTS: 'HH:mm:ss',\n        L: 'DD.MM.YYYY',\n        LL: 'D MMMM YYYY',\n        LLL: 'D MMMM YYYY HH:mm',\n        LLLL: 'dddd, D MMMM YYYY HH:mm'\n    },\n    calendar: {\n        sameDay: '[bugün saat] LT',\n        nextDay: '[yarın saat] LT',\n        nextWeek: '[gelecek] dddd [saat] LT',\n        lastDay: '[dün] LT',\n        lastWeek: '[geçen] dddd [saat] LT',\n        sameElse: 'L'\n    },\n    relativeTime: {\n        future: '%s sonra',\n        past: '%s önce',\n        s: 'birkaç saniye',\n        ss: '%d saniye',\n        m: 'bir dakika',\n        mm: '%d dakika',\n        h: 'bir saat',\n        hh: '%d saat',\n        d: 'bir gün',\n        dd: '%d gün',\n        M: 'bir ay',\n        MM: '%d ay',\n        y: 'bir yıl',\n        yy: '%d yıl'\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}'(inci|nci|üncü|ncı|uncu|ıncı)/,\n    /**\n     * @param {?} _num\n     * @return {?}\n     */\n    ordinal(_num) {\n        /** @type {?} */\n        const num = Number(_num);\n        if (num === 0) { // special case for zero\n            return num + '\\'ıncı';\n        }\n        /** @type {?} */\n        let a = num % 10;\n        /** @type {?} */\n        let b = num % 100 - a;\n        /** @type {?} */\n        let c = num >= 100 ? 100 : null;\n        return num + (suffixes$1[a] || suffixes$1[b] || suffixes$1[c]);\n    },\n    week: {\n        dow: 1,\n        // Monday is the first day of the week.\n        doy: 7 // The week that contains Jan 1st is the first week of the year.\n    }\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n//! moment.js locale configuration\n//! locale : Ukrainian [uk]\n//! author : zemlanin : https://github.com/zemlanin\n//! Author : Menelion Elensúle : https://github.com/Oire\n/**\n * @param {?} word\n * @param {?} num\n * @return {?}\n */\nfunction plural$4(word, num) {\n    /** @type {?} */\n    let forms = word.split('_');\n    return num % 10 === 1 && num % 100 !== 11 ? forms[0] : (num % 10 >= 2 && num % 10 <= 4 && (num % 100 < 10 || num % 100 >= 20) ? forms[1] : forms[2]);\n}\n/**\n * @param {?} num\n * @param {?} withoutSuffix\n * @param {?} key\n * @return {?}\n */\nfunction relativeTimeWithPlural$2(num, withoutSuffix, key) {\n    /** @type {?} */\n    let format = {\n        ss: withoutSuffix ? 'секунда_секунди_секунд' : 'секунду_секунди_секунд',\n        mm: withoutSuffix ? 'хвилина_хвилини_хвилин' : 'хвилину_хвилини_хвилин',\n        hh: withoutSuffix ? 'година_години_годин' : 'годину_години_годин',\n        dd: 'день_дні_днів',\n        MM: 'місяць_місяці_місяців',\n        yy: 'рік_роки_років'\n    };\n    if (key === 'm') {\n        return withoutSuffix ? 'хвилина' : 'хвилину';\n    }\n    if (key === 'h') {\n        return withoutSuffix ? 'година' : 'годину';\n    }\n    return num + ' ' + plural$4(format[key], +num);\n}\n/**\n * @param {?} date\n * @param {?} format\n * @param {?=} isUTC\n * @return {?}\n */\nfunction weekdaysCaseReplace(date, format, isUTC) {\n    /** @type {?} */\n    let weekdays = {\n        nominative: 'неділя_понеділок_вівторок_середа_четвер_п’ятниця_субота'.split('_'),\n        accusative: 'неділю_понеділок_вівторок_середу_четвер_п’ятницю_суботу'.split('_'),\n        genitive: 'неділі_понеділка_вівторка_середи_четверга_п’ятниці_суботи'.split('_')\n    };\n    if (!date) {\n        return weekdays.nominative;\n    }\n    /** @type {?} */\n    let nounCase = (/(\\[[ВвУу]\\]) ?dddd/).test(format) ?\n        'accusative' :\n        ((/\\[?(?:минулої|наступної)? ?\\] ?dddd/).test(format) ?\n            'genitive' :\n            'nominative');\n    return weekdays[nounCase][getDayOfWeek(date, isUTC)];\n}\n/**\n * @param {?} str\n * @return {?}\n */\nfunction processHoursFunction(str) {\n    return (/**\n     * @param {?} date\n     * @return {?}\n     */\n    function (date) {\n        return str + 'о' + (getHours(date) === 11 ? 'б' : '') + '] LT';\n    });\n}\n/** @type {?} */\nconst ukLocale = {\n    abbr: 'uk',\n    months: {\n        format: 'січня_лютого_березня_квітня_травня_червня_липня_серпня_вересня_жовтня_листопада_грудня'.split('_'),\n        standalone: 'січень_лютий_березень_квітень_травень_червень_липень_серпень_вересень_жовтень_листопад_грудень'.split('_')\n    },\n    monthsShort: 'січ_лют_бер_квіт_трав_черв_лип_серп_вер_жовт_лист_груд'.split('_'),\n    weekdays: weekdaysCaseReplace,\n    weekdaysShort: 'нд_пн_вт_ср_чт_пт_сб'.split('_'),\n    weekdaysMin: 'нд_пн_вт_ср_чт_пт_сб'.split('_'),\n    longDateFormat: {\n        LT: 'HH:mm',\n        LTS: 'HH:mm:ss',\n        L: 'DD.MM.YYYY',\n        LL: 'D MMMM YYYY р.',\n        LLL: 'D MMMM YYYY р., HH:mm',\n        LLLL: 'dddd, D MMMM YYYY р., HH:mm'\n    },\n    calendar: {\n        sameDay: processHoursFunction('[Сьогодні '),\n        nextDay: processHoursFunction('[Завтра '),\n        lastDay: processHoursFunction('[Вчора '),\n        nextWeek: processHoursFunction('[У] dddd ['),\n        /**\n         * @param {?} date\n         * @return {?}\n         */\n        lastWeek(date) {\n            switch (getDayOfWeek(date)) {\n                case 0:\n                case 3:\n                case 5:\n                case 6:\n                    return processHoursFunction('[Минулої] dddd [')(date);\n                case 1:\n                case 2:\n                case 4:\n                    return processHoursFunction('[Минулого] dddd [')(date);\n            }\n        },\n        sameElse: 'L'\n    },\n    relativeTime: {\n        future: 'за %s',\n        past: '%s тому',\n        s: 'декілька секунд',\n        ss: relativeTimeWithPlural$2,\n        m: relativeTimeWithPlural$2,\n        mm: relativeTimeWithPlural$2,\n        h: 'годину',\n        hh: relativeTimeWithPlural$2,\n        d: 'день',\n        dd: relativeTimeWithPlural$2,\n        M: 'місяць',\n        MM: relativeTimeWithPlural$2,\n        y: 'рік',\n        yy: relativeTimeWithPlural$2\n    },\n    // M. E.: those two are virtually unused but a user might want to implement them for his/her website for some reason\n    meridiemParse: /ночі|ранку|дня|вечора/,\n    /**\n     * @param {?} input\n     * @return {?}\n     */\n    isPM(input) {\n        return /^(дня|вечора)$/.test(input);\n    },\n    /**\n     * @param {?} hour\n     * @param {?} minute\n     * @param {?} isLower\n     * @return {?}\n     */\n    meridiem(hour, minute, isLower) {\n        if (hour < 4) {\n            return 'ночі';\n        }\n        else if (hour < 12) {\n            return 'ранку';\n        }\n        else if (hour < 17) {\n            return 'дня';\n        }\n        else {\n            return 'вечора';\n        }\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}-(й|го)/,\n    /**\n     * @param {?} _num\n     * @param {?} period\n     * @return {?}\n     */\n    ordinal(_num, period) {\n        /** @type {?} */\n        const num = Number(_num);\n        switch (period) {\n            case 'M':\n            case 'd':\n            case 'DDD':\n            case 'w':\n            case 'W':\n                return num + '-й';\n            case 'D':\n                return num + '-го';\n            default:\n                return num.toString();\n        }\n    },\n    week: {\n        dow: 1,\n        // Monday is the first day of the week.\n        doy: 7 // The week that contains Jan 1st is the first week of the year.\n    }\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// tslint:disable:comment-format binary-expression-operand-order max-line-length\n// tslint:disable:no-bitwise prefer-template cyclomatic-complexity\n// tslint:disable:no-shadowed-variable switch-default prefer-const\n// tslint:disable:one-variable-per-declaration newline-before-return\n//! moment.js locale configuration\n//! locale : Việt Nam [vi]\n//! author : Chris Gedrim : https://github.com/chrisgedrim\n/** @type {?} */\nconst viLocale = {\n    abbr: 'vi',\n    months: 'tháng 1_tháng 2_tháng 3_tháng 4_tháng 5_tháng 6_tháng 7_tháng 8_tháng 9_tháng 10_tháng 11_tháng 12'.split('_'),\n    monthsShort: 'Th01_Th02_Th03_Th04_Th05_Th06_Th07_Th08_Th09_Th10_Th11_Th12'.split('_'),\n    monthsParseExact: true,\n    weekdays: 'chủ nhật_thứ hai_thứ ba_thứ tư_thứ năm_thứ sáu_thứ bảy'.split('_'),\n    weekdaysShort: 'CN_T2_T3_T4_T5_T6_T7'.split('_'),\n    weekdaysMin: 'CN_T2_T3_T4_T5_T6_T7'.split('_'),\n    weekdaysParseExact: true,\n    meridiemParse: /sa|ch/i,\n    /**\n     * @param {?} input\n     * @return {?}\n     */\n    isPM(input) {\n        return /^ch$/i.test(input);\n    },\n    /**\n     * @param {?} hours\n     * @param {?} minutes\n     * @param {?} isLower\n     * @return {?}\n     */\n    meridiem(hours, minutes, isLower) {\n        if (hours < 12) {\n            return isLower ? 'sa' : 'SA';\n        }\n        else {\n            return isLower ? 'ch' : 'CH';\n        }\n    },\n    longDateFormat: {\n        LT: 'HH:mm',\n        LTS: 'HH:mm:ss',\n        L: 'DD/MM/YYYY',\n        LL: 'D MMMM [năm] YYYY',\n        LLL: 'D MMMM [năm] YYYY HH:mm',\n        LLLL: 'dddd, D MMMM [năm] YYYY HH:mm',\n        l: 'DD/M/YYYY',\n        ll: 'D MMM YYYY',\n        lll: 'D MMM YYYY HH:mm',\n        llll: 'ddd, D MMM YYYY HH:mm'\n    },\n    calendar: {\n        sameDay: '[Hôm nay lúc] LT',\n        nextDay: '[Ngày mai lúc] LT',\n        nextWeek: 'dddd [tuần tới lúc] LT',\n        lastDay: '[Hôm qua lúc] LT',\n        lastWeek: 'dddd [tuần trước lúc] LT',\n        sameElse: 'L'\n    },\n    relativeTime: {\n        future: '%s tới',\n        past: '%s trước',\n        s: 'vài giây',\n        ss: '%d giây',\n        m: 'một phút',\n        mm: '%d phút',\n        h: 'một giờ',\n        hh: '%d giờ',\n        d: 'một ngày',\n        dd: '%d ngày',\n        M: 'một tháng',\n        MM: '%d tháng',\n        y: 'một năm',\n        yy: '%d năm'\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}/,\n    /**\n     * @param {?} _num\n     * @return {?}\n     */\n    ordinal(_num) {\n        return '' + _num;\n    },\n    week: {\n        dow: 1,\n        // Thứ Hai là ngày đầu tuần.\n        doy: 4 // Tuần chứa ngày 4 tháng 1 là tuần đầu tiên trong năm.\n    }\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// tslint:disable:comment-format binary-expression-operand-order max-line-length\n// tslint:disable:no-bitwise prefer-template cyclomatic-complexity\n// tslint:disable:no-shadowed-variable switch-default prefer-const\n// tslint:disable:one-variable-per-declaration newline-before-return\n// tslint:disable:no-parameter-reassignment prefer-switch\n//! moment.js locale configuration\n//! locale : Chinese (China) [zh-cn]\n//! author : suupic : https://github.com/suupic\n//! author : Zeno Zeng : https://github.com/zenozeng\n/** @type {?} */\nconst zhCnLocale = {\n    abbr: 'zh-cn',\n    months: '一月_二月_三月_四月_五月_六月_七月_八月_九月_十月_十一月_十二月'.split('_'),\n    monthsShort: '1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月'.split('_'),\n    weekdays: '星期日_星期一_星期二_星期三_星期四_星期五_星期六'.split('_'),\n    weekdaysShort: '周日_周一_周二_周三_周四_周五_周六'.split('_'),\n    weekdaysMin: '日_一_二_三_四_五_六'.split('_'),\n    longDateFormat: {\n        LT: 'HH:mm',\n        LTS: 'HH:mm:ss',\n        L: 'YYYY/MM/DD',\n        LL: 'YYYY年M月D日',\n        LLL: 'YYYY年M月D日Ah点mm分',\n        LLLL: 'YYYY年M月D日ddddAh点mm分',\n        l: 'YYYY/M/D',\n        ll: 'YYYY年M月D日',\n        lll: 'YYYY年M月D日 HH:mm',\n        llll: 'YYYY年M月D日dddd HH:mm'\n    },\n    meridiemParse: /凌晨|早上|上午|中午|下午|晚上/,\n    /**\n     * @param {?} hour\n     * @param {?} meridiem\n     * @return {?}\n     */\n    meridiemHour(hour, meridiem) {\n        if (hour === 12) {\n            hour = 0;\n        }\n        if (meridiem === '凌晨' || meridiem === '早上' ||\n            meridiem === '上午') {\n            return hour;\n        }\n        else if (meridiem === '下午' || meridiem === '晚上') {\n            return hour + 12;\n        }\n        else {\n            // '中午'\n            return hour >= 11 ? hour : hour + 12;\n        }\n    },\n    /**\n     * @param {?} hour\n     * @param {?} minute\n     * @param {?} isLower\n     * @return {?}\n     */\n    meridiem(hour, minute, isLower) {\n        /** @type {?} */\n        let hm = hour * 100 + minute;\n        if (hm < 600) {\n            return '凌晨';\n        }\n        else if (hm < 900) {\n            return '早上';\n        }\n        else if (hm < 1130) {\n            return '上午';\n        }\n        else if (hm < 1230) {\n            return '中午';\n        }\n        else if (hm < 1800) {\n            return '下午';\n        }\n        else {\n            return '晚上';\n        }\n    },\n    calendar: {\n        sameDay: '[今天]LT',\n        nextDay: '[明天]LT',\n        nextWeek: '[下]ddddLT',\n        lastDay: '[昨天]LT',\n        lastWeek: '[上]ddddLT',\n        sameElse: 'L'\n    },\n    dayOfMonthOrdinalParse: /\\d{1,2}(日|月|周)/,\n    /**\n     * @param {?} _num\n     * @param {?} period\n     * @return {?}\n     */\n    ordinal(_num, period) {\n        /** @type {?} */\n        const num = Number(_num);\n        switch (period) {\n            case 'd':\n            case 'D':\n            case 'DDD':\n                return num + '日';\n            case 'M':\n                return num + '月';\n            case 'w':\n            case 'W':\n                return num + '周';\n            default:\n                return num.toString();\n        }\n    },\n    relativeTime: {\n        future: '%s内',\n        past: '%s前',\n        s: '几秒',\n        ss: '%d 秒',\n        m: '1 分钟',\n        mm: '%d 分钟',\n        h: '1 小时',\n        hh: '%d 小时',\n        d: '1 天',\n        dd: '%d 天',\n        M: '1 个月',\n        MM: '%d 个月',\n        y: '1 年',\n        yy: '%d 年'\n    },\n    week: {\n        // GB/T 7408-1994《数据元和交换格式·信息交换·日期和时间表示法》与ISO 8601:1988等效\n        dow: 1,\n        // Monday is the first day of the week.\n        doy: 4 // The week that contains Jan 4th is the first week of the year.\n    }\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { add, arLocale, bgLocale, caLocale, csLocale, daLocale, deLocale, defineLocale, enGbLocale, endOf, esDoLocale, esLocale, esUsLocale, etLocale, fiLocale, formatDate, frLocale, getDay, getFirstDayOfMonth, getFullYear, getLocale, getMonth, getSetGlobalLocale, glLocale, heLocale, hiLocale, hrLocale, huLocale, idLocale, isAfter, isArray, isBefore, isDate, isDateValid, isDisabledDay, isFirstDayOfWeek, isSame, isSameDay, isSameMonth, isSameYear, itLocale, jaLocale, kaLocale, kkLocale, koLocale, listLocales, ltLocale, lvLocale, mnLocale, nbLocale, nlBeLocale, nlLocale, parseDate, plLocale, ptBrLocale, roLocale, ruLocale, setFullDate, shiftDate, skLocale, slLocale, sqLocale, startOf, subtract, svLocale, thBeLocale, thLocale, trLocale, ukLocale, updateLocale, utcAsLocal, viLocale, zhCnLocale, createDate as ɵa };\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}